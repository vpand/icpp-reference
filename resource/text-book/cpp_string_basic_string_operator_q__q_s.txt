std::literals::string_literals::operator""s

   From cppreference.com
   < cpp | string | basic string

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string
   Member functions
   basic_string::basic_string
   basic_string::~basic_string
   basic_string::operator=
   basic_string::assign
   basic_string::assign_range
   (C++23)
   basic_string::get_allocator
   Element access
   basic_string::at
   basic_string::operator[]
   basic_string::front
   (DR*)
   basic_string::back
   (DR*)
   basic_string::data
   basic_string::c_str
   basic_string::operator
    basic_string_view
   (C++17)
   Iterators
   basic_string::beginbasic_string::cbegin
   (C++11)
   basic_string::endbasic_string::cend
   (C++11)
   basic_string::rbeginbasic_string::crbegin
   (C++11)
   basic_string::rendbasic_string::crend
   (C++11)
   Capacity
   basic_string::empty
   basic_string::sizebasic_string::length
   basic_string::max_size
   basic_string::reserve
   basic_string::capacity
   basic_string::shrink_to_fit
   (DR*)
   Modifiers
   basic_string::clear
   basic_string::insert
   basic_string::insert_range
   (C++23)
   basic_string::erase
   basic_string::push_back
   basic_string::pop_back
   (DR*)
   basic_string::append
   basic_string::append_range
   (C++23)
   basic_string::operator+=
   basic_string::replace
   basic_string::replace_with_range
   (C++23)
   basic_string::copy
   basic_string::resize
   basic_string::resize_and_overwrite
   (C++23)
   basic_string::swap
   Search
   basic_string::find
   basic_string::rfind
   basic_string::find_first_of
   basic_string::find_first_not_of
   basic_string::find_last_of
   basic_string::find_last_not_of
   Operations
   basic_string::compare
   basic_string::starts_with
   (C++20)
   basic_string::ends_with
   (C++20)
   basic_string::contains
   (C++23)
   basic_string::substr
   Constants
   basic_string::npos
   Non-member functions
   operator+
   swap(std::basic_string)
   erase(std::basic_string)erase_if(std::basic_string)
   (C++20)(C++20)
   I/O
   operator<<operator>>
   getline
   Comparison
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   Numeric conversions
   stoistolstoll
   (C++11)(C++11)(C++11)
   stoulstoull
   (C++11)(C++11)
   stofstodstold
   (C++11)(C++11)(C++11)
   to_string
   (C++11)
   to_wstring
   (C++11)
   Literals
   operator""s
   (C++14)
   Helper classes
   hash<std::basic_string>
   (C++11)
   Deduction guides (C++17)

   Defined in header <string>
   std::string operator""s( const char* str, std::size_t len );
   (1) (since C++14)
   (constexpr since C++20)
   constexpr std::u8string operator""s( const char8_t* str, std::size_t
   len );
   (2) (since C++20)
   std::u16string operator""s( const char16_t* str, std::size_t len );
   (3) (since C++14)
   (constexpr since C++20)
   std::u32string operator""s( const char32_t* str, std::size_t len );
   (4) (since C++14)
   (constexpr since C++20)
   std::wstring operator""s( const wchar_t* str, std::size_t len );
   (5) (since C++14)
   (constexpr since C++20)

   Forms a string literal of the desired type.
   1) Returns std::string{str, len}.
   2) Returns std::u8string{str, len}.
   3) Returns std::u16string{str, len}.
   4) Returns std::u32string{str, len}.
   5) Returns std::wstring{str, len}.

Parameters

   str - pointer to the beginning of the raw character array literal
   len - length of the raw character array literal

Return value

   The string literal.

Notes

   These operators are declared in the namespace
   std::literals::string_literals, where both literals and string_literals
   are inline namespaces. Access to these operators can be gained with
   either
     * using namespace std::literals, or
     * using namespace std::string_literals, or
     * using namespace std::literals::string_literals.

   std::chrono::duration also defines operator""s, to represent literal
   seconds, but it is an arithmetic literal: 10.0s and 10s are ten
   seconds, but "10"s is a string.
   Feature-test macro Value Std Feature
   __cpp_lib_string_udls 201304L (C++14) User-defined literals for string
   types

Example

   Run this code
#include <iostream>
#include <string>

void print_with_zeros(auto const note, std::string const& s)
{
    std::cout << note;
    for (const char c : s)
        c ? std::cout << c : std::cout << "_0";
    std::cout << " (size = " << s.size() << ")\n";
}

int main()
{
    using namespace std::string_literals;

    std::string s1 = "abc\0\0def";
    std::string s2 = "abc\0\0def"s;
    print_with_zeros("s1: ", s1);
    print_with_zeros("s2: ", s2);

    std::cout << "abcdef"s.substr(1,4) << '\n';
}

   Output:
s1: abc (size = 3)
s2: abc_0_0def (size = 8)
bcde

See also

   (constructor)
   constructs a basic_string
   (public member function)
   operator""sv
   (C++17)
   creates a string view of a character array literal
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing/operator%22%22s&oldid=171032"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 April 2024, at 12:00.
     * This page has been accessed 329,619 times.
