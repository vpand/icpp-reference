std::type_info::operator==, std::type_info::operator!=

   From cppreference.com
   < cpp | types | type info

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Type support
   Basic types
   Fixed width integer types (C++11)
   Fixed width floating-point types (C++23)
   ptrdiff_t
   size_t
   max_align_t
   (C++11)
   byte
   (C++17)
   nullptr_t
   (C++11)
   offsetof
   NULL
   Numeric limits
   numeric_limits
   C numeric limits interface
   Runtime type information
   type_info
   type_index
   (C++11)
   bad_typeid
   bad_cast

   std::type_info
   Member functions
   type_info::~type_info
   type_info::operator==type_info::operator!=
   (until C++20)
   type_info::before
   type_info::hash_code
   (C++11)
   type_info::name

   (1)
   bool operator==( const type_info& rhs ) const;
   (until C++11)
   bool operator==( const type_info& rhs ) const noexcept;
   (since C++11)
   (until C++23)
   constexpr bool operator==( const type_info& rhs ) const noexcept;
   (since C++23)
   (2)
   bool operator!=( const type_info& rhs ) const;
   (until C++11)
   bool operator!=( const type_info& rhs ) const noexcept;
   (since C++11)
   (until C++20)

   Checks if the objects refer to the same types.

   The != operator is synthesized from operator==.
   (since C++20)

Parameters

   rhs - another type information object to compare to

Return value

   true if the comparison operation holds true, false otherwise.

Notes

   Feature-test macro Value Std Feature
   __cpp_lib_constexpr_typeinfo 202106L (C++23) Constexpr for
   std::type_info::operator==

Example

   Run this code
#include <iostream>
#include <string>
#include <typeinfo>
#include <utility>

class person
{
public:
    explicit person(std::string n) : name_(std::move(n)) {}
    virtual const std::string& name() const { return name_; }

private:
    std::string name_;
};

class employee : public person
{
public:
    employee(std::string n, std::string p)
        : person(std::move(n)), profession_(std::move(p)) {}

    const std::string& profession() const { return profession_; }

private:
    std::string profession_;
};

void print_info(const person& p)
{
    if (typeid(person) == typeid(p))
        std::cout << p.name() << " is not an employee\n";
    else if (typeid(employee) == typeid(p))
    {
        std::cout << p.name() << " is an employee ";
        auto& emp = dynamic_cast<const employee&>(p);
        std::cout << "who works in " << emp.profession() << '\n';
    }
}

int main()
{
    print_info(employee{"Paul","Economics"});
    print_info(person{"Kate"});

#if __cpp_lib_constexpr_typeinfo
    if constexpr (typeid(employee) != typeid(person)) // C++23
        std::cout << "class `employee` != class `person`\n";
#endif
}

   Possible output:
Paul is an employee who works in Economics
Kate is not an employee
class `employee` != class `person`

See also

   before
   checks whether the referred type precedes referred type of another
   type_info
   object in the implementation defined order, i.e. orders the referred
   types
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/types/type_info/
   operator_cmp&oldid=161311"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 24 October 2023, at 12:40.
     * This page has been accessed 69,541 times.
