std::array<T,N>::rend, std::array<T,N>::crend

   From cppreference.com
   < cpp | container | array


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::array
   Member types
   Member functions
   Element access
   array::at
   array::operator[]
   array::front
   array::back
   array::data
   Iterators
   array::beginarray::cbegin
   array::endarray::cend
   array::rbeginarray::crbegin
   array::rendarray::crend
   Capacity
   array::empty
   array::size
   array::max_size
   Operations
   array::fill
   array::swap
   Non-member functions
   get(std::array)
   (C++11)
   swap(std::array)
   (C++11)
   to_array
   (C++20)
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (C++11)(C++11)(until C++20)(C++11)(until C++20)(C++11)(until
   C++20)(C++11)(until C++20)(C++11)(until C++20)(C++20)
   Helper classes
   tuple_size<std::array>
   (C++11)
   tuple_element<std::array>
   (C++11)
   Deduction guides (C++17)

   reverse_iterator rend() noexcept;
   (1) (since C++11)
   (constexpr since C++17)
   const_reverse_iterator rend() const noexcept;
   (2) (since C++11)
   (constexpr since C++17)
   const_reverse_iterator crend() const noexcept;
   (3) (since C++11)
   (constexpr since C++17)

   Returns a reverse iterator to the element following the last element of
   the reversed array. It corresponds to the element preceding the first
   element of the non-reversed array. This element acts as a placeholder,
   attempting to access it results in undefined behavior.

   range-rbegin-rend.svg

Parameters

   (none)

Return value

   Reverse iterator to the element following the last element.

Complexity

   Constant.

Example

   Run this code
#include <algorithm>
#include <array>
#include <iostream>

int main()
{
    std::array<int, 11> a{1, 11, 11, 35, 0, 12, 79, 76, 76, 69, 40};

    // print elements of array in reverse order using const_reverse_iterator`s
    std::for_each(a.crbegin(), a.crend(), [](int e){ std::cout << e << ' '; });
    //              ^^           ^^
    std::cout << '\n';

    // modify each element of array using non-const reverse_iterator`s
    std::for_each(a.rbegin(), a.rend(), [](int& e){ e += 32; });
    //              ^           ^             ^

    // print elements as chars in reverse order using const_reverse_iterator`s
    std::for_each(a.crbegin(), a.crend(), [](char e){ std::cout << e; });
    //              ^^           ^^          ^^^^
    std::cout << '\n';
}

   Output:
40 69 76 76 79 12 0 35 11 11 1
Hello, C++!

See also

   rbegincrbegin
   returns a reverse iterator to the beginning
   (public member function)
   rendcrend
   (C++14)
   returns a reverse end iterator for a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/array/
   rend&oldid=122727"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 September 2020, at 08:54.
     * This page has been accessed 29,969 times.
