ATOMIC_*_LOCK_FREE

   From cppreference.com
   < c | atomic

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <stdatomic.h>
   #define ATOMIC_BOOL_LOCK_FREE     /* implementation-defined */

   #define ATOMIC_CHAR_LOCK_FREE     /* implementation-defined */
   #define ATOMIC_CHAR16_T_LOCK_FREE /* implementation-defined */
   #define ATOMIC_CHAR32_T_LOCK_FREE /* implementation-defined */
   #define ATOMIC_WCHAR_T_LOCK_FREE  /* implementation-defined */
   #define ATOMIC_SHORT_LOCK_FREE    /* implementation-defined */
   #define ATOMIC_INT_LOCK_FREE      /* implementation-defined */
   #define ATOMIC_LONG_LOCK_FREE     /* implementation-defined */
   #define ATOMIC_LLONG_LOCK_FREE    /* implementation-defined */
   #define ATOMIC_POINTER_LOCK_FREE  /* implementation-defined */
                                                                 (since C11)
   #define ATOMIC_CHAR8_T_LOCK_FREE  /* implementation-defined */
                                                                 (since C23)

   Expands to preprocessor constant expressions that evaluate to either 0,
   1, or 2 which indicate the lock-free property of the corresponding
   atomic types (both signed and unsigned).
   Value Explanation
   0     The atomic type is never lock-free
   1     The atomic type is sometimes lock-free
   2     The atomic type is always lock-free

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.17.1/3 atomic lock-free macros (p: 200)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.17.1/3 atomic lock-free macros (p: 273)

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/atomic/ATOMIC_LOCK
   _FREE_consts&oldid=140850"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 July 2022, at 20:02.
     * This page has been accessed 34,653 times.
