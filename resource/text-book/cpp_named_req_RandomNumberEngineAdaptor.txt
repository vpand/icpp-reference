C++ named requirements: RandomNumberEngineAdaptor (since C++11)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   A RandomNumberEngineAdaptor is a RandomNumberEngine that transforms the
   output of another RandomNumberEngine, the latter of which is termed a
   base engine.

Requirements

   Given
     * B, a RandomNumberEngine
     * b, an object of type B
     * A, a RandomNumberEngineAdaptor, adapting B as a base engine
     * a, an object of type A

   function semantics
   A::A(); The base engine is initialized as if by its default
   constructor.
   bool operator==(const A& lhs, const A& rhs); Returns whether lhs's base
   engine is equal to rhs's base engine or not.
   A::A(result_type s); The base engine is initialized with s.
   template<class Sseq> A::A(Sseq& q); The base engine is initialized with
   q.
   void seed(); Invokes b.seed().
   void seed(result_type s); Invokes b.seed(s).
   template<class Sseq> void seed(Sseq& q); Invokes b.seed(q).

   Furthermore
     * The complexity of each function of A does not exceed the complexity
       of the function of B
     * The state of A includes the state of B
     * The size of A's state is no less than the size of b
     * Copying A's state includes copying B's state
     * The textual representation of A includes the textual representation
       of B

Standard library

   The following standard library facilities satisfy
   RandomNumberEngineAdaptor:
   discard_block_engine
   (C++11)
   discards some output of a random number engine
   (class template)
   independent_bits_engine
   (C++11)
   packs the output of a random number engine into blocks of a specified
   number of bits
   (class template)
   shuffle_order_engine
   (C++11)
   delivers the output of a random number engine in a different order
   (class template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/Random
   NumberEngineAdaptor&oldid=144928"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 November 2022, at 13:19.
     * This page has been accessed 13,283 times.
