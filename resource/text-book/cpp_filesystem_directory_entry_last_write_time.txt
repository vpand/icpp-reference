std::filesystem::directory_entry::last_write_time

   From cppreference.com
   < cpp | filesystem | directory entry

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Filesystem library
   Classes
   filesystem::path
   filesystem::filesystem_error
   filesystem::directory_entry
   filesystem::directory_iterator
   filesystem::recursive_directory_iterator

   filesystem::file_status
   filesystem::space_info
   filesystem::file_type
   filesystem::perms
   filesystem::perm_options
   filesystem::copy_options
   filesystem::directory_options
   filesystem::file_time_type
   Functions
   filesystem::absolute
   filesystem::canonicalfilesystem::weakly_canonical
   filesystem::relativefilesystem::proximate
   filesystem::copy
   filesystem::copy_file
   filesystem::copy_symlink
   filesystem::create_directory
   filesystem::create_directories
   filesystem::create_hard_link
   filesystem::create_symlink
   filesystem::create_directory_symlink
   filesystem::current_path
   filesystem::exists
   filesystem::equivalent
   filesystem::file_size
   filesystem::hard_link_count
   filesystem::last_write_time
   filesystem::permissions
   filesystem::read_symlink
   filesystem::remove
   filesystem::remove_all
   filesystem::rename
   filesystem::resize_file
   filesystem::space
   filesystem::status
   filesystem::symlink_status
   filesystem::temp_directory_path
   File types
   filesystem::is_block_file
   filesystem::is_character_file
   filesystem::is_directory
   filesystem::is_empty
   filesystem::status_known
   filesystem::is_fifo
   filesystem::is_other
   filesystem::is_regular_file
   filesystem::is_socket
   filesystem::is_symlink

   std::filesystem::directory_entry
   Member functions
   directory_entry::directory_entry
   Modifiers
   directory_entry::operator=
   directory_entry::assign
   directory_entry::replace_filename
   directory_entry::refresh
   Observers
   directory_entry::pathdirectory_entry::operator const path&
   directory_entry::exists
   directory_entry::is_block_file
   directory_entry::is_character_file
   directory_entry::is_directory
   directory_entry::is_fifo
   directory_entry::is_other
   directory_entry::is_regular_file
   directory_entry::is_socket
   directory_entry::is_symlink
   directory_entry::file_size
   directory_entry::hard_link_count
   directory_entry::last_write_time
   directory_entry::statusdirectory_entry::symlink_status
   directory_entry::operator==directory_entry::operator!=directory_entry::
   operator<directory_entry::operator>directory_entry::operator<=directory
   _entry::operator>=directory_entry::operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   Non-member functions
   operator<<

   std::filesystem::file_time_type last_write_time() const;
   (1) (since C++17)
   std::filesystem::file_time_type last_write_time( std::error_code& ec )
   const noexcept;
   (2) (since C++17)

   If the last modification time is cached in this directory_entry,
   returns the cached value. Otherwise, returns:
   1) std::filesystem::last_write_time(path()).
   2) std::filesystem::last_write_time(path(), ec).

Parameters

   ec - out-parameter for error reporting in the non-throwing overload

Return value

   The last modification time for the referred-to filesystem object.

Exceptions

   Any overload not marked noexcept may throw std::bad_alloc if memory
   allocation fails.
   1) Throws std::filesystem::filesystem_error on underlying OS API
   errors, constructed with p as the first path argument and the OS error
   code as the error code argument.
   2) Sets a std::error_code& parameter to the OS API error code if an OS
   API call fails, and executes ec.clear() if no errors occur.

Example

   Run this code
#include <chrono>
#include <ctime>
#include <filesystem>
#include <format>
#include <iostream>
#include <string>

std::string to_string(const std::filesystem::file_time_type& ftime)
{
#if __cpp_lib_format
    return std::format("{:%c}", ftime);
#else
    std::time_t cftime = std::chrono::system_clock::to_time_t(
        std::chrono::file_clock::to_sys(ftime));
    std::string str = std::asctime(std::localtime(&cftime));
    str.pop_back(); // rm the trailing '\n' put by `asctime`
    return str;
#endif
}

int main()
{
    auto dir = std::filesystem::current_path();
    using Entry = std::filesystem::directory_entry;
    for (Entry const& entry : std::filesystem::directory_iterator(dir))
        std::cout << to_string(entry.last_write_time()) << " : "
                  << entry.path().filename() << '\n';
}

   Possible output:
Wed Sep  6 13:37:13.960314156 2023 : "main.cpp"
Wed Sep  6 13:37:42.690271828 2023 : "a.out"

See also

   last_write_time
   (C++17)
   gets or sets the time of the last data modification
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/filesystem/direc
   tory_entry/last_write_time&oldid=158087"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 September 2023, at 06:42.
     * This page has been accessed 23,746 times.
