std::basic_string_view<CharT,Traits>::data

   From cppreference.com
   < cpp | string | basic string view

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string_view
   Member functions
   basic_string_view::basic_string_view

   basic_string_view::operator=
   Iterators
   basic_string_view::beginbasic_string_view::cbegin
   basic_string_view::endbasic_string_view::cend
   basic_string_view::rbeginbasic_string_view::crbegin
   basic_string_view::rendbasic_string_view::crend
   Element access
   basic_string_view::at
   basic_string_view::operator[]
   basic_string_view::front
   basic_string_view::back
   basic_string_view::data
   Capacity
   basic_string_view::sizebasic_string_view::length
   basic_string_view::max_size
   basic_string_view::empty
   Modifiers
   basic_string_view::remove_prefix
   basic_string_view::remove_suffix
   basic_string_view::swap
   Operations
   basic_string_view::copy
   basic_string_view::substr
   basic_string_view::compare
   basic_string_view::starts_with
   (C++20)
   basic_string_view::ends_with
   (C++20)
   basic_string_view::contains
   (C++23)
   basic_string_view::find
   basic_string_view::rfind
   basic_string_view::find_first_of
   basic_string_view::find_last_of
   basic_string_view::find_first_not_of
   basic_string_view::find_last_not_of
   Constants
   basic_string_view::npos
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator<<
   operator""sv
   Helper classes
   hash<std::string_view>hash<std::wstring_view>hash<std::u8string_view>ha
   sh<std::u16string_view>hash<std::u32string_view>
   (C++20)
   Deduction guides(C++20)

   constexpr const_pointer data() const noexcept;
                                                 (since C++17)

   Returns a pointer to the underlying character array. The pointer is
   such that the range [data(), data() + size()) is valid and the values
   in it correspond to the values of the view.

Parameters

   (none)

Return value

   A pointer to the underlying character array.

Complexity

   Constant.

Notes

   Unlike std::basic_string::data() and string literals,
   std::basic_string_view::data() returns a pointer to a buffer that is
   not necessarily null-terminated, for example a substring view (e.g.
   from remove_suffix). Therefore, it is typically a mistake to pass
   data() to a routine that takes just a const CharT* and expects a
   null-terminated string.

Example

   Run this code
#include <cstring>
#include <cwchar>
#include <iostream>
#include <string>
#include <string_view>

int main()
{
    std::wstring_view wcstr_v = L"xyzzy";
    std::cout << std::wcslen(wcstr_v.data()) << '\n';
    // OK: the underlying character array is null-terminated

    char array[3] = {'B', 'a', 'r'};
    std::string_view array_v(array, sizeof array);
    // std::cout << std::strlen(array_v.data()) << '\n';
    // error: the underlying character array is not null-terminated

    std::string str(array_v.data(), array_v.size()); // OK
    std::cout << std::strlen(str.data()) << '\n';
    // OK: the underlying character array of a std::string is always null-termin
ated
}

   Output:
5
3

See also

   front
   accesses the first character
   (public member function)
   back
   accesses the last character
   (public member function)
   data
   returns a pointer to the first character of a string
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing_view/data&oldid=152778"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 4 June 2023, at 08:05.
     * This page has been accessed 105,420 times.
