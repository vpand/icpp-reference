std::btowc

   From cppreference.com
   < cpp | string | multibyte

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated multibyte strings
   Wide/multibyte conversions
   mbsinit
   mbtowc
   mbstowcs
   btowc
   mbrtowc
   mbsrtowcs
   mbrtoc8
   (C++20)
   mbrtoc16
   (C++11)
   mbrtoc32
   (C++11)
   mblen
   wctomb
   wcstombs
   wctob
   wcrtomb
   wcsrtombs
   c8rtomb
   (C++20)
   c16rtomb
   (C++11)
   c32rtomb
   (C++11)
   mbrlen
   Types
   mbstate_t

   Defined in header <cwchar>
   std::wint_t btowc( int c );

   Widens a single-byte character c to its wide character equivalent.

   Most multibyte character encodings use single-byte codes to represent
   the characters from the ASCII character set. This function may be used
   to convert such characters to wchar_t.

Parameters

   c - single-byte character to widen

Return value

   WEOF if c is EOF.

   Wide character representation of c if (unsigned char)c is a valid
   single-byte character in the initial shift state, WEOF otherwise.

Example

   Run this code
#include <clocale>
#include <cwchar>
#include <iostream>

void try_widen(char c)
{
    std::wint_t w = std::btowc(c);
    if (w != WEOF)
        std::cout << "The single-byte character " << +(unsigned char)c
                  << " widens to " << +w << '\n';
    else
        std::cout << "The single-byte character " << +(unsigned char)c
                  << " failed to widen\n";
}

int main()
{
    std::setlocale(LC_ALL, "lt_LT.iso88594");
    std::cout << std::hex << std::showbase << "In Lithuanian ISO-8859-4 locale:\
n";
    try_widen('A');
    try_widen('\xdf'); // German letter ß (U+00df) in ISO-8859-4
    try_widen('\xf9'); // Lithuanian letter u (U+0173) in ISO-8859-4

    std::setlocale(LC_ALL, "lt_LT.utf8");
    std::cout << "In Lithuanian UTF-8 locale:\n";
    try_widen('A');
    try_widen('\xdf');
    try_widen('\xf9');
}

   Possible output:
In Lithuanian ISO-8859-4 locale:
The single-byte character 0x41 widens to 0x41
The single-byte character 0xdf widens to 0xdf
The single-byte character 0xf9 widens to 0x173
In Lithuanian UTF-8 locale:
The single-byte character 0x41 widens to 0x41
The single-byte character 0xdf failed to widen
The single-byte character 0xf9 failed to widen

See also

   wctob
   narrows a wide character to a single-byte narrow character, if possible
   (function)
   do_widen
   [virtual]
   converts a character or characters from char to CharT
   (virtual protected member function of std::ctype<CharT>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/multibyte
   /btowc&oldid=153036"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 June 2023, at 02:06.
     * This page has been accessed 25,529 times.
