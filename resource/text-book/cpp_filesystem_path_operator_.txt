std::filesystem::path::operator=

   From cppreference.com
   < cpp | filesystem | path

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Filesystem library
   Classes
   filesystem::path
   filesystem::filesystem_error
   filesystem::directory_entry
   filesystem::directory_iterator
   filesystem::recursive_directory_iterator

   filesystem::file_status
   filesystem::space_info
   filesystem::file_type
   filesystem::perms
   filesystem::perm_options
   filesystem::copy_options
   filesystem::directory_options
   filesystem::file_time_type
   Functions
   filesystem::absolute
   filesystem::canonicalfilesystem::weakly_canonical
   filesystem::relativefilesystem::proximate
   filesystem::copy
   filesystem::copy_file
   filesystem::copy_symlink
   filesystem::create_directory
   filesystem::create_directories
   filesystem::create_hard_link
   filesystem::create_symlink
   filesystem::create_directory_symlink
   filesystem::current_path
   filesystem::exists
   filesystem::equivalent
   filesystem::file_size
   filesystem::hard_link_count
   filesystem::last_write_time
   filesystem::permissions
   filesystem::read_symlink
   filesystem::remove
   filesystem::remove_all
   filesystem::rename
   filesystem::resize_file
   filesystem::space
   filesystem::status
   filesystem::symlink_status
   filesystem::temp_directory_path
   File types
   filesystem::is_block_file
   filesystem::is_character_file
   filesystem::is_directory
   filesystem::is_empty
   filesystem::status_known
   filesystem::is_fifo
   filesystem::is_other
   filesystem::is_regular_file
   filesystem::is_socket
   filesystem::is_symlink

   std::filesystem::path
   Constants
   path::native_formatpath::generic_formatpath::auto_format
   Member functions
   path::path
   path::~path
   path::operator=
   path::assign
   path::appendpath::operator/=
   path::concatpath::operator+=
   path::clear
   path::make_preferred
   path::remove_filename
   path::replace_filename
   path::replace_extension

   path::swap
   path::compare
   path::beginpath::end
   path::c_strpath::nativepath::operator string_type
   path::stringpath::u8stringpath::u16stringpath::u32stringpath::wstring
   path::generic_stringpath::generic_u8stringpath::generic_u16stringpath::
   generic_u32stringpath::generic_wstring
   path::lexically_normalpath::lexically_relativepath::lexically_proximate
   Path decomposition
   path::root_name
   path::root_directory
   path::root_path
   path::relative_path
   path::parent_path
   path::filename
   path::stem
   path::extension
   path::empty
   path::has_root_pathpath::has_root_namepath::has_root_directorypath::has
   _relative_pathpath::has_parent_pathpath::has_filenamepath::has_stempath
   ::has_extension
   path::is_absolutepath::is_relative
   Non-member functions
   operator==operator!=operator<operator<=operator>operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator/
   operator<<operator>>
   swap(std::filesystem::path)
   hash_value
   u8path
   Helper Classes
   hash<std::filesystem::path>
   formatter<std::filesystem::path>
   (C++26)

   path& operator=( const path& p );
   (1)                                     (since C++17)
   path& operator=( path&& p ) noexcept;
   (2)                                     (since C++17)
   path& operator=( string_type&& source );
   (3)                                     (since C++17)
   template< class Source >
   path& operator=( const Source& source );
   (4)                                     (since C++17)
   1) Replaces the contents of *this with a pathname whose both native and
   generic format representations equal those of p.
   2) Replaces the contents of *this with a pathname whose both native and
   generic format representations equal those of p, possibly using move
   semantics: p is left in a valid, but unspecified state.
   3) Replaces the contents of *this with a new path value constructed
   from detected-format source, which is left in valid, but unspecified
   state. Equivalent to assign(std::move(source)).
   4) Replaces the contents of *this with a new path value constructed
   from detected-format source as if by overload (4) of the path
   constructor. Equivalent to assign(source).

   (4) participates in overload resolution only if Source and path are not
   the same type, and either:
     * Source is a specialization of std::basic_string or
       std::basic_string_view, or
     * std::iterator_traits<std::decay_t<Source>>::value_type is valid and
       denotes a possibly const-qualified encoding character type (char,
       char8_t, (since C++20)char16_t, char32_t, or wchar_t).

Parameters

   p - a path to assign
   source - a std::basic_string, std::basic_string_view, pointer to a
   null-terminated character/wide character string, or an input iterator
   that points to a null-terminated character/wide character sequence. The
   character type must be one of char, char8_t, (since C++20)char16_t,
   char32_t, wchar_t

Return value

   *this

Example

   Run this code
#include <filesystem>
namespace fs = std::filesystem;

int main()
{
    fs::path p = "C:/users/abcdef/AppData/Local";
    p = p / "Temp"; // move assignment
    const wchar_t* wstr = L"D:/«.txt";
    p = wstr; // assignment from a source
}

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 3244 C++17 constraint that Source cannot be path was missing added

See also

   assign
   assigns contents
   (public member function)
   (constructor)
   constructs a path
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/filesystem/path/
   operator%3D&oldid=158063"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 September 2023, at 02:49.
     * This page has been accessed 25,890 times.
