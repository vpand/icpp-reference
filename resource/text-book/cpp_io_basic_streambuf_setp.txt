std::basic_streambuf<CharT,Traits>::setp

   From cppreference.com
   < cpp | io | basic streambuf

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Input/output library
   I/O manipulators
   Print functions (C++23)
   C-style I/O
   Buffers
   basic_streambuf
   basic_filebuf
   basic_stringbuf
   basic_spanbuf
   (C++23)
   strstreambuf
   (C++98/26*)
   basic_syncbuf
   (C++20)
   Streams
   Abstractions
   ios_base
   basic_ios
   basic_istream
   basic_ostream
   basic_iostream
   File I/O
   basic_ifstream
   basic_ofstream
   basic_fstream
   String I/O
   basic_istringstream
   basic_ostringstream
   basic_stringstream
   Array I/O
   basic_ispanstream
   (C++23)
   basic_ospanstream
   (C++23)
   basic_spanstream
   (C++23)
   istrstream
   (C++98/26*)
   ostrstream
   (C++98/26*)
   strstream
   (C++98/26*)
   Synchronized Output
   basic_osyncstream
   (C++20)
   Types
   streamoff
   streamsize
   fpos
   Error category interface
   iostream_category
   (C++11)
   io_errc
   (C++11)

   std::basic_streambuf
   Public member functions
   basic_streambuf::~basic_streambuf

   Locales
   basic_streambuf::pubimbue
   basic_streambuf::getloc
   Positioning
   basic_streambuf::pubsetbuf
   basic_streambuf::pubseekoff
   basic_streambuf::pubseekpos
   basic_streambuf::pubsync
   Get area
   basic_streambuf::in_avail
   basic_streambuf::snextc
   basic_streambuf::sbumpc
   basic_streambuf::sgetc
   basic_streambuf::sgetn
   Put area
   basic_streambuf::sputc
   basic_streambuf::sputn
   Putback
   basic_streambuf::sputbackc
   basic_streambuf::sungetc
   Protected member functions
   basic_streambuf::basic_streambuf
   basic_streambuf::operator=
   (C++11)
   basic_streambuf::swap
   (C++11)
   Locales
   basic_streambuf::imbue
   Positioning
   basic_streambuf::setbuf
   basic_streambuf::seekoff
   basic_streambuf::seekpos
   basic_streambuf::sync
   Get area
   basic_streambuf::showmanyc
   basic_streambuf::underflow
   basic_streambuf::uflow
   basic_streambuf::xsgetn
   basic_streambuf::ebackbasic_streambuf::gptrbasic_streambuf::egptr
   basic_streambuf::gbump
   basic_streambuf::setg
   Put area
   basic_streambuf::xsputn
   basic_streambuf::overflow
   basic_streambuf::pbasebasic_streambuf::pptrbasic_streambuf::epptr
   basic_streambuf::pbump
   basic_streambuf::setp
   Putback
   basic_streambuf::pbackfail

   protected:
   void setp( char_type* pbeg, char_type* pend );

   Sets the values of the pointers defining the put area. Specifically,
   after the call pbase() == pbeg, pptr() == pbeg, epptr() == pend.

Parameters

   pbeg - pointer to the new beginning of the put area
   pend - pointer to the new end of the put area

Return value

   (none)

Example

   Run this code
#include <array>
#include <cstddef>
#include <iostream>

// Buffer for std::ostream implemented by std::array
template<std::size_t size, class CharT = char>
struct ArrayedStreamBuffer : std::basic_streambuf<CharT>
{
    using Base = std::basic_streambuf<CharT>;
    using char_type = typename Base::char_type;

    ArrayedStreamBuffer()
    {
        // put area pointers to work with 'buffer'
        Base::setp(buffer.data(), buffer.data() + size);
    }

    void print_buffer()
    {
        for (char_type i : buffer)
        {
            if (i == 0)
                std::cout << "\\0";
            else
                std::cout << i;
            std::cout << ' ';
        }
        std::cout << '\n';
    }

private:
    std::array<char_type, size> buffer{}; // value-initialize buffer
};

int main()
{
    ArrayedStreamBuffer<10> streambuf;
    std::ostream stream(&streambuf);

    stream << "hello";
    stream << ",";

    streambuf.print_buffer();
}

   Output:
h e l l o , \0 \0 \0 \0

See also

   setg
   repositions the beginning, next, and end pointers of the input sequence
   (protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/io/basic_streamb
   uf/setp&oldid=168471"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 January 2024, at 04:49.
     * This page has been accessed 31,954 times.
