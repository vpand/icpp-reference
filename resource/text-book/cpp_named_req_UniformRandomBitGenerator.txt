C++ named requirements: UniformRandomBitGenerator (since C++11)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   A uniform random bit generator is a function object returning unsigned
   integer values such that each value in the range of possible results
   has (ideally) equal probability.

   Uniform random bit generators are not intended to be used as random
   number generators: they are used as the source of random bits
   (generated in bulk, for efficiency). Any uniform random bit generator
   may be plugged into any random number distribution in order to obtain a
   random number (formally, a random variate).

Requirements

   The type G satisfies UniformRandomBitGenerator if

   Given g, a value of type G, all following conditions are satisfied:
     * G::result_type is valid, and denotes an unsigned integer type.
     * The following expressions must be valid and have their specified
       effects:

   (until C++20)
    Expression        Type      Requirements
   G::min()     G::result_type
     * Returns the smallest value that G's operator() may return.
     * The return value is strictly less than G::max().
     * The function must be constexpr.

   G::max()     G::result_type
     * Returns the largest value that G's operator() may return.
     * The return value is strictly greater than G::min().
     * The function must be constexpr.

   g()          G::result_type
     * Returns a value in the closed interval [G::min(), G::max()].
     * Has amortized constant complexity.

   All following conditions are satisfied:
     * G models uniform_random_bit_generator.
     * std::invoke_result_t<G&> is an unsigned integer type.
     * G provides a nested typedef name result_type, which denotes the
       same type as std::invoke_result_t<G&>.

   (since C++20)

Notes

   All RandomNumberEngines satisfy this requirement.

Standard library

   The following standard library facilities expect a
   UniformRandomBitGenerator type.
   random_shuffleshuffle
   (until C++17)(C++11)
   randomly re-orders elements in a range
   (function template)
   sample
   (C++17)
   selects N random elements from a sequence
   (function template)
   generate_canonical
   (C++11)
   evenly distributes real values of given precision across [0, 1)
   (function template)
   uniform_int_distribution
   (C++11)
   produces integer values evenly distributed across a range
   (class template)
   uniform_real_distribution
   (C++11)
   produces real values evenly distributed across a range
   (class template)
   all other random number distributions

   The following standard library facilities satisfy
   UniformRandomBitGenerator without additionally satisfying
   RandomNumberEngine:
   random_device
   (C++11)
   non-deterministic random number generator using hardware entropy source
   (class)

See also

   uniform_random_bit_generator
   (C++20)
   specifies that a type qualifies as a uniform random bit generator
   (concept)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/Unifor
   mRandomBitGenerator&oldid=162398"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 November 2023, at 22:51.
     * This page has been accessed 83,995 times.
