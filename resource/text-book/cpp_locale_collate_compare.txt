std::collate<CharT>::compare, std::collate<CharT>::do_compare

   From cppreference.com
   < cpp | locale | collate

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::collate
   Member functions
   collate::collate
   collate::~collate
   collate::comparecollate::do_compare
   collate::transformcollate::do_transform
   collate::hashcollate::do_hash

   Defined in header <locale>
   public:

   int compare( const CharT* low1, const CharT* high1,
                const CharT* low2, const CharT* high2 ) const;
   (1)
   protected:

   virtual int do_compare( const CharT* low1, const CharT* high1,
                           const CharT* low2, const CharT* high2 ) const;
   (2)
   1) Public member function, calls the protected virtual member function
   do_compare of the most derived class.
   2) Compares the character sequence [low1, high1) to the character
   sequence [low2, high2), using this locale's collation rules, and
   returns 1 if the first string follows the second, -1 if the first
   string precedes the second, zero if the two strings are equivalent.

Parameters

   low1  - pointer to the first character of the first string
   high1 - one past the end pointer for the first string
   low2  - pointer to the first character of the second string
   high2 - one past the end pointer for the second string

Return value

   1 if the first string is greater than the second (that is, follows the
   second in the collation order), -1 if the first string is less than the
   second (precedes the second in the collation order), zero if the two
   strings are equivalent.

Notes

   When three-way comparison is not required (such as when providing a
   Compare argument to standard algorithms such as std::sort),
   std::locale::operator() may be more appropriate.

   Collation order is the dictionary order: the position of the letter in
   the national alphabet (its equivalence class) has higher priority than
   its case or variant. Within an equivalence class, lowercase characters
   collate before their uppercase equivalents and locale-specific order
   may apply to the characters with diacritics. In some locales, groups of
   characters compare as single collation units. For example, "ch" in
   Czech follows "h" and precedes "i", and "dzs" in Hungarian follows "dz"
   and precedes "g".

Example

   Run this code
#include <iostream>
#include <locale>
#include <string>

template<typename CharT>
void try_compare(const std::locale& l, const CharT* p1, const CharT* p2)
{
    auto& f = std::use_facet<std::collate<CharT>>(l);

    std::basic_string<CharT> s1(p1), s2(p2);
    if (f.compare(&s1[0], &s1[0] + s1.size(),
                  &s2[0], &s2[0] + s2.size()) < 0)
        std::wcout << p1 << " before " << p2 << '\n';
    else
        std::wcout << p2 << " before " << p1 << '\n';
}

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::wcout.imbue(std::locale());

    std::wcout << "In the American locale: ";
    try_compare(std::locale(), "hrnec", "chrt");
    std::wcout << "In the Czech locale: ";
    try_compare(std::locale("cs_CZ.utf8"), "hrnec", "chrt");

    std::wcout << "In the American locale: ";
    try_compare(std::locale(), L"år", L"ängel");
    std::wcout << "In the Swedish locale: ";
    try_compare(std::locale("sv_SE.utf8"), L"år", L"ängel");
}

   Output:
In the American locale: chrt before hrnec
In the Czech locale: hrnec before chrt
In the American locale: ängel before år
In the Swedish locale: år before ängel

See also

   strcoll
   compares two strings in accordance to the current locale
   (function)
   wcscoll
   compares two wide strings in accordance to the current locale
   (function)
   operator()
   lexicographically compares two strings using this locale's collate
   facet
   (public member function of std::locale)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/collate/c
   ompare&oldid=160059"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 October 2023, at 07:45.
     * This page has been accessed 21,712 times.
