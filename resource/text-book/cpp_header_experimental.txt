Experimental C++ Standard Library headers

   From cppreference.com
   < cpp | header

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Standard library headers
   Language support
   <cstddef>
   <cstdlib>
   <version> (C++20)
   <limits>
   <climits>
   <cfloat>
   <cstdint> (C++11)
   <stdfloat> (C++23)
   <new>
   <typeinfo>
   <source_location> (C++20)
   <exception>
   <initializer_list> (C++11)
   <compare> (C++20)
   <coroutine> (C++20)
   <csignal>
   <csetjmp>
   <cstdarg>
   Concepts
   <concepts> (C++20)
   Diagnostics
   <stdexcept>
   <stacktrace> (C++23)
   <cassert>
   <cerrno>
   <system_error> (C++11)
   Memory management
   <memory>
   <memory_resource> (C++17)
   <scoped_allocator> (C++11)
   Metaprogramming
   <type_traits> (C++11)
   <ratio> (C++11)
   General utilities
   <utility>
   <tuple> (C++11)
   <optional> (C++17)
   <variant> (C++17)
   <any> (C++17)
   <debugging> (C++26)
   <expected> (C++23)
   <bitset>
   <functional>
   <typeindex> (C++11)
   <execution> (C++17)
   <charconv> (C++17)
   <format> (C++20)
   <bit> (C++20)
   Strings
   <string_view> (C++17)
   <string>
   <cctype>
   <cwctype>
   <cstring>
   <cwchar>
   <cuchar> (C++11)
   Containers
   <array> (C++11)
   <deque>
   <forward_list> (C++11)
   <list>
   <vector>
   <map>
   <set>
   <unordered_map> (C++11)
   <unordered_set> (C++11)
   <queue>
   <stack>
   <flat_map> (C++23)
   <flat_set> (C++23)
   <span> (C++20)
   <mdspan> (C++23)
   Iterators
   <iterator>
   Ranges
   <ranges> (C++20)
   <generator> (C++23)
   Algorithms
   <algorithm>
   <numeric>
   Numerics
   <cfenv> (C++11)
   <complex>
   <random> (C++11)
   <valarray>
   <cmath>
   <linalg> (C++26)
   <numbers> (C++20)
   Time
   <chrono> (C++11)
   <ctime>
   Localization
   <locale>
   <clocale>
   <codecvt> (C++11/17/26*)
   <text_encoding> (C++26)
   Input/output
   <iosfwd>
   <iostream>
   <ios>
   <streambuf>
   <istream>
   <ostream>
   <iomanip>
   <print> (C++23)
   <sstream>
   <spanstream> (C++23)
   <fstream>
   <syncstream> (C++20)
   <filesystem> (C++17)
   <cstdio>
   <cinttypes> (C++11)
   <strstream> (C++98/26*)
   Regular expressions
   <regex> (C++11)
   Concurrency support
   <stop_token> (C++20)
   <thread> (C++11)
   <atomic> (C++11)
   <rcu> (C++26)
   <stdatomic.h> (C++23)
   <mutex> (C++11)
   <shared_mutex> (C++14)
   <condition_variable> (C++11)
   <semaphore> (C++20)
   <latch> (C++20)
   <barrier> (C++20)
   <future> (C++11)
   <hazard_pointer> (C++26)
   C compatibility
   <cstdbool> (C++11/17/20*)
   <ccomplex> (C++11/17/20*)
   <ctgmath> (C++11/17/20*)
   <cstdalign> (C++11/17/20*)
   <ciso646> (until C++20)

   Experimental library headers
   Execution P2300
   <experimental/execution>
   Filesystem TS
   <experimental/filesystem>
   Parallelism TS (v1, v2)
   experimental/algorithm
   experimental/execution_policy
   experimental/exception_list
   experimental/numeric
   <experimental/simd>
   experimental/task_block
   Library Fundamentals TS (v1, v2, v3)
   experimental/algorithm
   <experimental/any>
   experimental/array
   experimental/chrono
   experimental/deque
   experimental/forward_list
   <experimental/functional>
   experimental/future
   experimental/iterator
   experimental/list
   experimental/map
   experimental/memory
   <experimental/memory_resource>
   experimental/numeric
   <experimental/optional>
   experimental/propagate_const
   experimental/random
   experimental/ratio
   experimental/regex
   experimental/scope
   experimental/set
   experimental/source_location
   experimental/string
   <experimental/string_view>
   experimental/system_error
   experimental/tuple
   experimental/type_traits
   experimental/unordered_map
   experimental/unordered_set
   experimental/utility
   experimental/vector
   Concurrency TS
   experimental/atomic
   experimental/barrier
   experimental/future
   experimental/latch
   Ranges TS
   <experimental/ranges/algorithm>
   <experimental/ranges/concepts>
   <experimental/ranges/functional>
   <experimental/ranges/iterator>
   <experimental/ranges/random>
   <experimental/ranges/tuple>
   <experimental/ranges/type_traits>
   <experimental/ranges/utility>
   Coroutines TS
   experimental/coroutine
   Networking TS
   experimental/buffer
   experimental/executor
   experimental/internet
   experimental/io_context
   <experimental/net>
   experimental/netfwd
   experimental/socket
   experimental/timer
   Reflection TS
   <experimental/reflect>

   The interface of Experimental C++ standard libraries (i.e. libraries
   introduced by C++ TR's/TS's) is defined by the following collection of
   headers.

Execution P2300

   <experimental/execution> (P2300) Asynchronous execution on generic
   execution resources

Filesystem TS

   <experimental/filesystem> (filesystem TS) Filesystem library

Parallelism TS

   <experimental/algorithm> (parallelism TS) Non-numeric parallel
   algorithms
   <experimental/execution_policy> (parallelism TS) Execution policies
   <experimental/exception_list> (parallelism TS) Parallel exceptions
   <experimental/numeric> (parallelism TS) Numeric parallel algorithms

Library Fundamentals TS

   <experimental/algorithm> (library fundamentals TS) sample and search
   <experimental/any> (library fundamentals TS) any
   <experimental/chrono> (library fundamentals TS) Variable templates for
   type traits
   <experimental/deque> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/forward_list> (library fundamentals TS) Convenience
   aliases for containers using polymorphic allocators
   <experimental/future> (library fundamentals TS) promise and
   packaged_task using polymorphic allocators
   <experimental/list> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/functional> (library fundamentals TS) function using
   polymorphic allocators and searchers
   <experimental/map> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/memory> (library fundamentals TS) shared_ptr and weak_ptr
   with array support
   <experimental/memory_resource> (library fundamentals TS) Polymorphic
   allocators and memory resources
   <experimental/optional> (library fundamentals TS) optional
   <experimental/ratio> (library fundamentals TS) Variable templates for
   type traits
   <experimental/regex> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/set> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/string> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators
   <experimental/string_view> (library fundamentals TS) basic_string_view
   <experimental/system_error> (library fundamentals TS) Variable
   templates for type traits
   <experimental/tuple> (library fundamentals TS) Variable templates for
   type traits and apply
   <experimental/type_traits> (library fundamentals TS) Variable templates
   for type traits and invocation_type
   <experimental/unordered_map> (library fundamentals TS) Convenience
   aliases for containers using polymorphic allocators
   <experimental/unordered_set> (library fundamentals TS) Convenience
   aliases for containers using polymorphic allocators
   <experimental/utility> (library fundamentals TS) erased_type
   <experimental/vector> (library fundamentals TS) Convenience aliases for
   containers using polymorphic allocators

Concurrency TS

   <experimental/atomic> (concurrency TS) atomic_shared_ptr and
   atomic_weak_ptr
   <experimental/barrier> (concurrency TS) barrier and flex_barrier
   <experimental/future> (concurrency TS) Extensions for std::future
   <experimental/latch> (concurrency TS) latch

Library Fundamentals TS v2

   <experimental/algorithm> (library fundamentals TS v2) sample and
   shuffle
   <experimental/array> (library fundamentals TS v2) make_array and
   to_array
   <experimental/deque> (library fundamentals TS v2) erase and erase_if
   <experimental/forward_list> (library fundamentals TS v2) erase and
   erase_if
   <experimental/functional> (library fundamentals TS v2) not_fn
   <experimental/iterator> (library fundamentals TS v2) ostream_joiner
   <experimental/list> (library fundamentals TS v2) erase and erase_if
   <experimental/map> (library fundamentals TS v2) erase_if and erase_if
   <experimental/memory> (library fundamentals TS v2) observer_ptr
   <experimental/numeric> (library fundamentals TS v2) gcd and lcm
   <experimental/propagate_const> (library fundamentals TS v2)
   propagate_const
   <experimental/random> (library fundamentals TS v2) randint and reseed
   <experimental/set> (library fundamentals TS v2) erase_if and erase_if
   <experimental/source_location> (library fundamentals TS v2)
   source_location
   <experimental/string> (library fundamentals TS v2) erase and erase_if
   <experimental/type_traits> (library fundamentals TS v2) Metafunctions
   and detection idiom
   <experimental/unordered_map> (library fundamentals TS v2) erase_if and
   erase_if
   <experimental/unordered_set> (library fundamentals TS v2) erase_if and
   erase_if
   <experimental/vector> (library fundamentals TS v2) erase and erase_if

Ranges TS

   <experimental/ranges/algorithm> (ranges TS) Algorithms library
   <experimental/ranges/concepts> (ranges TS) Concepts library
   <experimental/ranges/functional> (ranges TS) Function objects
   <experimental/ranges/iterator> (ranges TS) Iterators library
   <experimental/ranges/random> (ranges TS) UniformRandomNumberGenerator
   concept
   <experimental/ranges/range> (ranges TS) Ranges library
   <experimental/ranges/tuple> (ranges TS) Tagged tuples
   <experimental/ranges/type_traits> (ranges TS) Metaprogramming and type
   traits
   <experimental/ranges/utility> (ranges TS) Utility components

Networking TS

   <experimental/buffer> (networking TS) Buffers
   <experimental/executor> (networking TS) Asynchronous model
   <experimental/internet> (networking TS) Internet protocol
   <experimental/io_context> (networking TS) Basic I/O services
   <experimental/net> (networking TS) Convenience header that includes
   every other Networking TS header
   <experimental/netfwd> (networking TS) Contains forward declarations of
   major Networking TS components
   <experimental/socket> (networking TS) Sockets
   <experimental/timer> (networking TS) Timers

Parallelism TS v2

   <experimental/algorithm> (parallelism TS v2) Non-numeric parallel
   algorithms
   <experimental/execution_policy> (parallelism TS v2) unseq and vec
   policies
   <experimental/simd> (parallelism TS v2) Data-parallel types
   <experimental/task_block> (parallelism TS v2) Task block

Reflection TS

   <experimental/reflect> (reflection TS) Static reflection support
   library

Library Fundamentals TS v3

   <experimental/scope> (library fundamentals TS v3) scope_exit,
   scope_fail, scope_success and unique_resource
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/header/experimen
   tal&oldid=169352"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 January 2024, at 19:00.
     * This page has been accessed 28,507 times.
