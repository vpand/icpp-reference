std::bitset<N>::all, std::bitset<N>::any, std::bitset<N>::none

   From cppreference.com
   < cpp | utility | bitset

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   std::bitset
   Member types
   bitset::reference
   Member functions
   bitset::bitset
   bitset::operator==bitset::operator!=
   (until C++20)
   Element access
   bitset::operator[]
   bitset::test
   bitset::allbitset::anybitset::none
   (C++11)
   bitset::count
   Capacity
   bitset::size
   Modifiers
   bitset::operator&=bitset::operator|=bitset::operator^=bitset::operator~
   bitset::operator<<=bitset::operator>>=bitset::operator<<bitset::operato
   r>>
   bitset::set
   bitset::reset
   bitset::flip
   Conversions
   bitset::to_string
   bitset::to_ulong
   bitset::to_ullong
   (C++11)
   Non-member functions
   operator&operator|operator^
   operator<<operator>>
   Helper classes
   std::hash
   (C++11)

   bool all() const;
   (1) (noexcept since C++11)
   (constexpr since C++23)
   bool any() const;
   (2) (noexcept since C++11)
   (constexpr since C++23)
   bool none() const;
   (3) (noexcept since C++11)
   (constexpr since C++23)
   1) Checks if all bits are set to true.
   2) Checks if any bits are set to true.
   3) Checks if none of the bits are set to true.

Parameters

   (none)

Return value

   1) true if all bits are set to true, otherwise false.
   2) true if any of the bits are set to true, otherwise false.
   3) true if none of the bits are set to true, otherwise false.

Example

   Run this code
#include <bitset>
#include <iostream>

int main()
{
    std::bitset<4> b1("0000");
    std::bitset<4> b2("0101");
    std::bitset<4> b3("1111");

    std::cout
        << "bitset\t" << "all\t" << "any\t" << "none\n"
        << b1 << '\t' << b1.all() << '\t' << b1.any() << '\t' << b1.none() << '\
n'
        << b2 << '\t' << b2.all() << '\t' << b2.any() << '\t' << b2.none() << '\
n'
        << b3 << '\t' << b3.all() << '\t' << b3.any() << '\t' << b3.none() << '\
n';
}

   Output:
bitset  all any none
0000    0   0   1
0101    0   1   0
1111    1   1   0

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
    DR    Applied to           Behavior as published            Correct behavior
  LWG 693 C++98      the member function all() was not provided provided

See also

   count
   returns the number of bits set to true
   (public member function)
   popcount
   (C++20)
   counts the number of 1 bits in an unsigned integer
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/utility/bitset/a
   ll_any_none&oldid=171728"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 13 May 2024, at 20:55.
     * This page has been accessed 74,160 times.
