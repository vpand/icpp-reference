std::submdspan_mapping_result

   From cppreference.com
   < cpp | container | mdspan

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::mdspan
   Member functions
   mdspan::mdspan
   mdspan::operator=
   Element access
   mdspan::operator[]
   Observers
   mdspan::size
   mdspan::empty
   mdspan::stride
   mdspan::extents
   mdspan::data_handle
   mdspan::mapping
   mdspan::accessor
   mdspan::is_uniquemdspan::is_exhaustivemdspan::is_stridedmdspan::is_alwa
   ys_uniquemdspan::is_always_exhaustivemdspan::is_always_strided
   Non-member functions
   swap(std::mdspan)
   Subviews
   submdspan_extents
   (C++26)
   submdspan
   (C++26)
   Helper types and templates
   extentsdextents
   layout_right
   layout_left
   layout_stride
   layout_left_padded
   (C++26)
   layout_right_padded
   (C++26)
   default_accessor
   Subviews helpers
   full_extent
   (C++26)
   strided_slice
   (C++26)
   submdspan_mapping_result
   (C++26)
   Deduction guides

   Defined in header <mdspan>
   template< class LayoutMapping >
   struct submdspan_mapping_result;
                                  (since C++26)

   Specializations of submdspan_mapping_result are result types returned
   by overloads of submdspan_mapping.

   This class template has no base classes or declared members other than
   those shown below.

Template parameters

   LayoutMapping - a layout mapping type that meets the requirements of
   LayoutMapping

Data members

   Member name                                                  Definition
   mapping
   calculated mapping of type LayoutMapping. It is declared with
   [[no_unique_address]] attribute.
   (public member object)
   offset
   calculated offset of type std::size_t.
   (public member object)

   All these members have default member initializers where each data
   member is value initialized.

See also

   submdspan
   (C++26)
   returns a view of a subset of an existing mdspan
   (function template)
   submdspan_mapping(std::layout_left::mapping)
   (C++26)
   calculates the mapping and data handle offset used for subdmspan
   (public member function of std::layout_left::mapping<Extents>)
   submdspan_mapping(std::layout_right::mapping)
   (C++26)
   calculates the mapping and data handle offset used for subdmspan
   (public member function of std::layout_right::mapping<Extents>)
   submdspan_mapping(std::layout_stride::mapping)
   (C++26)
   calculates the mapping and data handle offset used for subdmspan
   (public member function of std::layout_stride::mapping<Extents>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/mdspan
   /submdspan_mapping_result&oldid=172212"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 June 2024, at 11:20.
     * This page has been accessed 309 times.
