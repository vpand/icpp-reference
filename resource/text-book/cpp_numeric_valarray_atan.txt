std::atan(std::valarray)

   From cppreference.com
   < cpp | numeric | valarray

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Numerics library
   Common mathematical functions
   Mathematical special functions (C++17)
   Mathematical constants (C++20)
   Basic linear algebra algorithms (C++26)
   Floating-point environment (C++11)
   Complex numbers
   Numeric arrays
   Pseudo-random number generation
   Factor operations
   gcd
   (C++17)
   lcm
   (C++17)
   Interpolations
   midpoint
   (C++20)
   lerp
   (C++20)
   Saturation arithmetic
   add_sat
   (C++26)
   sub_sat
   (C++26)
   saturate_cast
   (C++26)
   mul_sat
   (C++26)
   div_sat
   (C++26)
   Generic numeric operations
   iota
   (C++11)
   ranges::iota
   (C++23)
   accumulate
   inner_product
   adjacent_difference
   partial_sum
   reduce
   (C++17)
   transform_reduce
   (C++17)
   inclusive_scan
   (C++17)
   exclusive_scan
   (C++17)
   transform_inclusive_scan
   (C++17)
   transform_exclusive_scan
   (C++17)
   Bit operations
   has_single_bit
   (C++20)
   bit_cast
   (C++20)
   bit_ceil
   (C++20)
   bit_floor
   (C++20)
   bit_width
   (C++20)
   rotl
   (C++20)
   rotr
   (C++20)
   popcount
   (C++20)
   countl_zero
   (C++20)
   countl_one
   (C++20)
   countr_zero
   (C++20)
   countr_one
   (C++20)
   byteswap
   (C++23)
   endian
   (C++20)

   std::valarray
   Member functions
   valarray::valarray
   valarray::~valarray
   valarray::operator=
   valarray::operator[]
   valarray::swap
   valarray::size
   valarray::resize
   valarray::sum
   valarray::min
   valarray::max
   valarray::shift
   valarray::cshift
   valarray::apply
   valarray::operator+valarray::operator-valarray::operator~valarray::oper
   ator!
   valarray::operator+=valarray::operator-=valarray::operator*=valarray::o
   perator/=valarray::operator%=valarray::operator&=valarray::operator|=va
   larray::operator^=valarray::operator<<=valarray::operator>>=
   Non-member functions
   swap(std::valarray)
   (C++11)
   begin(std::valarray)
   (C++11)
   end(std::valarray)
   (C++11)
   abs
   exp
   log
   log10
   pow
   sqrt
   sin
   cos
   tan
   asin
   acos
   atan
   atan2
   sinh
   cosh
   tanh
   operator*operator/operator%operator+operator-operator^operator&operator
   |operator<<operator>>operator&&operator||
   operator==operator!=operator<operator>operator<=operator>=
   Helper classes
   slice_array
   gslice_array
   indirect_array
   slice
   gslice
   mask_array
   Deduction guides (C++17)

   Defined in header <valarray>
   template< class T >
   valarray<T> atan( const valarray<T>& va );

   For each element in va computes arc tangent of the value of the
   element.

Parameters

   va - value array to apply the operation to

Return value

   Value array containing arc tangents of the values in va.

Notes

   Unqualified function (atan) is used to perform the computation. If such
   function is not available, std::atan is used due to argument-dependent
   lookup.

   The function can be implemented with the return type different from
   std::valarray. In this case, the replacement type has the following
   properties:

          + All const member functions of std::valarray are provided.
          + std::valarray, std::slice_array, std::gslice_array,
            std::mask_array and std::indirect_array can be constructed
            from the replacement type.
          + For every function taking a const std::valarray<T>& except
            begin() and end()(since C++11), identical functions taking the
            replacement types shall be added;
          + For every function taking two const std::valarray<T>&
            arguments, identical functions taking every combination of
            const std::valarray<T>& and replacement types shall be added.
          + The return type does not add more than two levels of template
            nesting over the most deeply-nested argument type.

Possible implementation

template<class T>
valarray<T> atan(const valarray<T>& va)
{
    valarray<T> other = va;
    for (T& i : other)
        i = atan(i);

    return other; // proxy object may be returned
}

Example

   Run this code
#include <algorithm>
#include <cmath>
#include <iostream>
#include <valarray>

auto show = [](char const* title, const std::valarray<float>& va)
{
    std::cout << title << " :";
    std::for_each(std::begin(va), std::end(va),
        [](const float x) { std::cout << "  " << std::fixed << x; });
    std::cout << '\n';
};

int main()
{
    const std::valarray<float> x = {.1f, .3f, .6f, .9f};
    const std::valarray<float> f = std::atan(x);
    const std::valarray<float> g = std::tan(f);

    show("x          ", x);
    show("f = atan(x)", f);
    show("g = tan(f) ", g);
}

   Output:
x           :  0.100000  0.300000  0.600000  0.900000
f = atan(x) :  0.099669  0.291457  0.540420  0.732815
g = tan(f)  :  0.100000  0.300000  0.600000  0.900000

See also

   asin(std::valarray)
   applies the function std::asin to each element of valarray
   (function template)
   acos(std::valarray)
   applies the function std::acos to each element of valarray
   (function template)
   atan2(std::valarray)
   applies the function std::atan2 to a valarray and a value
   (function template)
   tan(std::valarray)
   applies the function std::tan to each element of valarray
   (function template)
   atanatanfatanl
   (C++11)(C++11)
   computes arc tangent (\({\small\arctan{x}}\)arctan(x))
   (function)
   atan(std::complex)
   (C++11)
   computes arc tangent of a complex number
   (\({\small\arctan{z}}\)arctan(z))
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/valarray
   /atan&oldid=160799"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 October 2023, at 01:19.
     * This page has been accessed 18,974 times.
