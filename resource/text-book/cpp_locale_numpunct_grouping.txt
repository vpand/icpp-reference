std::numpunct<CharT>::grouping, std::numpunct<CharT>::do_grouping

   From cppreference.com
   < cpp | locale | numpunct

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::numpunct
   Member functions
   numpunct::numpunct
   numpunct::~numpunct
   numpunct::decimal_pointnumpunct::do_decimal_point
   numpunct::thousands_sepnumpunct::do_thousands_sep
   numpunct::groupingnumpunct::do_grouping
   numpunct::truenamenumpunct::do_truenamenumpunct::falsenamenumpunct::do_
   falsename

   Defined in header <locale>
   public:
   std::string grouping() const;
   (1)
   protected:
   virtual std::string do_grouping() const;
   (2)
   1) Public member function, calls the member function do_grouping of the
   most derived class.
   2) Returns an std::string holding, in each char element, the number of
   digits in each group of the numeric output formatted by num_put::put()
   (and, therefore, basic_ostream::operator<<).

   This function returns a string, vec, which is used as a vector of
   integer values. (For example, "\003" specifies groups of 3 digits each,
   while "3" implies groups of 51 digits each.). Each element vec[i]
   represents the number of digits in the ith digit group of the integer
   part of the number, counting from the right: vec[0] holds the number of
   digits in the rightmost group, vec[1] - in the second group from the
   right, etc. The grouping indicated by the last character,
   vec[vec.size()-1], is repeatedly reused to group all remaining digits
   in the (left part of) the number. If vec[i] is non-positive or equals
   CHAR_MAX the size of the corresponding digit group is unlimited.

Return value

   The object of type std::string holding the groups. The standard
   specializations of std::numpunct return an empty string, indicating no
   grouping. Typical groupings (e.g. the en_US locale) return "\003".

Example

   Run this code
#include <iostream>
#include <limits>
#include <locale>

struct space_out : std::numpunct<char>
{
    char do_thousands_sep()   const { return ' ';  } // separate with spaces
    std::string do_grouping() const { return "\1"; } // groups of 1 digit
};

struct g123 : std::numpunct<char>
{
    std::string do_grouping() const { return "\1\2\3"; }
};

int main()
{
    std::cout << "Default locale: " << 12345678 << '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
    std::cout << "Locale with modified numpunct: " << 12345678 << '\n';
    std::cout.imbue(std::locale(std::cout.getloc(), new g123));
    std::cout << "Locale with \\1\\2\\3 grouping: "
              << std::numeric_limits<unsigned long long>::max() << '\n'
              << "Same, for a floating-point number: "
              << std::fixed << 123456789.123456789 << '\n';
}

   Output:
Default locale: 12345678
Locale with modified numpunct: 1 2 3 4 5 6 7 8
Locale with \1\2\3 grouping: 18,446,744,073,709,551,61,5
Same, for a floating-point number: 123,456,78,9.123457

See also

   do_thousands_sep
   [virtual]
   provides the character to use as thousands separator
   (virtual protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/numpunct/
   grouping&oldid=160329"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 October 2023, at 08:51.
     * This page has been accessed 21,595 times.
