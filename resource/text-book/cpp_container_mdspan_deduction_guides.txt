deduction guides for std::mdspan

   From cppreference.com
   < cpp | container | mdspan

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::mdspan
   Member functions
   mdspan::mdspan
   mdspan::operator=
   Element access
   mdspan::operator[]
   Observers
   mdspan::size
   mdspan::empty
   mdspan::stride
   mdspan::extents
   mdspan::data_handle
   mdspan::mapping
   mdspan::accessor
   mdspan::is_uniquemdspan::is_exhaustivemdspan::is_stridedmdspan::is_alwa
   ys_uniquemdspan::is_always_exhaustivemdspan::is_always_strided
   Non-member functions
   swap(std::mdspan)
   Subviews
   submdspan_extents
   (C++26)
   submdspan
   (C++26)
   Helper types and templates
   extentsdextents
   layout_right
   layout_left
   layout_stride
   layout_left_padded
   (C++26)
   layout_right_padded
   (C++26)
   default_accessor
   Subviews helpers
   full_extent
   (C++26)
   strided_slice
   (C++26)
   submdspan_mapping_result
   (C++26)
   Deduction guides

 Defined in header <mdspan>
   template< class CArray >

       requires(std::is_array_v<CArray> && std::rank_v<CArray> == 1)
       mdspan( CArray& )
           -> mdspan<std::remove_all_extents_t<CArray>,
                     std::extents<std::size_t, std::extent_v<CArray, 0>>>;
 (1)                                                               (since C++23)
   template< class Pointer >

       requires(std::is_pointer_v<std::remove_reference_t<Pointer>>)
       mdspan( Pointer&& )
           ->
   mdspan<std::remove_pointer_t<std::remove_reference_t<Pointer>>,
                     std::extents<size_t>>;
 (2)                                                               (since C++23)
   template< class ElementType, class... Integrals >

       requires((std::is_convertible_v<Integrals, std::size_t> && ...) &&
                sizeof...(Integrals) > 0)
       explicit mdspan( ElementType*, Integrals... )
           -> mdspan<ElementType, std::dextents<std::size_t,
   sizeof...(Integrals)>>;
 (3)                                                               (since C++23)
   template< class ElementType, class OtherIndexType, std::size_t N >

       mdspan( ElementType*, std::span<OtherIndexType, N> )
           -> mdspan<ElementType, std::dextents<std::size_t, N>>;
 (4)                                                               (since C++23)
   template< class ElementType, class OtherIndexType, std::size_t N >

       mdspan( ElementType*, const std::array<OtherIndexType, N>& )
           -> mdspan<ElementType, std::dextents<std::size_t, N>>;
 (5)                                                               (since C++23)
   template< class ElementType, class IndexType, std::size_t...
   ExtentsPack >

       mdspan( ElementType*, const std::extents<IndexType,
   ExtentsPack...>& )
           -> mdspan<ElementType, std::extents<IndexType,
   ExtentsPack...>>;
 (6)                                                               (since C++23)
   template< class ElementType, class MappingType >

       mdspan( ElementType*, const MappingType& )
           -> mdspan<ElementType, typename MappingType::extents_type,
                     typename MappingType::layout_type>;
 (7)                                                               (since C++23)
   template< class MappingType, class AccessorType >

       mdspan( const typename AccessorType::data_handle_type&, const
   MappingType&,
               const AccessorType& )
           -> mdspan<typename AccessorType::element_type,
                     typename MappingType::extents_type,
                     typename MappingType::layout_type, AccessorType>;
 (8)                                                               (since C++23)
   This section is incomplete
   Reason: explanation

Example

   This section is incomplete
   Reason: no example
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/mdspan
   /deduction_guides&oldid=161934"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 November 2023, at 02:11.
     * This page has been accessed 1,990 times.
