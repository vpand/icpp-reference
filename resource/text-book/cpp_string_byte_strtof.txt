std::strtof, std::strtod, std::strtold

   From cppreference.com
   < cpp | string | byte

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated byte strings
   Functions
   Character manipulation
   isalnum
   isalpha
   islower
   isupper
   isdigit
   isxdigit
   isblank
   (C++11)
   iscntrl
   isgraph
   isspace
   isprint
   ispunct
   tolower
   toupper
   Conversions to numeric formats
   atof
   atoiatolatoll
   (C++11)
   strtolstrtoll
   (C++11)
   strtoulstrtoull
   (C++11)
   strtofstrtodstrtold
   (C++11)(C++11)
   strtoimaxstrtouimax
   (C++11)(C++11)
   String manipulation
   strcpy
   strncpy
   strxfrm
   strcat
   strncat
   String examination
   strlen
   strcmp
   strncmp
   strcoll
   strchr
   strrchr
   strspn
   strcspn
   strpbrk
   strstr
   strtok
   Memory manipulation
   memchr
   memcmp
   memset
   memcpy
   memmove
   Miscellaneous
   strerror

   Defined in header <cstdlib>
   float       strtof( const char* str, char** str_end );
                                                          (since C++11)
   double      strtod( const char* str, char** str_end );
   long double strtold( const char* str, char** str_end );
                                                          (since C++11)

   Interprets a floating point value in a byte string pointed to by str.

   Function discards any whitespace characters (as determined by
   std::isspace) until first non-whitespace character is found. Then it
   takes as many characters as possible to form a valid floating-point
   representation and converts them to a floating-point value. The valid
   floating-point value can be one of the following:
     * decimal floating-point expression. It consists of the following
       parts:

          + (optional) plus or minus sign
          + nonempty sequence of decimal digits optionally containing
            decimal-point character (as determined by the current C
            locale) (defines significand)
          + (optional) e or E followed with optional minus or plus sign
            and nonempty sequence of decimal digits (defines exponent to
            base 10)

     * hexadecimal floating-point expression. It consists of the following
       parts:

          + (optional) plus or minus sign
          + 0x or 0X
          + nonempty sequence of hexadecimal digits optionally containing
            a decimal-point character (as determined by the current C
            locale) (defines significand)
          + (optional) p or P followed with optional minus or plus sign
            and nonempty sequence of decimal digits (defines exponent to
            base 2)

     * infinity expression. It consists of the following parts:

          + (optional) plus or minus sign
          + INF or INFINITY ignoring case

     * not-a-number expression. It consists of the following parts:

          + (optional) plus or minus sign
          + NAN or NAN(char_sequence) ignoring case of the NAN part.
            char_sequence can only contain digits, Latin letters, and
            underscores. The result is a quiet NaN floating-point value.

   (since C++11)
     * any other expression that may be accepted by the currently
       installed C locale

   The functions sets the pointer pointed to by str_end to point to the
   character past the last character interpreted. If str_end is a null
   pointer, it is ignored.

Parameters

   str     - pointer to the null-terminated byte string to be interpreted
   str_end - pointer to a pointer to character.

Return value

   Floating point value corresponding to the contents of str on success.
   If the converted value falls out of range of corresponding return type,
   range error occurs and HUGE_VAL, HUGE_VALF or HUGE_VALL is returned. If
   no conversion can be performed, 0 is returned and *str_end is set to
   str.

Example

   Run this code
#include <cerrno>
#include <clocale>
#include <cstdlib>
#include <iostream>
#include <string>

int main()
{
    const char* p = "111.11 -2.22 0X1.BC70A3D70A3D7P+6 -Inf 1.18973e+4932zzz";
    char* end{};
    std::cout << "Parsing \"" << p << "\":\n";
    errno = 0;
    for (double f = std::strtod(p, &end); p != end; f = std::strtod(p, &end))
    {
        std::cout << "  '" << std::string(p, end - p) << "' -> ";
        p = end;
        if (errno == ERANGE)
        {
            std::cout << "range error, got ";
            errno = 0;
        }
        std::cout << f << '\n';
    }

    if (std::setlocale(LC_NUMERIC, "de_DE.utf8"))
    {
        std::cout << "With de_DE.utf8 locale:\n";
        std::cout << "  '123.45' -> " << std::strtod("123.45", 0) << '\n';
        std::cout << "  '123,45' -> " << std::strtod("123,45", 0) << '\n';
    }
}

   Possible output:
Parsing "111.11 -2.22 0X1.BC70A3D70A3D7P+6 -Inf 1.18973e+4932zzz":
  '111.11' -> 111.11
  ' -2.22' -> -2.22
  ' 0X1.BC70A3D70A3D7P+6' -> 111.11
  ' -Inf' -> -inf
  ' 1.18973e+4932' -> range error, got inf
With de_DE.utf8 locale:
  '123.45' -> 123
  '123,45' -> 123.45

See also

   atof
   converts a byte string to a floating point value
   (function)
   wcstofwcstodwcstold
   converts a wide string to a floating-point value
   (function)
   from_chars
   (C++17)
   converts a character sequence to an integer or floating-point value
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/byte/strt
   of&oldid=152863"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 June 2023, at 09:41.
     * This page has been accessed 181,189 times.
