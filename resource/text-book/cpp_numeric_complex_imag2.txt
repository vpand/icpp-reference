std::imag(std::complex)

   From cppreference.com
   < cpp | numeric | complex

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Numerics library
   Common mathematical functions
   Mathematical special functions (C++17)
   Mathematical constants (C++20)
   Basic linear algebra algorithms (C++26)
   Floating-point environment (C++11)
   Complex numbers
   Numeric arrays
   Pseudo-random number generation
   Factor operations
   gcd
   (C++17)
   lcm
   (C++17)
   Interpolations
   midpoint
   (C++20)
   lerp
   (C++20)
   Saturation arithmetic
   add_sat
   (C++26)
   sub_sat
   (C++26)
   saturate_cast
   (C++26)
   mul_sat
   (C++26)
   div_sat
   (C++26)
   Generic numeric operations
   iota
   (C++11)
   ranges::iota
   (C++23)
   accumulate
   inner_product
   adjacent_difference
   partial_sum
   reduce
   (C++17)
   transform_reduce
   (C++17)
   inclusive_scan
   (C++17)
   exclusive_scan
   (C++17)
   transform_inclusive_scan
   (C++17)
   transform_exclusive_scan
   (C++17)
   Bit operations
   has_single_bit
   (C++20)
   bit_cast
   (C++20)
   bit_ceil
   (C++20)
   bit_floor
   (C++20)
   bit_width
   (C++20)
   rotl
   (C++20)
   rotr
   (C++20)
   popcount
   (C++20)
   countl_zero
   (C++20)
   countl_one
   (C++20)
   countr_zero
   (C++20)
   countr_one
   (C++20)
   byteswap
   (C++23)
   endian
   (C++20)

   std::complex
   Member functions
   complex::complex
   complex::operator=
   complex::real
   complex::imag
   complex::operator+=complex::operator-=complex::operator*=complex::opera
   tor/=
   Non-member functions
   operator+operator-
   operator+operator-operator*operator/
   operator==operator!=
   (until C++20)
   operator<<operator>>
   get(std::complex)
   (C++26)
   real
   imag
   abs
   arg
   norm
   conj
   proj
   (C++11)
   polar
   operator""ioperator""ifoperator""il
   (C++14)(C++14)(C++14)
   Exponential functions
   log

   log10

   exp
   Power functions
   pow

   sqrt
   Trigonometric functions
   sin

   cos
   tan
   asin
   (C++11)
   acos
   (C++11)
   atan
   (C++11)
   Hyperbolic functions
   sinh

   cosh
   tanh
   asinh
   (C++11)
   acosh
   (C++11)
   atanh
   (C++11)
   Helper types
   tuple_size<std::complex>
   (C++26)
   tuple_element<std::complex>
   (C++26)

   Defined in header <complex>
                                         (1)
   template< class T >
   T imag( const std::complex<T>& z );
                                             (until C++14)
   template< class T >
   constexpr T imag( const std::complex<T>& z );
                                             (since C++14)
   Additional overloads (since C++11)
   Defined in header <complex>
                                         (A)
   float       imag( float f );

   double      imag( double f );
   long double imag( long double f );
                                             (until C++14)
   constexpr float       imag( float f );

   constexpr double      imag( double f );
   constexpr long double imag( long double f );
   (since C++14)
   (until C++23)
   template< class FloatingPoint >
   FloatingPoint imag( FloatingPoint f );
                                             (since C++23)
                                         (B)
   template< class Integer >
   double imag( Integer i );
                                             (until C++14)
   template< class Integer >
   constexpr double imag( Integer i );
                                             (since C++14)
   1) Returns the imaginary part of the complex number z, i.e. z.imag().
   A,B) Additional overloads are provided for all integer and
   floating-point types, which are treated as complex numbers with zero
   imaginary part.
   (since C++11)

Parameters

   z - complex value
   f - floating-point value
   i - integer value

Return value

   1) The imaginary part of z.
   A) decltype(f){} (zero).
   B) 0.0.

Notes

   The additional overloads are not required to be provided exactly as
   (A,B). They only need to be sufficient to ensure that for their
   argument num:
     * If num has a standard(until C++23) floating-point type T, then
       std::imag(num) has the same effect as
       std::imag(std::complex<T>(num)).
     * Otherwise, if num has an integer type, then std::imag(num) has the
       same effect as std::imag(std::complex<double>(num)).

See also

   imag
   accesses the imaginary part of the complex number
   (public member function)
   real
   returns the real part
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/complex/
   imag2&oldid=149034"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 12 March 2023, at 18:53.
     * This page has been accessed 30,754 times.
