std::flat_map<Key,T,Compare,KeyContainer,MappedContainer>::rend,
std::flat_map<Key,T,Compare,KeyContainer,MappedContainer>::crend

   From cppreference.com
   < cpp | container | flat map


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::flat_map
   Member types
   Member functions
   flat_map::flat_map
   flat_map::operator=
   Element access
   flat_map::at
   flat_map::operator[]
   Iterators
   flat_map::beginflat_map::cbegin
   flat_map::endflat_map::cend
   flat_map::rbeginflat_map::crbegin
   flat_map::rendflat_map::crend
   Capacity
   flat_map::size
   flat_map::max_size
   flat_map::empty
   Modifiers
   flat_map::clear
   flat_map::erase
   flat_map::swap
   flat_map::emplace
   flat_map::extract
   flat_map::replace
   flat_map::insert
   flat_map::insert_range
   flat_map::insert_or_assign
   flat_map::emplace_hint
   flat_map::try_emplace
   Lookup
   flat_map::count
   flat_map::find
   flat_map::contains
   flat_map::equal_range
   flat_map::lower_bound
   flat_map::upper_bound
   Observers
   flat_map::key_comp
   flat_map::keys
   flat_map::value_comp
   flat_map::values
   Non-member functions
   operator==operator<=>
   (C++23)(C++23)
   swap(std::flat_map)
   (C++23)
   erase_if(std::flat_map)
   (C++23)
   Helper classes
   uses_allocator<std::flat_map>
   (C++23)
   Tags
   sorted_unique
   (C++23)
   sorted_unique_t
   (C++23)
   Deduction guides

   reverse_iterator rend() noexcept;
   (1)                                           (since C++23)
   const_reverse_iterator rend() const noexcept;
   (2)                                           (since C++23)
   const_reverse_iterator crend() const noexcept;
   (3)                                           (since C++23)

   Returns a reverse iterator to the element following the last element of
   the reversed flat_map. It corresponds to the element preceding the
   first element of the non-reversed flat_map. This element acts as a
   placeholder, attempting to access it results in undefined behavior.

   range-rbegin-rend.svg

Parameters

   (none)

Return value

   Reverse iterator to the element following the last element.

Complexity

   Constant.

Example

   Run this code
#include <chrono>
#include <iomanip>
#include <iostream>
#include <string_view>
#include <flat_map>

using namespace std::chrono;

int main()
{
    const std::flat_map<year_month_day, int> messages
    {
        {February/17/2023, 10},
        {February/17/2023, 20},
        {February/16/2022, 30},
        {October/22/2022, 40},
        {June/14/2022, 50},
        {November/23/2021, 60},
        {December/10/2022, 55},
        {December/12/2021, 45},
        {April/1/2020, 42},
        {April/1/2020, 24}
    };

    std::cout << "Messages received (date order is reversed):\n";
    for (auto it = messages.crbegin(); it != messages.crend(); ++it)
        std::cout << it->first << " : " << it->second << '\n';
}

   Possible output:
Messages received (date order is reversed):
2023-02-17 : 10
2022-12-10 : 55
2022-10-22 : 40
2022-06-14 : 50
2022-02-16 : 30
2021-12-12 : 45
2021-11-23 : 60
2020-04-01 : 42

See also

   rbegincrbegin
   returns a reverse iterator to the beginning
   (public member function)
   rendcrend
   (C++14)
   returns a reverse end iterator for a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/flat_m
   ap/rend&oldid=168860"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 22 January 2024, at 03:42.
     * This page has been accessed 682 times.
