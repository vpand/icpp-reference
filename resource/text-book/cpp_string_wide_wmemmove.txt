std::wmemmove

   From cppreference.com
   < cpp | string | wide

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   iswalpha
   iswlower
   iswupper
   iswdigit
   iswxdigit
   iswblank
   (C++11)
   wctype
   iswctype
   iswcntrl
   iswgraph
   iswspace
   iswprint
   iswpunct
   towlower
   towupper
   wctrans
   towctrans
   Conversions to numeric formats
   wcstolwcstoll
   (C++11)
   wcstoulwcstoull
   (C++11)
   wcstofwcstodwcstold
   (C++11)(C++11)
   wcstoimaxwcstouimax
   (C++11)(C++11)
   String manipulation
   wcslen
   wcscpy
   wcsncpy
   wcscat
   wcsncat
   wcscmp
   wcscoll
   wcsncmp
   wcsxfrm
   wcschr
   wcsrchr
   wcspbrk
   wcsspn
   wcscspn
   wcsstr
   wcstok
   Array manipulation
   wmemcpy
   wmemmove
   wmemcmp
   wmemchr
   wmemset

   Defined in header <cwchar>
   wchar_t* wmemmove( wchar_t* dest, const wchar_t* src, std::size_t count
   );

   Copies exactly count successive wide characters from the wide character
   array pointed to by src to the wide character array pointed to by dest.

   If count is zero, the function does nothing.

   The arrays may overlap: copying takes place as if the wide characters
   were copied to a temporary wide character array and then copied from
   the temporary array to dest.

Parameters

   dest  - pointer to the wide character array to copy to
   src   - pointer to the wide character array to copy from
   count - number of wide characters to copy

Return value

   Returns a copy of dest.

Notes

   This function is not locale-sensitive and pays no attention to the
   values of the wchar_t objects it copies: nulls as well as invalid
   characters are copied too.

Example

   Run this code
#include <clocale>
#include <cwchar>
#include <iostream>
#include <locale>

int main()
{
    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));

    wchar_t str[] = L"abgdezythiklµncoprstufxqw";
    std::wcout << str << '\n';
    std::wmemmove(str + 4, str + 3, 3); // copy from [dez] to [ezy]
    std::wcout << str << '\n';
}

   Possible output:
abgdezythiklµncoprstufxqw
abgddezthiklµncoprstufxqw

See also

   wmemcpy
   copies a certain amount of wide characters between two non-overlapping
   arrays
   (function)
   memmove
   moves one buffer to another
   (function)
   copycopy_if
   (C++11)
   copies a range of elements to a new location
   (function template)
   copy_backward
   copies a range of elements in backwards order
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/wide/wmem
   move&oldid=153130"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 10 June 2023, at 12:20.
     * This page has been accessed 24,130 times.
