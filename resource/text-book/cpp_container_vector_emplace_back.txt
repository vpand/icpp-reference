std::vector<T,Allocator>::emplace_back

   From cppreference.com
   < cpp | container | vector


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::vector
   Member types
   Member functions
   vector::vector
   vector::~vector
   vector::operator=
   vector::assign
   vector::assign_range
   (C++23)
   vector::get_allocator
   Element access
   vector::at
   vector::operator[]
   vector::front
   vector::back
   vector::data
   Iterators
   vector::beginvector::cbegin
   (C++11)
   vector::endvector::cend
   (C++11)
   vector::rbeginvector::crbegin
   (C++11)
   vector::rendvector::crend
   (C++11)
   Capacity
   vector::empty
   vector::size
   vector::max_size
   vector::reserve
   vector::capacity
   vector::shrink_to_fit
   (DR*)
   Modifiers
   vector::clear
   vector::insert
   vector::emplace
   (C++11)
   vector::insert_range
   (C++23)
   vector::erase
   vector::push_back
   vector::emplace_back
   (C++11)
   vector::append_range
   (C++23)
   vector::pop_back
   vector::resize
   vector::swap
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   swap(std::vector)
   erase(std::vector)erase_if(std::vector)
   (C++20)(C++20)
   Deduction guides(C++17)

   template< class... Args >
   void emplace_back( Args&&... args );
   (since C++11)
   (until C++17)
   template< class... Args >
   reference emplace_back( Args&&... args );
   (since C++17)
   (constexpr since C++20)

   Appends a new element to the end of the container. The element is
   constructed through std::allocator_traits::construct, which typically
   uses placement-new to construct the element in-place at the location
   provided by the container. The arguments args... are forwarded to the
   constructor as std::forward<Args>(args)....

   If after the operation the new size() is greater than old capacity() a
   reallocation takes place, in which case all iterators (including the
   end() iterator) and all references to the elements are invalidated.
   Otherwise only the end() iterator is invalidated.

Parameters

   args - arguments to forward to the constructor of the element
   Type requirements
   -
   T (the container's element type) must meet the requirements of
   MoveInsertable and EmplaceConstructible.

Return value

   (none)
   (until C++17)

   A reference to the inserted element.
   (since C++17)

Complexity

   Amortized constant.

Exceptions

   If an exception is thrown, this function has no effect (strong
   exception guarantee). If T's move constructor is not noexcept and is
   not CopyInsertable into *this, vector will use the throwing move
   constructor. If it throws, the guarantee is waived and the effects are
   unspecified.

Notes

   Since reallocation may take place, emplace_back requires the element
   type to be MoveInsertable for vectors.

Example

   The following code uses emplace_back to append an object of type
   President to a std::vector. It demonstrates how emplace_back forwards
   parameters to the President constructor and shows how using
   emplace_back avoids the extra copy or move operation required when
   using push_back.
   Run this code
#include <vector>
#include <cassert>
#include <iostream>
#include <string>

struct President
{
    std::string name;
    std::string country;
    int year;

    President(std::string p_name, std::string p_country, int p_year)
        : name(std::move(p_name)), country(std::move(p_country)), year(p_year)
    {
        std::cout << "I am being constructed.\n";
    }

    President(President&& other)
        : name(std::move(other.name)), country(std::move(other.country)), year(o
ther.year)
    {
        std::cout << "I am being moved.\n";
    }

    President& operator=(const President& other) = default;
};

int main()
{
    std::vector<President> elections;
    std::cout << "emplace_back:\n";
    auto& ref = elections.emplace_back("Nelson Mandela", "South Africa", 1994);
    assert(ref.year == 1994 && "uses a reference to the created object (C++17)")
;

    std::vector<President> reElections;
    std::cout << "\npush_back:\n";
    reElections.push_back(President("Franklin Delano Roosevelt", "the USA", 1936
));

    std::cout << "\nContents:\n";
    for (President const& president: elections)
        std::cout << president.name << " was elected president of "
                  << president.country << " in " << president.year << ".\n";

    for (President const& president: reElections)
        std::cout << president.name << " was re-elected president of "
                  << president.country << " in " << president.year << ".\n";
}

   Output:
emplace_back:
I am being constructed.

push_back:
I am being constructed.
I am being moved.

Contents:
Nelson Mandela was elected president of South Africa in 1994.
Franklin Delano Roosevelt was re-elected president of the USA in 1936.

See also

   push_back
   adds an element to the end
   (public member function)
   emplace
   (C++11)
   constructs element in-place
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/vector
   /emplace_back&oldid=124989"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 15 December 2020, at 03:44.
     * This page has been accessed 1,423,133 times.
