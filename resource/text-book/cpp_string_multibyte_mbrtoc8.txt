std::mbrtoc8

   From cppreference.com
   < cpp | string | multibyte

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated multibyte strings
   Wide/multibyte conversions
   mbsinit
   mbtowc
   mbstowcs
   btowc
   mbrtowc
   mbsrtowcs
   mbrtoc8
   (C++20)
   mbrtoc16
   (C++11)
   mbrtoc32
   (C++11)
   mblen
   wctomb
   wcstombs
   wctob
   wcrtomb
   wcsrtombs
   c8rtomb
   (C++20)
   c16rtomb
   (C++11)
   c32rtomb
   (C++11)
   mbrlen
   Types
   mbstate_t

   Defined in header <cuchar>
   std::size_t mbrtoc8( char8_t* pc8,

                        const char* s,
                        std::size_t n,
                        std::mbstate_t* ps );
                                     (since C++20)

   Converts a narrow multibyte character to UTF-8 encoding.

   If s is not a null pointer, inspects at most n bytes of the multibyte
   character string, beginning with the byte pointed to by s to determine
   the number of bytes necessary to complete the next multibyte character
   (including any shift sequences). If the function determines that the
   next multibyte character in s is complete and valid, converts it to
   UTF-8 and stores the first UTF-8 code unit in *pc8 (if pc8 is not
   null).

   If UTF-8 encoding of the multibyte character in *s consists of more
   than one UTF-8 code unit, then after the first call to this function,
   *ps is updated in such a way that the next call to mbrtoc8 will write
   out the additional UTF-8 code units, without considering *s.

   If s is a null pointer, the values of n and pc8 are ignored and the
   call is equivalent to std::mbrtoc8(nullptr, "", 1, ps).

   If UTF-8 code unit produced is u8'\0', the conversion state *ps
   represents the initial shift state.

   The multibyte encoding used by this function is specified by the
   currently active C locale.

Parameters

   pc8 - pointer to the location where the resulting UTF-8 code units will
   be written
   s - pointer to the multibyte character string used as input
   n - limit on the number of bytes in s that can be examined
   ps - pointer to the conversion state object used when interpreting the
   multibyte string

Return value

   The first of the following that applies:
     * 0 if the character converted from s (and stored in *pc8 if
       non-null) was the null character.
     * the number of bytes [1...n] of the multibyte character successfully
       converted from s.
     * static_cast<std::size_t>(-3) if the next UTF-8 code unit from a
       character whose encoding consists of multiple code units has now
       been written to *pc8. No bytes are processed from the input in this
       case.
     * static_cast<std::size_t>(-2) if the next n bytes constitute an
       incomplete, but so far valid, multibyte character. Nothing is
       written to *pc8.
     * static_cast<std::size_t>(-1) if encoding error occurs. Nothing is
       written to *pc8, the value EILSEQ is stored in errno and the value
       of *ps is unspecified.

Example

   This section is incomplete
   Reason: no example

See also

   c8rtomb
   (C++20)
   converts UTF-8 string to narrow multibyte encoding
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/multibyte
   /mbrtoc8&oldid=153042"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 June 2023, at 03:17.
     * This page has been accessed 19,000 times.
