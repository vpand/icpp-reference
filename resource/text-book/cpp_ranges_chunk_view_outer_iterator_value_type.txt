std::ranges::chunk_view<V>::outer-iterator::value_type

   From cppreference.com
   < cpp | ranges | chunk view | outer iterator

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Ranges library
   Range access
   begin
   cbegin
   end
   cend
   rbegin
   crbegin
   rend
   crend
   size
   ssize
   data
   cdata
   empty
   Range conversions
   std::from_range_t
   std::from_range
   (C++23)(C++23)
   to
   (C++23)
   Range primitives
   range_size_trange_difference_trange_value_trange_reference_t
   iterator_tconst_iterator_tsentinel_tconst_sentinel_t
   (C++23)(C++23)
   range_const_reference_trange_rvalue_reference_trange_common_reference_t
   (C++23)
   elements_of
   (C++23)
   Dangling iterator handling
   dangling
   borrowed_iterator_t
   borrowed_subrange_t
   Range concepts
   range
   borrowed_range
   sized_range
   constant_range
   (C++23)
   common_range
   view
   viewable_range
   input_range
   output_range
   forward_range
   bidirectional_range
   random_access_range
   contiguous_range
   Views
   view_interface
   subrange
   Range factories
   empty_viewviews::empty
   single_viewviews::single
   iota_viewviews::iota
   repeat_viewviews::repeat
   (C++23)(C++23)
   basic_istream_viewviews::istream
   Range adaptors
   views::all_tviews::all
   ref_view
   owning_view
   as_rvalue_viewviews::as_rvalue
   (C++23)(C++23)
   filter_viewviews::filter
   transform_viewviews::transform
   take_viewviews::take
   take_while_viewviews::take_while
   concat_viewviews::concat
   (C++26)(C++26)
   drop_viewviews::drop
   drop_while_viewviews::drop_while
   join_viewviews::join
   join_with_viewviews::join_with
   (C++23)(C++23)
   lazy_split_viewviews::lazy_split
   split_viewviews::split
   views::counted
   common_viewviews::common
   reverse_viewviews::reverse
   as_const_viewviews::as_const
   (C++23)(C++23)
   elements_viewviews::elements
   keys_viewviews::keys
   values_viewviews::values
   enumerate_viewviews::enumerate
   (C++23)(C++23)
   zip_viewviews::zip
   (C++23)(C++23)
   zip_transform_viewviews::zip_transform
   (C++23)(C++23)
   adjacent_viewviews::adjacent
   (C++23)(C++23)
   views::pairwise
   (C++23)
   adjacent_transform_viewviews::adjacent_transform
   (C++23)(C++23)
   views::pairwise_transform
   (C++23)
   chunk_viewviews::chunk
   (C++23)(C++23)
   slide_viewviews::slide
   (C++23)(C++23)
   chunk_by_viewviews::chunk_by
   (C++23)(C++23)
   stride_viewviews::stride
   (C++23)(C++23)
   cartesian_product_viewviews::cartesian_product
   (C++23)(C++23)
   Range generators
   std::generator
   (C++23)
   Range adaptor objects
   Range adaptor closure objects
   range_adaptor_closure
   (C++23)
   Helper items
   copyable-box
   movable-box
   (until C++23)(C++23)
   simple-view
   non-propagating-cache

   std::ranges::chunk_view
   Member functions
   chunk_view::chunk_view
   chunk_view::base
   chunk_view::begin
   chunk_view::end
   chunk_view::size
   Classes for input_ranges
   Deduction guides
   outer-iterator
   chunk_view::outer-iterator::outer-iterator
   chunk_view::outer-iterator::operator=
   chunk_view::outer-iterator::operator*
   chunk_view::outer-iterator::operator++
   chunk_view::outer-iterator::operator++(int)
   operator==(chunk_view::outer-iterator)
   operator-(chunk_view::outer-iterator)
   outer-iterator::value_type
   chunk_view::outer-iterator::value_type::value_type
   chunk_view::outer-iterator::value_type::begin
   chunk_view::outer-iterator::value_type::end
   chunk_view::outer-iterator::value_type::size
   inner-iterator
   chunk_view::inner-iterator::inner-iterator
   chunk_view::inner-iterator::operator=
   chunk_view::inner-iterator::base
   chunk_view::inner-iterator::operator*
   chunk_view::inner-iterator::operator++
   chunk_view::inner-iterator::operator++(int)
   operator==(chunk_view::inner-iterator)
   operator-(chunk_view::inner-iterator)
   iter_move(chunk_view::inner-iterator)
   iter_swap(chunk_view::inner-iterator)
   Class template for forward_ranges
   iterator
   chunk_view::iterator::iterator
   chunk_view::iterator::base
   chunk_view::iterator::operator*
   chunk_view::iterator::operator[]
   chunk_view::iterator::operator++
   chunk_view::iterator::operator++(int)
   chunk_view::iterator::operator--
   chunk_view::iterator::operator--(int)
   chunk_view::iterator::operator+=
   chunk_view::iterator::operator-=
   operator==(chunk_view::iterator)
   operator<(chunk_view::iterator)
   operator>(chunk_view::iterator)
   operator<=(chunk_view::iterator)
   operator>=(chunk_view::iterator)
   operator<=>(chunk_view::iterator)
   operator+(chunk_view::iterator)
   operator-(chunk_view::iterator)

   Defined in header <ranges>
   struct value_type : view_interface<value_type>
                                                 (since C++23)

   A value type of the iterator chunk_view::outer-iterator, formed when V
   models input_range.

Data members

   Member object Definition
   parent_ (private) A pointer to the "parent object" of type
   ranges::chunk_view*
   (exposition-only member object*)

Member functions

   (constructor)
   (C++23)
   constructs an value_type
   (public member function)
   begin
   (C++23)
   returns the beginning chunk_view::inner-iterator
   (public member function)
   end
   (C++23)
   returns the default sentinel
   (public member function)
   size
   (C++23)
   returns the size of the view
   (public member function)

Inherited from std::ranges::view_interface

   empty
   (C++20)
   returns whether the derived view is empty. Provided if it satisfies
   sized_range or forward_range.
   (public member function of std::ranges::view_interface<D>)
   cbegin
   (C++23)
   returns a constant iterator to the beginning of the range.
   (public member function of std::ranges::view_interface<D>)
   cend
   (C++23)
   returns a sentinel for the constant iterator of the range.
   (public member function of std::ranges::view_interface<D>)
   operator bool
   (C++20)
   returns whether the derived view is not empty. Provided if
   ranges::empty is applicable to it.
   (public member function of std::ranges::view_interface<D>)

std::ranges::chunk_view::outer-iterator::value_type::value_type

   private:

   // exposition only
   constexpr explicit value_type( chunk_view& parent );
           (since C++23)

   Constructs the value_type object so that parent_ is initialized with
   std::addressof(parent).

Parameters

   parent - the chunk_view object

std::ranges::chunk_view::outer-iterator::value_type::begin

   constexpr /*inner-iterator*/ begin() const noexcept;
                                                       (since C++23)

   Equivalent to return /*inner-iterator*/(*parent_);.

std::ranges::chunk_view::outer-iterator::value_type::end

   constexpr std::default_sentinel_t end() const noexcept;
                                                          (since C++23)

   Equivalent to return std::default_sentinel;.

std::ranges::chunk_view::outer-iterator::value_type::size

   constexpr auto size() const
       requires std::sized_sentinel_for<ranges::sentinel_t<V>,
   ranges::iterator_t<V>>;
                              (since C++23)

   Returns the size of the view.

   Equivalent to
   return /*to-unsigned-like*/(
       ranges::min(parent_->remainder_, ranges::end(parent_->base_) -
   *parent_->current_));

Example

   This section is incomplete
   Reason: example

References

     * C++23 standard (ISO/IEC 14882:2023):

          + 26.7.28.4 Class chunk_view::outer-iterator::value_type
            [range.chunk.outer.value]

See also

   outer_iterator
   (C++23)
   the output ("chunk-wise") iterator type when V models input_range
   (exposition-only member class of std::ranges::chunk_view<V>*)
   inner_iterator
   (C++23)
   the inner ("element-wise") iterator type when V models input_range
   (exposition-only member class of std::ranges::chunk_view<V>*)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/ranges/chunk_vie
   w/outer_iterator/value_type&oldid=157783"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 September 2023, at 13:32.
     * This page has been accessed 1,490 times.
