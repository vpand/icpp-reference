std::optional<T>::operator->, std::optional<T>::operator*

   From cppreference.com
   < cpp | utility | optional

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   std::optional
   Member functions
   optional::optional
   optional::~optional
   optional::operator=
   Observers
   optional::operator->optional::operator*
   optional::operator booloptional::has_value
   optional::value
   optional::value_or
   Monadic operations
   optional::and_then
   (C++23)
   optional::transform
   (C++23)
   optional::or_else
   (C++23)
   Modifiers
   optional::emplace
   optional::swap
   optional::reset
   Non-member functions
   operator==operator!=operator<operator<=operator>operator>=operator<=>
   (C++20)
   make_optional
   swap(std::optional)
   Deduction guides
   Helper classes
   hash<std::optional>
   nullopt_t
   in_place_t
   bad_optional_access
   Helper objects
   nullopt
   in_place

   constexpr const T* operator->() const noexcept;
   (1)                                              (since C++17)
   constexpr T* operator->() noexcept;
   (1)                                              (since C++17)
   constexpr const T& operator*() const& noexcept;
   (2)                                              (since C++17)
   constexpr T& operator*() & noexcept;
   (2)                                              (since C++17)
   constexpr const T&& operator*() const&& noexcept;
   (2)                                              (since C++17)
   constexpr T&& operator*() && noexcept;
   (2)                                              (since C++17)

   Accesses the contained value.
   1) Returns a pointer to the contained value.
   2) Returns a reference to the contained value.

   The behavior is undefined if *this does not contain a value.

Parameters

   (none)

Return value

   Pointer or reference to the contained value.

Notes

   This operator does not check whether the optional contains a value! You
   can do so manually by using has_value() or simply operator bool().
   Alternatively, if checked access is needed, value() or value_or() may
   be used.

Example

   Run this code
#include <iomanip>
#include <iostream>
#include <optional>
#include <string>

int main()
{
    using namespace std::string_literals;

    std::optional<int> opt1 = 1;
    std::cout << "opt1: " << *opt1 << '\n';

    *opt1 = 2;
    std::cout << "opt1: " << *opt1 << '\n';

    std::optional<std::string> opt2 = "abc"s;
    std::cout << "opt2: " << std::quoted(*opt2) << ", size: " << opt2->size() <<
 '\n';

    // You can "take" the contained value by calling operator* on an rvalue to o
ptional

    auto taken = *std::move(opt2);
    std::cout << "taken: " << std::quoted(taken) << "\n"
                 "opt2: " << std::quoted(*opt2) << ", size: " << opt2->size()  <
< '\n';
}

   Output:
opt1: 1
opt1: 2
opt2: "abc", size: 3
taken: "abc"
opt2: "", size: 0

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 2762 C++17 operator-> and operator* might be potentially-throwing
   made noexcept

See also

   value
   returns the contained value
   (public member function)
   value_or
   returns the contained value if available, another value otherwise
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/utility/optional
   /operator*&oldid=160621"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 12 October 2023, at 15:19.
     * This page has been accessed 170,440 times.
