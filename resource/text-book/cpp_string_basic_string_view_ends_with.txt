std::basic_string_view<CharT,Traits>::ends_with

   From cppreference.com
   < cpp | string | basic string view

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string_view
   Member functions
   basic_string_view::basic_string_view

   basic_string_view::operator=
   Iterators
   basic_string_view::beginbasic_string_view::cbegin
   basic_string_view::endbasic_string_view::cend
   basic_string_view::rbeginbasic_string_view::crbegin
   basic_string_view::rendbasic_string_view::crend
   Element access
   basic_string_view::at
   basic_string_view::operator[]
   basic_string_view::front
   basic_string_view::back
   basic_string_view::data
   Capacity
   basic_string_view::sizebasic_string_view::length
   basic_string_view::max_size
   basic_string_view::empty
   Modifiers
   basic_string_view::remove_prefix
   basic_string_view::remove_suffix
   basic_string_view::swap
   Operations
   basic_string_view::copy
   basic_string_view::substr
   basic_string_view::compare
   basic_string_view::starts_with
   (C++20)
   basic_string_view::ends_with
   (C++20)
   basic_string_view::contains
   (C++23)
   basic_string_view::find
   basic_string_view::rfind
   basic_string_view::find_first_of
   basic_string_view::find_last_of
   basic_string_view::find_first_not_of
   basic_string_view::find_last_not_of
   Constants
   basic_string_view::npos
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator<<
   operator""sv
   Helper classes
   hash<std::string_view>hash<std::wstring_view>hash<std::u8string_view>ha
   sh<std::u16string_view>hash<std::u32string_view>
   (C++20)
   Deduction guides(C++20)

   constexpr bool ends_with( basic_string_view sv ) const noexcept;
   (1)                                                             (since C++20)
   constexpr bool ends_with( CharT ch ) const noexcept;
   (2)                                                             (since C++20)
   constexpr bool ends_with( const CharT* s ) const;
   (3)                                                             (since C++20)

   Checks if the string view ends with the given suffix, where
   1) the suffix is a string view. Effectively returns size() >= sv.size()
   && compare(size() - sv.size(), npos, sv) == 0.
   2) the suffix is a single character. Effectively returns !empty() &&
   Traits::eq(back(), ch).
   3) the suffix is a null-terminated character string. Effectively
   returns ends_with(basic_string_view(s)).

Parameters

   sv - a string view which may be a result of implicit conversion from
   std::basic_string
   ch - a single character
   s - a null-terminated character string

Return value

   true if the string view ends with the provided suffix, false otherwise.

Notes

   Feature-test macro Value Std Feature
   __cpp_lib_starts_ends_with 201711L (C++20) String prefix and suffix
   checking: starts_with() and ends_with()

Example

   Run this code
#include <cassert>
#include <string_view>

int main()
{
    using namespace std::literals;

    assert
    (""
        // (1) ends_with( basic_string_view sv )
        && std::string_view("https://cppreference.com").ends_with(".com"sv) == t
rue
        && std::string_view("https://cppreference.com").ends_with(".org"sv) == f
alse

        // (2) ends_with( CharT c )
        && std::string_view("C++20").ends_with('0') == true
        && std::string_view("C++20").ends_with('3') == false

        // (3) ends_with( const CharT* s )
        && std::string_view("string_view").ends_with("view") == true
        && std::string_view("string_view").ends_with("View") == false
    );
}

See also

   starts_with
   (C++20)
   checks if the string view starts with the given prefix
   (public member function)
   starts_with
   (C++20)
   checks if the string starts with the given prefix
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   ends_with
   (C++20)
   checks if the string ends with the given suffix
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   contains
   (C++23)
   checks if the string contains the given substring or character
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   contains
   (C++23)
   checks if the string view contains the given substring or character
   (public member function)
   compare
   compares two views
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing_view/ends_with&oldid=156938"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 August 2023, at 08:19.
     * This page has been accessed 29,661 times.
