std::pair

   From cppreference.com
   < cpp | utility

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   std::pair
   Member functions
   pair::pair
   pair::operator=
   pair::swap
   (C++11)
   Non-member functions
   make_pair
   operator==operator!=operator<operator<=operator>operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   swap(std::pair)
   (C++11)
   get(std::pair)
   (C++11)
   Helper classes
   tuple_size<std::pair>
   (C++11)
   tuple_element<std::pair>
   (C++11)
   basic_common_reference<std::pair>
   (C++23)
   common_type<std::pair>
   (C++23)
   formatter<std::pair>
   (C++23)
   piecewise_construct_t
   (C++11)
   Deduction guides(C++17)

   Defined in header <utility>
   template<

       class T1,
       class T2
   > struct pair;

   std::pair is a class template that provides a way to store two
   heterogeneous objects as a single unit. A pair is a specific case of a
   std::tuple with two elements.

   If neither T1 nor T2 is a possibly cv-qualified class type with
   non-trivial destructor, or array thereof, the destructor of pair is
   trivial.

Template parameters

   T1, T2 - the types of the elements that the pair stores.

Member types

   Member type Definition
   first_type  T1
   second_type T2

Member objects

   Member name Type
   first       T1
   second      T2

Member functions

   (constructor)
   constructs new pair
   (public member function)
   operator=
   assigns the contents
   (public member function)
   swap
   (C++11)
   swaps the contents
   (public member function)

Non-member functions

   make_pair
   creates a pair object of type, defined by the argument types
   (function template)
   operator==operator!=operator<operator<=operator>operator>=operator<=>
   (removed in C++20)(removed in C++20)(removed in C++20)(removed in
   C++20)(removed in C++20)(C++20)
   lexicographically compares the values in the pair
   (function template)
   std::swap(std::pair)
   (C++11)
   specializes the std::swap algorithm
   (function template)
   get(std::pair)
   (C++11)
   accesses an element of a pair
   (function template)

Helper classes

   std::tuple_size<std::pair>
   (C++11)
   obtains the size of a pair
   (class template specialization)
   std::tuple_element<std::pair>
   (C++11)
   obtains the type of the elements of pair
   (class template specialization)
   std::basic_common_reference<std::pair>
   (C++23)
   determines the common reference type of two pairs
   (class template specialization)
   std::common_type<std::pair>
   (C++23)
   determines the common type of two pairs
   (class template specialization)
   std::formatter<std::pair>
   (C++23)
   formatting support for pair
   (class template specialization)

Deduction guides(since C++17)

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 2796 C++98 triviality of the destructor of pair was unspecified
   specified

See also

   tuple
   (C++11)
   implements fixed size container, which holds elements of possibly
   different types
   (class template)
   tie
   (C++11)
   creates a tuple of lvalue references or unpacks a tuple into individual
   objects
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/utility/pair&old
   id=170510"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 27 March 2024, at 19:48.
     * This page has been accessed 2,306,863 times.
