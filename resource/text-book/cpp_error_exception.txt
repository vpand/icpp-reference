std::exception

   From cppreference.com
   < cpp | error

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   std::exception
   Member functions
   exception::exception
   exception::~exception
   exception::operator=
   exception::what

   Defined in header <exception>
   class exception;

   Provides consistent interface to handle errors through the throw
   expression.

   All exceptions generated by the standard library inherit from
   std::exception.

Member functions

   (constructor)
   constructs the exception object
   (public member function)
   (destructor)
   [virtual]
   destroys the exception object
   (virtual public member function)
   operator=
   copies exception object
   (public member function)
   what
   [virtual]
   returns an explanatory string
   (virtual public member function)

Standard exception requirements

   Each standard library class T that derives from std::exception has the
   following publicly accessible member functions, each of them do not
   exit with an exception(until C++11)having a non-throwing exception
   specification(since C++11):
     * default constructor (unless other constructors are provided)
     * copy constructor
     * copy assignment operator

   The copy constructor and the copy assignment operator meet the
   following postcondition:
     * If two objects lhs and rhs both have dynamic type T and lhs is a
       copy of rhs, then std::strcmp(lhs.what(), rhs.what()) is equal to
       0.

   The what() member function of each such T satisfies the constraints
   specified for std::exception::what().

Standard exceptions

     * logic_error

          + invalid_argument
          + domain_error
          + length_error
          + out_of_range
          + future_error (since C++11)

     * runtime_error

          + range_error
          + overflow_error
          + underflow_error
          + regex_error (since C++11)
          + system_error (since C++11)

               o ios_base::failure (since C++11)
               o filesystem::filesystem_error (since C++17)

          + tx_exception (TM TS)
          + nonexistent_local_time (since C++20)
          + ambiguous_local_time (since C++20)
          + format_error (since C++20)

     * bad_typeid
     * bad_cast

          + bad_any_cast (since C++17)

     * bad_optional_access (since C++17)
     * bad_expected_access (since C++23)
     * bad_weak_ptr (since C++11)
     * bad_function_call (since C++11)
     * bad_alloc

          + bad_array_new_length (since C++11)

     * bad_exception
     * ios_base::failure (until C++11)
     * bad_variant_access (since C++17)

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 471 C++98 there was no requirement on standard library classes
   derived from std::exception added
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/error/exception&
   oldid=171585"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 7 May 2024, at 20:17.
     * This page has been accessed 1,864,827 times.
