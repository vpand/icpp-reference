std::array<T,N>::rbegin, std::array<T,N>::crbegin

   From cppreference.com
   < cpp | container | array


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::array
   Member types
   Member functions
   Element access
   array::at
   array::operator[]
   array::front
   array::back
   array::data
   Iterators
   array::beginarray::cbegin
   array::endarray::cend
   array::rbeginarray::crbegin
   array::rendarray::crend
   Capacity
   array::empty
   array::size
   array::max_size
   Operations
   array::fill
   array::swap
   Non-member functions
   get(std::array)
   (C++11)
   swap(std::array)
   (C++11)
   to_array
   (C++20)
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (C++11)(C++11)(until C++20)(C++11)(until C++20)(C++11)(until
   C++20)(C++11)(until C++20)(C++11)(until C++20)(C++20)
   Helper classes
   tuple_size<std::array>
   (C++11)
   tuple_element<std::array>
   (C++11)
   Deduction guides (C++17)

   reverse_iterator rbegin() noexcept;
   (1) (since C++11)
   (constexpr since C++17)
   const_reverse_iterator rbegin() const noexcept;
   (2) (since C++11)
   (constexpr since C++17)
   const_reverse_iterator crbegin() const noexcept;
   (3) (since C++11)
   (constexpr since C++17)

   Returns a reverse iterator to the first element of the reversed array.
   It corresponds to the last element of the non-reversed array. If the
   array is empty, the returned iterator is equal to rend().

   range-rbegin-rend.svg

Parameters

   (none)

Return value

   Reverse iterator to the first element.

Complexity

   Constant.

Notes

   The underlying iterator of the returned reverse iterator is the end
   iterator. Hence the returned iterator is invalidated if and when the
   end iterator is invalidated.

Example

   Run this code
#include <algorithm>
#include <array>
#include <iostream>
#include <string>
#include <string_view>

int main()
{
    constexpr std::array<std::string_view, 8> data = {"","","","LB","","","","FB
"};

    std::array<std::string, std::size(data)> arr;

    std::copy(data.cbegin(), data.cend(), arr.begin());
    //             ^              ^           ^

    auto print = [](const std::string_view s) { std::cout << s << ' '; };

    print("Print 'arr' in direct order using [cbegin, cend):\t");
    std::for_each(arr.cbegin(), arr.cend(), print);
    //                ^             ^
    print("\n\nPrint 'arr' in reverse order using [crbegin, crend):\t");
    std::for_each(arr.crbegin(), arr.crend(), print);
    //                ^^             ^^
    print("\n");
}

   Output:
Print 'arr' in direct order using [cbegin, cend):           LB    FB

Print 'arr' in reverse order using [crbegin, crend):     FB    LB

See also

   rendcrend
   returns a reverse iterator to the end
   (public member function)
   rbegincrbegin
   (C++14)
   returns a reverse iterator to the beginning of a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/array/
   rbegin&oldid=122726"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 September 2020, at 08:54.
     * This page has been accessed 37,976 times.
