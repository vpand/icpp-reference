std::error_category

   From cppreference.com
   < cpp | error

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   std::error_category
   Member functions
   error_category::error_category
   error_category::~error_category
   error_category::name
   error_category::default_error_condition
   error_category::equivalent
   error_category::message
   error_category::operator==error_category::operator!=error_category::ope
   rator<error_category::operator<=>
   (until C++20)(until C++20)(C++20)

   Defined in header <system_error>
   class error_category;
                                   (since C++11)

   std::error_category serves as the base class for specific error
   category types, such as std::system_category, std::iostream_category,
   etc. Each specific category class defines the error_code -
   error_condition mapping and holds the explanatory strings for all
   error_conditions. The objects of error category classes are treated as
   singletons, passed by reference.

Member functions

   (constructor)
   constructs an error_category
   (public member function)
   (destructor)
   [virtual]
   destructs an error_category
   (virtual public member function)
   operator=
   [deleted]
   not copy assignable
   (public member function)
   name
   [virtual]
   obtains the name of the category
   (virtual public member function)
   default_error_condition
   [virtual]
   maps error_code to error_condition
   (virtual public member function)
   equivalent
   [virtual]
   compares error_code and error_condition for equivalence
   (virtual public member function)
   message
   [virtual]
   obtains the explanatory string
   (virtual public member function)
   operator==operator!=operator<operator<=>
   (removed in C++20)(removed in C++20)(C++20)
   compares two error categories
   (function)

Specific error categories

   generic_category
   (C++11)
   identifies the generic error category
   (function)
   system_category
   (C++11)
   identifies the operating system error category
   (function)
   iostream_category
   (C++11)
   identifies the iostream error category
   (function)
   future_category
   (C++11)
   identifies the future error category
   (function)

See also

   error_condition
   (C++11)
   holds a portable error code
   (class)
   error_code
   (C++11)
   holds a platform-dependent error code
   (class)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/error/error_cate
   gory&oldid=170168"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 14 March 2024, at 01:51.
     * This page has been accessed 160,089 times.
