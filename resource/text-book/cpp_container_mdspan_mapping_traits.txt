std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_unique,
std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_exhaustive,
std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_strided,
std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_unique,
std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_exhaustive,
std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_strided

   From cppreference.com
   < cpp | container | mdspan

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::mdspan
   Member functions
   mdspan::mdspan
   mdspan::operator=
   Element access
   mdspan::operator[]
   Observers
   mdspan::size
   mdspan::empty
   mdspan::stride
   mdspan::extents
   mdspan::data_handle
   mdspan::mapping
   mdspan::accessor
   mdspan::is_uniquemdspan::is_exhaustivemdspan::is_stridedmdspan::is_alwa
   ys_uniquemdspan::is_always_exhaustivemdspan::is_always_strided
   Non-member functions
   swap(std::mdspan)
   Subviews
   submdspan_extents
   (C++26)
   submdspan
   (C++26)
   Helper types and templates
   extentsdextents
   layout_right
   layout_left
   layout_stride
   layout_left_padded
   (C++26)
   layout_right_padded
   (C++26)
   default_accessor
   Subviews helpers
   full_extent
   (C++26)
   strided_slice
   (C++26)
   submdspan_mapping_result
   (C++26)
   Deduction guides

   Defined in header <mdspan>
   constexpr bool is_unique() const;
   (1)                                          (since C++23)
   constexpr bool is_exhaustive() const;
   (2)                                          (since C++23)
   constexpr bool is_strided() const;
   (3)                                          (since C++23)
   static member functions
   static constexpr bool is_always_unique();
   (4)                                          (since C++23)
   static constexpr bool is_always_exhaustive();
   (5)                                          (since C++23)
   static constexpr bool is_always_strided();
   (6)                                          (since C++23)

   Check if (1-3) the layout mapping map_ or (4-6) its type mapping_type
   satisfies some traits.
   1-3) Let func be (1) is_unique, (2) is_exhaustive, or (3) is_strided,
   then it's equivalent to return map_.func();.
   4-6) Let func be (4) is_always_unique, (5) is_always_exhaustive, or (6)
   is_always_strided, then it's equivalent to return
   mapping_type::func();.
   This section is incomplete
   Reason: add hyperlink to layout.reqmts(yet has not been created).

Parameters

   (none)

Return value

   See above.

Example

   This section is incomplete
   Reason: no example

See also

   This section is incomplete
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/mdspan
   /mapping_traits&oldid=161931"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 November 2023, at 02:00.
     * This page has been accessed 2,949 times.
