C++ named requirements: FormattedInputFunction

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

Requirements

   A FormattedInputFunction is a stream input function that performs the
   following:
     * Constructs an object of type basic_istream::sentry with automatic
       storage duration and with the noskipws argument set to false, which
       performs the following:

          + if eofbit or badbit are set on the input stream, sets the
            failbit as well, and if exceptions on failbit are enabled in
            this input stream's exception mask ((exceptions() & failbit)
            != 0), throws ios_base::failure.
          + flushes the tie()'d output stream, if applicable.
          + if ios_base::skipws flag is set on this input stream, extracts
            and discards characters from the input stream until one of the
            following becomes true:

               o the next available character on the input stream is not a
                 whitespace character, as tested by the std::ctype facet
                 of the locale currently imbued in this input stream. The
                 non-whitespace character is not extracted.
               o the end of the stream is reached, in which case failbit
                 and eofbit are set and if the stream is on for exceptions
                 on one of these bits, ios_base::failure is thrown.

     * Checks the status of the sentry by calling sentry::operator bool(),
       which is equivalent to basic_ios::good.
     * If the sentry returned false or sentry's constructor threw an
       exception, no input takes place.
     * If the sentry returned true, performs the input as if by calling
       rdbuf()->sbumpc() or rdbuf()->sgetc().

          + if the end of the stream is reached (the call to
            rdbuf()->sbumpc() or rdbuf()->sgetc() returns Traits::eof()),
            sets eofbit. If exceptions on eofbit are enabled in this
            stream's exception mask ((exceptions() & eofbit) != 0), throws
            ios_base::failure.
          + if an exception is thrown during input, sets badbit in the
            input stream. If exceptions on badbit are enabled in this
            stream's exception mask ((exceptions() & badbit) != 0), the
            exception is also rethrown.
          + If no exception was thrown, returns *this.

     * In any event, whether terminating by exception or returning, the
       sentry's destructor is called before leaving this function.

Standard library

   The following standard library functions are FormattedInputFunctions.
     * basic_istream::operator>>(int, long, double, void*, bool)
     * operator>>(std::basic_istream, char&)
     * operator>>(std::basic_istream, char*)
     * operator>>(std::basic_istream, std::bitset)
     * operator>>(std::basic_istream, std::string)
     * operator>>, when called on the return value of std::get_money

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 160 C++98 the process of determining whether the exception caught
   is rethrown mentioned a non-existing function exception() corrected to
   exceptions()
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/Format
   tedInputFunction&oldid=160324"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 October 2023, at 08:10.
     * This page has been accessed 41,814 times.
