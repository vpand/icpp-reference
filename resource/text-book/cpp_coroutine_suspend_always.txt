std::suspend_always

   From cppreference.com
   < cpp | coroutine

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Coroutine support
   Coroutine traits
   coroutine_traits
   (C++20)
   Coroutine handle
   coroutine_handle
   (C++20)
   No-op coroutines
   noop_coroutine_promise
   (C++20)
   noop_coroutine
   (C++20)
   Trivial awaitables
   suspend_never
   (C++20)
   suspend_always
   (C++20)
   Range generators
   generator
   (C++23)

   Defined in header <coroutine>
   struct suspend_always;
                                (since C++20)

   suspend_always is an empty class which can be used to indicate that an
   await expression always suspends and does not produce a value.

Member functions

   await_ready
   (C++20)
   indicates that an await expression always suspends
   (public member function)
   await_suspend
   (C++20)
   no-op
   (public member function)
   await_resume
   (C++20)
   no-op
   (public member function)

std::suspend_always::await_ready

   constexpr bool await_ready() const noexcept { return false; }
                                                                (since C++20)

   Always returns false, indicating that an await expression always
   suspends.

std::suspend_always::await_suspend

   constexpr void await_suspend( std::coroutine_handle<> ) const noexcept
   {}
   (since C++20)

   Does nothing.

std::suspend_always::await_resume

   constexpr void await_resume() const noexcept {}
                                                  (since C++20)

   Does nothing. An await expression does not produce a value if
   suspend_always is used.

Example

   This section is incomplete
   Reason: no example

See also

   suspend_never
   (C++20)
   indicates that an await-expression should never suspend
   (class)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/coroutine/suspen
   d_always&oldid=145394"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 5 December 2022, at 06:12.
     * This page has been accessed 30,037 times.
