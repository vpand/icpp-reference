C++ named requirements: DefaultConstructible

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   Specifies that an instance of the type can be default constructed.

Requirements

   The type T satisfies DefaultConstructible if

   Given
     * u, an arbitrary identifier.

   The following expressions must be valid and have their specified
   effects.
   Expression Post-conditions
   T u; The object u is default-initialized.
   T u{}; The object u is value-initialized or aggregate-initialized.
   T()

   T{}
   A temporary object of type T is value-initialized or
   aggregate-initialized.

Notes

   For objects of non-aggregate class type, a public default constructor
   must be defined (either user-defined or implicitly defined) to satisfy
   DefaultConstructible.

   Non-const objects of non-class object type are always
   DefaultConstructible.

   Const non-class types are not DefaultConstructible.

   Const aggregate types are not DefaultConstructible if any of their
   members is an object of non-class type.

   Non-object types (function types, reference types, and the (possibly
   cv-qualified) type void) as well as the const non-object types are
   never DefaultConstructible.

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 724 C++98 the requirements of DefaultConstructible were missing
   added

See also

   is_default_constructibleis_trivially_default_constructibleis_nothrow_de
   fault_constructible
   (C++11)(C++11)(C++11)
   checks if a type has a default constructor
   (class template)
   default_initializable
   (C++20)
   specifies that an object of a type can be default constructed
   (concept)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/Defaul
   tConstructible&oldid=156432"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 August 2023, at 11:33.
     * This page has been accessed 116,120 times.
