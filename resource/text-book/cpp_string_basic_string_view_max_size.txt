std::basic_string_view<CharT,Traits>::max_size

   From cppreference.com
   < cpp | string | basic string view

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string_view
   Member functions
   basic_string_view::basic_string_view

   basic_string_view::operator=
   Iterators
   basic_string_view::beginbasic_string_view::cbegin
   basic_string_view::endbasic_string_view::cend
   basic_string_view::rbeginbasic_string_view::crbegin
   basic_string_view::rendbasic_string_view::crend
   Element access
   basic_string_view::at
   basic_string_view::operator[]
   basic_string_view::front
   basic_string_view::back
   basic_string_view::data
   Capacity
   basic_string_view::sizebasic_string_view::length
   basic_string_view::max_size
   basic_string_view::empty
   Modifiers
   basic_string_view::remove_prefix
   basic_string_view::remove_suffix
   basic_string_view::swap
   Operations
   basic_string_view::copy
   basic_string_view::substr
   basic_string_view::compare
   basic_string_view::starts_with
   (C++20)
   basic_string_view::ends_with
   (C++20)
   basic_string_view::contains
   (C++23)
   basic_string_view::find
   basic_string_view::rfind
   basic_string_view::find_first_of
   basic_string_view::find_last_of
   basic_string_view::find_first_not_of
   basic_string_view::find_last_not_of
   Constants
   basic_string_view::npos
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator<<
   operator""sv
   Helper classes
   hash<std::string_view>hash<std::wstring_view>hash<std::u8string_view>ha
   sh<std::u16string_view>hash<std::u32string_view>
   (C++20)
   Deduction guides(C++20)

   constexpr size_type max_size() const noexcept;
                                                 (since C++17)

   The largest possible number of char-like objects that can be referred
   to by a basic_string_view.

Parameters

   (none)

Return value

   Maximum number of characters.

Complexity

   Constant.

Example

   Run this code
#include <cstdint>
#include <iostream>
#include <limits>
#include <string_view>

int main()
{
    std::cout << std::numeric_limits<std::int64_t>::max()
              << " <- numeric_limits<int64_t>::max()\n"
              << std::string_view{}.max_size()
              << " <- string_view::max_size()\n"
              << std::basic_string_view<char>{}.max_size()
              << " <- basic_string_view<char>::max_size()\n"
              << std::basic_string_view<char16_t>{}.max_size()
              << " <- basic_string_view<char16_t>::max_size()\n"
              << std::wstring_view{}.max_size()
              << " <- wstring_view::max_size()\n"
              << std::basic_string_view<char32_t>{}.max_size()
              << " <- basic_string_view<char32_t>::max_size()\n";
}

   Possible output:
9223372036854775807 <- numeric_limits<int64_t>::max()
4611686018427387899 <- string_view::max_size()
4611686018427387899 <- basic_string_view<char>::max_size()
2305843009213693949 <- basic_string_view<char16_t>::max_size()
1152921504606846974 <- wstring_view::max_size()
1152921504606846974 <- basic_string_view<char32_t>::max_size()

See also

   sizelength
   returns the number of characters
   (public member function)
   empty
   checks whether the view is empty
   (public member function)
   max_size
   returns the maximum number of characters
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing_view/max_size&oldid=167616"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 27 December 2023, at 17:12.
     * This page has been accessed 22,797 times.
