C++ named requirements: Clock (since C++11)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   The Clock requirements describe a bundle consisting of a
   std::chrono::duration, a std::chrono::time_point, and a function now()
   to get the current time_point. The origin of the clock's time_point is
   referred to as the clock's epoch.

Requirements

   C1 and C2 denote clock types. t1 and t2 are values returned by
   C1::now() where the call returning t1 happens before the call returning
   t2 and both of these calls occur before C1::time_point::max().
   Expression Return type Operational semantics
   C1::rep An arithmetic type or a class emulating an arithmetic type The
   representation type of C1::duration.
   C1::period A specialization of std::ratio The tick period of the clock
   in seconds.
   C1::duration std::chrono::duration<C1::rep, C1::period> The duration
   type of the clock.
   C1::time_point std::chrono::time_point<C1> or
   std::chrono::time_point<C2, C1::duration> The std::chrono::time_point
   type of the clock. C1 and C2 shall refer to the same epoch.
   C1::is_steady const bool true if t1 <= t2 is always true and the clock
   advances at a steady rate relative to real time (so the difference
   between two distinct reported times is approximately the elapsed real
   time between the clock updates), otherwise false
   C1::now() C1::time_point Returns a time_point object representing the
   current point in time.

See also

   is_clockis_clock_v
   (C++20)
   determines if a type is a Clock
   (class template) (variable template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/Clock&
   oldid=144944"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 November 2022, at 13:28.
     * This page has been accessed 75,570 times.
