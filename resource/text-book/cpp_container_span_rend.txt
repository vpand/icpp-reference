std::span<T,Extent>::rend, std::span<T,Extent>::crend

   From cppreference.com
   < cpp | container | span


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::span
   Member functions
   span::span
   span::operator=
   Element access
   span::front
   span::back
   span::at
   (C++26)
   span::operator[]
   span::data
   Iterators
   span::beginspan::cbegin
   (C++23)
   span::endspan::cend
   (C++23)
   span::rbeginspan::crbegin
   (C++23)
   span::rendspan::crend
   (C++23)
   Observers
   span::empty
   span::size
   span::size_bytes
   Subviews
   span::first
   span::last
   span::subspan
   Non-member functions
   as_bytesas_writable_bytes
   (C++20)(C++20)
   Non-member constant
   dynamic_extent
   (C++20)
   Deduction guides

   constexpr reverse_iterator rend() const noexcept;
   (1)                                                     (since C++20)
   constexpr const_reverse_iterator crend() const noexcept;
   (2)                                                     (since C++23)

   Returns a reverse iterator to the element following the last element of
   the reversed span. It corresponds to the element preceding the first
   element of the non-reversed span. This element acts as a placeholder,
   attempting to access it results in undefined behavior.

   range-rbegin-rend.svg

Parameters

   (none)

Return value

   Reverse iterator to the element following the last element.

Complexity

   Constant.

Example

   Run this code
#include <algorithm>
#include <iostream>
#include <span>
#include <string_view>

void ascending(const std::span<const std::string_view> data,
               const std::string_view term)
{
    std::for_each(data.begin(), data.end(),
        [](const std::string_view x) { std::cout << x << ' '; });
    std::cout << term;
}

void descending(const std::span<const std::string_view> data,
                const std::string_view term)
{
    std::for_each(data.rbegin(), data.rend(),
        [](const std::string_view x) { std::cout << x << ' '; });
    std::cout << term;
}

int main()
{
    constexpr std::string_view bars[]{"","","","LB","","","","FB"};
    ascending(bars, " ");
    descending(bars, "\n");
}

   Output:
   LB    FB  FB    LB

See also

   rbegincrbegin
   (C++23)
   returns a reverse iterator to the beginning
   (public member function)
   rendcrend
   (C++14)
   returns a reverse end iterator for a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/span/r
   end&oldid=135420"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 20 November 2021, at 13:10.
     * This page has been accessed 11,384 times.
