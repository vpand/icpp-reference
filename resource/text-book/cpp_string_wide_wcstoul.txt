std::wcstoul, std::wcstoull

   From cppreference.com
   < cpp | string | wide

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   iswalpha
   iswlower
   iswupper
   iswdigit
   iswxdigit
   iswblank
   (C++11)
   wctype
   iswctype
   iswcntrl
   iswgraph
   iswspace
   iswprint
   iswpunct
   towlower
   towupper
   wctrans
   towctrans
   Conversions to numeric formats
   wcstolwcstoll
   (C++11)
   wcstoulwcstoull
   (C++11)
   wcstofwcstodwcstold
   (C++11)(C++11)
   wcstoimaxwcstouimax
   (C++11)(C++11)
   String manipulation
   wcslen
   wcscpy
   wcsncpy
   wcscat
   wcsncat
   wcscmp
   wcscoll
   wcsncmp
   wcsxfrm
   wcschr
   wcsrchr
   wcspbrk
   wcsspn
   wcscspn
   wcsstr
   wcstok
   Array manipulation
   wmemcpy
   wmemmove
   wmemcmp
   wmemchr
   wmemset

   Defined in header <cwchar>
   unsigned long      wcstoul ( const wchar_t* str, wchar_t** str_end, int
   base );
   unsigned long long wcstoull( const wchar_t* str, wchar_t** str_end, int
   base );
   (since C++11)

   Interprets an unsigned integer value in a wide string pointed to by
   str.

   Discards any whitespace characters (as identified by calling
   std::iswspace) until the first non-whitespace character is found, then
   takes as many characters as possible to form a valid base-n (where
   n=base) unsigned integer number representation and converts them to an
   integer value. The valid unsigned integer value consists of the
   following parts:
     * (optional) plus or minus sign
     * (optional) prefix (0) indicating octal base (applies only when the
       base is 8 or 0)
     * (optional) prefix (0x or 0X) indicating hexadecimal base (applies
       only when the base is 16 or 0)
     * a sequence of digits

   The set of valid values for base is {0,2,3,...,36}. The set of valid
   digits for base-2 integers is {0,1}, for base-3 integers is {0,1,2},
   and so on. For bases larger than 10, valid digits include alphabetic
   characters, starting from Aa for base-11 integer, to Zz for base-36
   integer. The case of the characters is ignored.

   Additional numeric formats may be accepted by the currently installed C
   locale.

   If the value of base is 0, the numeric base is auto-detected: if the
   prefix is 0, the base is octal, if the prefix is 0x or 0X, the base is
   hexadecimal, otherwise the base is decimal.

   If the minus sign was part of the input sequence, the numeric value
   calculated from the sequence of digits is negated as if by unary minus
   in the result type, which applies unsigned integer wraparound rules.

   The functions sets the pointer pointed to by str_end to point to the
   wide character past the last character interpreted. If str_end is a
   null pointer, it is ignored.

Parameters

   str     - pointer to the null-terminated wide string to be interpreted
   str_end - pointer to a pointer to a wide character
   base    - base of the interpreted integer value

Return value

   Integer value corresponding to the contents of str on success. If the
   converted value falls out of range of corresponding return type, range
   error occurs and ULONG_MAX or ULLONG_MAX is returned. If no conversion
   can be performed, 0 is returned.

Example

   Run this code
#include <cwchar>
#include <errno.h>
#include <iostream>
#include <string>

int main()
{
    const wchar_t* p = L"10 200000000000000000000000000000 30 40";
    wchar_t* end;
    std::wcout << "Parsing L'" << p << "':\n";
    for (unsigned long i = std::wcstoul(p, &end, 10);
         p != end;
         i = std::wcstoul(p, &end, 10))
    {
        std::wcout << '\'' << std::wstring(p, end - p) << "' -> ";
        p = end;
        if (errno == ERANGE)
        {
            std::wcout << "range error, got ";
            errno = 0;
        }
        std::wcout << i << '\n';
    }
}

   Possible output:
Parsing L'10 200000000000000000000000000000 30 40':
'10' -> 10
' 200000000000000000000000000000' -> range error, got 18446744073709551615
' 30' -> 30
' 40' -> 40

See also

   strtoulstrtoull
   (C++11)
   converts a byte string to an unsigned integer value
   (function)
   wcstolwcstoll
   converts a wide string to an integer value
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/wide/wcst
   oul&oldid=161097"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 22 October 2023, at 04:42.
     * This page has been accessed 31,035 times.
