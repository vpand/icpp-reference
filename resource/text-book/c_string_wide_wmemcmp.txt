wmemcmp

   From cppreference.com
   < c | string | wide

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Strings library
   Byte strings
   Multibyte strings
   Wide strings

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   (C95)
   iswalpha
   (C95)
   iswlower
   (C95)
   iswupper
   (C95)
   iswdigit
   (C95)
   iswxdigit
   (C95)
   iswblank
   (C99)
   wctype
   (C95)
   iswctype
   (C95)
   iswcntrl
   (C95)
   iswgraph
   (C95)
   iswspace
   (C95)
   iswprint
   (C95)
   iswpunct
   (C95)
   towlower
   (C95)
   towupper
   (C95)
   wctrans
   (C95)
   towctrans
   (C95)
   Conversions to numeric formats
   wcstolwcstoll
   (C95)(C99)
   wcstoulwcstoull
   (C95)(C99)
   wcstofwcstodwcstold
   (C99)(C95)(C99)
   wcstoimaxwcstoumax
   (C99)(C99)
   String manipulation
   wcslenwcsnlen_s
   (C95)(C11)
   wcscpywcscpy_s
   (C95)(C11)
   wcsncpywcsncpy_s
   (C95)(C11)
   wcscatwcscat_s
   (C95)(C11)
   wcsncatwcsncat_s
   (C95)(C11)
   wcsstr
   (C95)
   wcscmp
   (C95)
   wcsncmp
   (C95)
   wcscoll
   (C95)
   wcsxfrm
   (C95)
   wcschr
   (C95)
   wcsrchr
   (C95)
   wcspbrk
   (C95)
   wcsspn
   (C95)
   wcscspn
   (C95)
   wcstokwcstok_s
   (C95)(C11)
   Array manipulation
   wmemcpywmemcpy_s
   (C95)(C11)
   wmemmovewmemmove_s
   (C95)(C11)
   wmemcmp
   (C95)
   wmemchr
   (C95)
   wmemset
   (C95)

 Defined in header <wchar.h>
 int wmemcmp( const wchar_t* lhs, const wchar_t* rhs, size_t count );
                                                                     (since C95)

   Compares the first count wide characters of the wide character (or
   compatible integer type) arrays pointed to by lhs and rhs. The
   comparison is done lexicographically.

   The sign of the result is the sign of the difference between the values
   of the first pair of wide characters that differ in the arrays being
   compared.

   If count is zero, the function does nothing.

Parameters

   lhs, rhs - pointers to the wide character arrays to compare
   count    - number of wide characters to examine

Return value

   Negative value if the value of the first differing wide character in
   lhs is less than the value of the corresponding wide character in rhs:
   lhs precedes rhs in lexicographical order.

   0 if all count wide characters of lhs and rhs are equal.

   Positive value if the value of the first differing wide character in
   lhs is greater than the value of the corresponding wide character in
   rhs: rhs precedes lhs in lexicographical order.

Notes

   This function is not locale-sensitive and pays no attention to the
   values of the wchar_t objects it examines: nulls as well as invalid
   wide characters are compared too.

Example

   Run this code
#include <locale.h>
#include <stdio.h>
#include <wchar.h>

void demo(const wchar_t* lhs, const wchar_t* rhs, size_t sz)
{
    for (size_t n = 0; n < sz; ++n)
        putwchar(lhs[n]);

    int rc = wmemcmp(lhs, rhs, sz);
    if (rc == 0)
        wprintf(L" compares equal to ");
    else if(rc < 0)
        wprintf(L" precedes ");
    else if(rc > 0)
        wprintf(L" follows ");

    for (size_t n = 0; n < sz; ++n)
        putwchar(rhs[n]);
    wprintf(L" in lexicographical order\n");
}

int main(void)
{
    setlocale(LC_ALL, "en_US.utf8");

    wchar_t a1[] = {L'a',L'b',L'g'};
    wchar_t a2[] = {L'a',L'b',L'd'};

    size_t sz = sizeof a1 / sizeof *a1;
    demo(a1, a2, sz);
    demo(a2, a1, sz);
    demo(a1, a1, sz);
}

   Output:
abg precedes abd in lexicographical order
abd follows abg in lexicographical order
abg compares equal to abg in lexicographical order

References

     * C23 standard (ISO/IEC 9899:2023):

          + 7.29.4.4.5 The wmemcmp function (p: TBD)

     * C17 standard (ISO/IEC 9899:2018):

          + 7.29.4.4.5 The wmemcmp function (p: TBD)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.29.4.4.5 The wmemcmp function (p: 435)

     * C99 standard (ISO/IEC 9899:1999):

          + 7.24.4.4.5 The wmemcmp function (p: 381)

See also

   wcscmp
   (C95)
   compares two wide strings
   (function)
   memcmp
   compares two buffers
   (function)
   wcsncmp
   (C95)
   compares a certain amount of characters from two wide strings
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/string/wide/wmemcm
   p&oldid=153726"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 June 2023, at 12:00.
     * This page has been accessed 14,999 times.
