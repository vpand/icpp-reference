std::default_accessor

   From cppreference.com
   < cpp | container | mdspan

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::mdspan
   Member functions
   mdspan::mdspan
   mdspan::operator=
   Element access
   mdspan::operator[]
   Observers
   mdspan::size
   mdspan::empty
   mdspan::stride
   mdspan::extents
   mdspan::data_handle
   mdspan::mapping
   mdspan::accessor
   mdspan::is_uniquemdspan::is_exhaustivemdspan::is_stridedmdspan::is_alwa
   ys_uniquemdspan::is_always_exhaustivemdspan::is_always_strided
   Non-member functions
   swap(std::mdspan)
   Subviews
   submdspan_extents
   (C++26)
   submdspan
   (C++26)
   Helper types and templates
   extentsdextents
   layout_right
   layout_left
   layout_stride
   layout_left_padded
   (C++26)
   layout_right_padded
   (C++26)
   default_accessor
   Subviews helpers
   full_extent
   (C++26)
   strided_slice
   (C++26)
   submdspan_mapping_result
   (C++26)
   Deduction guides

   Defined in header <mdspan>
   template< class ElementType >
   class default_accessor;
                                (since C++23)

   The std::default_accessor class template is the default AccessorPolicy
   used by std::mdspan if no user-specified accessor policy is provided.

   Each specialization of default_accessor models semiregular and is
   TriviallyCopyable.

Template parameters

   ElementType - the element type. Shall be a complete object type that is
   neither an abstract class type nor an array type. Otherwise, the
   program is ill-formed

Member types

   Member type      Definition
   offset_policy    default_accessor
   element_type     ElementType
   reference        ElementType&
   data_handle_type ElementType*

Member functions

   (constructor)
   constructs a default_accessor
   (public member function)
   access
   returns a n^th element provided by arguments
   (public member function)
   offset
   returns a data handle that has an offset provided by arguments
   (public member function)

std::default_accessor::default_accessor

   constexpr default_accessor() noexcept = default;
   (1)
   template< class OtherElementType >
   constexpr default_accessor( default_accessor<OtherElementType> )
   noexcept {}
   (2)
   1) Default constructs a default_accessor.
   2) Constructs a default_accessor from
   default_accessor<OtherElementType>. The constructor has no visible
   effect. This overload participates in overload resolution only if
   std::is_convertible_v<OtherElementType(*)[], element_type(*)[]> is
   true.

std::default_accessor::access

   constexpr reference access( data_handle_type p, std::size_t i ) const
   noexcept;

   Equivalent to return p[i];.

std::default_accessor::offset

   constexpr data_handle_type offset( data_handle_type p, std::size_t i )
   const noexcept;

   Equivalent to return p + i;.

Example

   This section is incomplete
   Reason: no example
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/mdspan
   /default_accessor&oldid=161933"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 November 2023, at 02:07.
     * This page has been accessed 2,790 times.
