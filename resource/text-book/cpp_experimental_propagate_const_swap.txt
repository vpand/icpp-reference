std::experimental::propagate_const<T>::swap

   From cppreference.com
   < cpp | experimental | propagate const

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Library fundamentals v2
   experimental::propagate_const
   experimental::not_fn
   experimental::observer_ptr
   experimental::make_array
   experimental::to_array
   experimental::ostream_joiner
   experimental::gcd
   experimental::lcm
   experimental::source_location
   experimental::randint
   detection idiom
   uniform container erasure
   logical operator type traits

   std::experimental::propagate_const
   Member functions
   propagate_const::propagate_const
   propagate_const::operator=
   propagate_const::swap
   Observers
   propagate_const::get
   propagate_const::operator bool
   propagate_const::operator*propagate_const::operator->
   propagate_const::operator element_type*propagate_const::operator const
   element_type*
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>operator>=
   swap
   get_underlying
   Helper classes
   std::hash
   std::equal_tostd::not_equal_tostd::lessstd::greaterstd::less_equalstd::
   greater_equal

   constexpr void swap( propagate_const & pt ) noexcept(/* see below */);
   (library fundamentals TS v2)

   Swaps the wrapped pointer with that of pt. Let t_ designate the private
   data member that is the wrapped pointer-like object, then this function
   is equivalent to swap(t_, pt.t_), where the overload resolution for
   swap is performed among std::swap and any declaration found by the
   usual lookup rules, as described in Swappable.

   The behavior is undefined if lvalues of T do not satisfy Swappable.

Parameters

   pt - another propagate_const object to swap with

Exceptions

   noexcept specification:
   noexcept(noexcept(swap(t_, pt.t_)))
   The lookup for the identifier swap in the exception specification finds
   overloads described above, and does not find the member function
   itself, making the exception specification equivalent to C++17
   std::is_nothrow_swappable. (library fundamentals TS v2)
   noexcept specification:
   noexcept(std::is_nothrow_swappable_v<T>)
                              (library fundamentals TS v3)

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 3413 LFTSv2 the exception specification was ill-formed made
   well-formed
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/pro
   pagate_const/swap&oldid=155211"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 19 July 2023, at 10:55.
     * This page has been accessed 11,831 times.
