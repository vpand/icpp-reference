fgets

   From cppreference.com
   < c | io

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   File input/output
   Types and objects
   FILE
   fpos_t

   stdinstdoutstderr
   Functions
   File access
   fopenfopen_s
   (C11)
   freopenfreopen_s
   (C11)
   fwide
   (C95)
   setbuf
   setvbuf
   fclose
   fflush
   Direct input/output
   fread
   fwrite
   Unformatted input/output
   fgetc
   fgets
   fputc
   fputs
   getchar
   getsgets_s
   (until C11)(C11)
   putchar
   puts
   ungetc
   fgetwcgetwc
   (C95)(C95)
   fgetws
   (C95)
   fputwcputwc
   (C95)(C95)
   fputws
   (C95)
   getwchar
   (C95)
   putwchar
   (C95)
   ungetwc
   (C95)
   Formatted input
   scanffscanfsscanfscanf_sfscanf_ssscanf_s
   (C11)(C11)(C11)
   wscanffwscanfswscanfwscanf_sfwscanf_sswscanf_s
   (C95)(C95)(C95)(C11)(C11)(C11)
   vscanfvfscanfvsscanfvscanf_svfscanf_svsscanf_s
   (C99)(C99)(C99)(C11)(C11)(C11)
   vwscanfvfwscanfvswscanfvwscanf_svfwscanf_svswscanf_s
   (C99)(C99)(C99)(C11)(C11)(C11)
   Formatted output
   printffprintfsprintfsnprintfprintf_sfprintf_ssprintf_ssnprintf_s
   (C99)(C11)(C11)(C11)(C11)
   wprintffwprintfswprintfwprintf_sfwprintf_sswprintf_ssnwprintf_s
   (C95)(C95)(C95)(C11)(C11)(C11)(C11)
   vprintfvfprintfvsprintfvsnprintfvprintf_svfprintf_svsprintf_svsnprintf_
   s
   (C99)(C11)(C11)(C11)(C11)
   vwprintfvfwprintfvswprintfvwprintf_svfwprintf_svswprintf_svsnwprintf_s
   (C95)(C95)(C95)(C11)(C11)(C11)(C11)
   File positioning
   ftell
   fgetpos
   fseek
   fsetpos
   rewind
   Error handling
   clearerr
   feof
   ferror
   perror
   Operations on files
   remove
   rename
   tmpfiletmpfile_s
   (C11)
   tmpnamtmpnam_s
   (C11)

 Defined in header <stdio.h>
 char* fgets( char*          str, int count, FILE*          stream );
                                                                     (until C99)
 char* fgets( char* restrict str, int count, FILE* restrict stream );
                                                                     (since C99)

   Reads at most count - 1 characters from the given file stream and
   stores them in the character array pointed to by str. Parsing stops if
   a newline character is found (in which case str will contain that
   newline character) or if end-of-file occurs. If bytes are read and no
   errors occur, writes a null character at the position immediately after
   the last character written to str.

Parameters

   str - pointer to an element of a char array
   count - maximum number of characters to write (typically the length of
   str)
   stream - file stream to read the data from

Return value

   str on success, null pointer on failure.

   If the end-of-file condition is encountered, sets the eof indicator on
   stream (see feof()). This is only a failure if it causes no bytes to be
   read, in which case a null pointer is returned and the contents of the
   array pointed to by str are not altered (i.e. the first byte is not
   overwritten with a null character).

   If the failure has been caused by some other error, sets the error
   indicator (see ferror()) on stream. The contents of the array pointed
   to by str are indeterminate (it may not even be null-terminated).

Notes

   POSIX additionally requires that fgets sets errno if a read error
   occurs.

   Although the standard specification is unclear in the cases where count
   <= 1, common implementations do
     * if count < 1, do nothing, report error,
     * if count == 1,

          + some implementations do nothing, report error,
          + others read nothing, store zero in str[0], report success.

Example

   Run this code
#include <stdio.h>
#include <stdlib.h>

int main(void)
{
    FILE* tmpf = tmpfile();
    fputs("Alan Turing\n", tmpf);
    fputs("John von Neumann\n", tmpf);
    fputs("Alonzo Church\n", tmpf);

    rewind(tmpf);

    char buf[8];
    while (fgets(buf, sizeof buf, tmpf) != NULL)
          printf("\"%s\"\n", buf);

    if (feof(tmpf))
       puts("End of file reached");
}

   Output:
"Alan Tu"
"ring
"
"John vo"
"n Neuma"
"nn
"
"Alonzo "
"Church
"
End of file reached

References

     * C23 standard (ISO/IEC 9899:2023):

          + 7.21.7.2 The fgets function (p: TBD)

     * C17 standard (ISO/IEC 9899:2018):

          + 7.21.7.2 The fgets function (p: 241)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.21.7.2 The fgets function (p: 331)

     * C99 standard (ISO/IEC 9899:1999):

          + 7.19.7.2 The fgets function (p: 296)

     * C89/C90 standard (ISO/IEC 9899:1990):

          + 4.9.7.2 The fgets function

See also

   scanffscanfsscanfscanf_sfscanf_ssscanf_s
   (C11)(C11)(C11)
   reads formatted input from stdin, a file stream or a buffer
   (function)
   getsgets_s
   (removed in C11)(C11)
   reads a character string from stdin
   (function)
   fputs
   writes a character string to a file stream
   (function)
   getlinegetwlinegetdelimgetwdelim
   (dynamic memory TR)
   read from a stream into an automatically resized buffer until
   delimiter/end of line
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/io/fgets&oldid=172
   125"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 29 May 2024, at 07:17.
     * This page has been accessed 339,857 times.
