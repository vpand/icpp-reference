std::valarray<T>::valarray

   From cppreference.com
   < cpp | numeric | valarray

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Numerics library
   Common mathematical functions
   Mathematical special functions (C++17)
   Mathematical constants (C++20)
   Basic linear algebra algorithms (C++26)
   Floating-point environment (C++11)
   Complex numbers
   Numeric arrays
   Pseudo-random number generation
   Factor operations
   gcd
   (C++17)
   lcm
   (C++17)
   Interpolations
   midpoint
   (C++20)
   lerp
   (C++20)
   Saturation arithmetic
   add_sat
   (C++26)
   sub_sat
   (C++26)
   saturate_cast
   (C++26)
   mul_sat
   (C++26)
   div_sat
   (C++26)
   Generic numeric operations
   iota
   (C++11)
   ranges::iota
   (C++23)
   accumulate
   inner_product
   adjacent_difference
   partial_sum
   reduce
   (C++17)
   transform_reduce
   (C++17)
   inclusive_scan
   (C++17)
   exclusive_scan
   (C++17)
   transform_inclusive_scan
   (C++17)
   transform_exclusive_scan
   (C++17)
   Bit operations
   has_single_bit
   (C++20)
   bit_cast
   (C++20)
   bit_ceil
   (C++20)
   bit_floor
   (C++20)
   bit_width
   (C++20)
   rotl
   (C++20)
   rotr
   (C++20)
   popcount
   (C++20)
   countl_zero
   (C++20)
   countl_one
   (C++20)
   countr_zero
   (C++20)
   countr_one
   (C++20)
   byteswap
   (C++23)
   endian
   (C++20)

   std::valarray
   Member functions
   valarray::valarray
   valarray::~valarray
   valarray::operator=
   valarray::operator[]
   valarray::swap
   valarray::size
   valarray::resize
   valarray::sum
   valarray::min
   valarray::max
   valarray::shift
   valarray::cshift
   valarray::apply
   valarray::operator+valarray::operator-valarray::operator~valarray::oper
   ator!
   valarray::operator+=valarray::operator-=valarray::operator*=valarray::o
   perator/=valarray::operator%=valarray::operator&=valarray::operator|=va
   larray::operator^=valarray::operator<<=valarray::operator>>=
   Non-member functions
   swap(std::valarray)
   (C++11)
   begin(std::valarray)
   (C++11)
   end(std::valarray)
   (C++11)
   abs
   exp
   log
   log10
   pow
   sqrt
   sin
   cos
   tan
   asin
   acos
   atan
   atan2
   sinh
   cosh
   tanh
   operator*operator/operator%operator+operator-operator^operator&operator
   |operator<<operator>>operator&&operator||
   operator==operator!=operator<operator>operator<=operator>=
   Helper classes
   slice_array
   gslice_array
   indirect_array
   slice
   gslice
   mask_array
   Deduction guides (C++17)

   valarray();
   (1)
   explicit valarray( std::size_t count );
   (2)
   valarray( const T& val, std::size_t count );
   (3)
   valarray( const T* vals, std::size_t count );
   (4)
   valarray( const valarray& other );
   (5)
   valarray( valarray&& other ) noexcept;
   (6)                                          (since C++11)
   valarray( const std::slice_array<T>& sa );
   (7)
   valarray( const std::gslice_array<T>& gsa );
   (8)
   valarray( const std::mask_array<T>& ma );
   (9)
   valarray( const std::indirect_array<T>& ia );
   (10)
   valarray( std::initializer_list<T> il );
   (11)                                         (since C++11)

   Constructs new numeric array from various sources.
   1) Default constructor. Constructs an empty numeric array.
   2) Constructs a numeric array with count copies of value-initialized
   elements.
   3) Constructs a numeric array with count copies of val.
   4) Constructs a numeric array with copies of count values from an array
   pointed to by vals. If this array contains less than count values, the
   behavior is undefined.
   5) Copy constructor. Constructs the numeric array with the copy of the
   contents of other.
   6) Move constructor. Constructs the container with the contents of
   other using move semantics.
   7-10) Converting constructor. Convert the corresponding data structure
   to a valarray.
   11) Constructs the numeric array with the contents of the initializer
   list il.

Parameters

   count - the number of elements to construct
   val - the value to initialize the elements with
   vals - pointer to a C array to use as source to initialize the contents
   other - another numeric array to use as source to initialize the
   contents
   sa - slice array to initialize the elements with
   gsa - generic slice array to initialize the elements with
   ma - mask array to initialize the elements with
   ia - indirect array to initialize the elements with
   il - initializer list to initialize the elements with

Exceptions

   1-5, 7-11) May throw implementation-defined exceptions.

Example

   This section is incomplete
   Reason: no example
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/valarray
   /valarray&oldid=151456"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 May 2023, at 23:54.
     * This page has been accessed 78,590 times.
