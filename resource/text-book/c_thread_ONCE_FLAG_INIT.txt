call_once, once_flag, ONCE_FLAG_INIT

   From cppreference.com
   < c | thread

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <threads.h>
   void call_once( once_flag* flag, void (*func)(void) );
   (1)                                                   (since C11)
   typedef /* unspecified */ once_flag
   (2)                                                   (since C11)
   #define ONCE_FLAG_INIT /* unspecified */
   (3)                                                   (since C11)
   1) Calls function func exactly once, even if invoked from several
   threads. The completion of the function func synchronizes with all
   previous or subsequent calls to call_once with the same flag variable.
   2) Complete object type capable of holding a flag used by call_once.
   3) Expands to a value that can be used to initialize an object of type
   once_flag.

Parameters

   flag - pointer to an object of type call_once that is used to ensure
   func is called only once
   func - the function to execute only once

Return value

   (none)

Notes

   The POSIX equivalent of this function is pthread_once.

Example

   Run this code
#include <stdio.h>
#include <threads.h>

void do_once(void) {
    puts("called once");
}

static once_flag flag = ONCE_FLAG_INIT;
int func(void* data)
{
    call_once(&flag, do_once);
}

int main(void)
{
    thrd_t t1, t2, t3, t4;
    thrd_create(&t1, func, NULL);
    thrd_create(&t2, func, NULL);
    thrd_create(&t3, func, NULL);
    thrd_create(&t4, func, NULL);

    thrd_join(t1, NULL);
    thrd_join(t2, NULL);
    thrd_join(t3, NULL);
    thrd_join(t4, NULL);
}

   Output:
called once

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.26.2.1 The call_once function (p: 275)

          + 7.26.1/3 ONCE_FLAG_INIT (p: 274)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.26.2.1 The call_once function (p: 378)

          + 7.26.1/3 ONCE_FLAG_INIT (p: 376)

See also

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/thread/call_once&o
   ldid=136991"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 7 January 2022, at 17:46.
     * This page has been accessed 35,772 times.
