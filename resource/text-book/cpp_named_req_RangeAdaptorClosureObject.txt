C++ named requirements: RangeAdaptorClosureObject (since C++20)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   Range adaptor closure objects are FunctionObjects that are callable via
   the pipe operator: if C is a range adaptor closure object and R is a
   range, these two expressions are equivalent:
C(R)
R | C

   Two range adaptor closure objects can be chained by operator| to
   produce another range adaptor closure object: if C and D are range
   adaptor closure objects, then C | D produces a range adaptor closure
   object E with the following properties:
     * E stores a copy of C and D, direct-non-list-initialized from
       std::forward<decltype((C))>(C) and std::forward<decltype((D))>(D)
       respectively. If such initialization is invalid, C | D is also
       invalid.
     * Let c and d be the stored copies (with the same constness and value
       category as E), and R be a range object, the following expressions
       are equivalent:

d(c(R))
R | c | d
E(R)
R | E // R | (C | D)

   Notes: operator() is unsupported for volatile-qualified or
   const-volatile-qualified version of range adaptor object closure types.

   Objects whose type is the same as one of the following objects
   (ignoring cv-qualification) are range adaptor closure objects:
     * unary range adaptor objects,

     * objects of user-defined types that meet the requirements of
       implementing a range adaptor closure object,

   (since C++23)
     * the results of binding trailing arguments by range adaptor objects,
       and
     * the results of chaining two range adaptor closure objects by
       operator|.

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/RangeA
   daptorClosureObject&oldid=159993"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 2 October 2023, at 07:57.
     * This page has been accessed 7,154 times.
