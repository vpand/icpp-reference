std::vector<T,Allocator>::push_back

   From cppreference.com
   < cpp | container | vector


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::vector
   Member types
   Member functions
   vector::vector
   vector::~vector
   vector::operator=
   vector::assign
   vector::assign_range
   (C++23)
   vector::get_allocator
   Element access
   vector::at
   vector::operator[]
   vector::front
   vector::back
   vector::data
   Iterators
   vector::beginvector::cbegin
   (C++11)
   vector::endvector::cend
   (C++11)
   vector::rbeginvector::crbegin
   (C++11)
   vector::rendvector::crend
   (C++11)
   Capacity
   vector::empty
   vector::size
   vector::max_size
   vector::reserve
   vector::capacity
   vector::shrink_to_fit
   (DR*)
   Modifiers
   vector::clear
   vector::insert
   vector::emplace
   (C++11)
   vector::insert_range
   (C++23)
   vector::erase
   vector::push_back
   vector::emplace_back
   (C++11)
   vector::append_range
   (C++23)
   vector::pop_back
   vector::resize
   vector::swap
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   swap(std::vector)
   erase(std::vector)erase_if(std::vector)
   (C++20)(C++20)
   Deduction guides(C++17)

   void push_back( const T& value );
   (1) (constexpr since C++20)
   void push_back( T&& value );
   (2) (since C++11)
   (constexpr since C++20)

   Appends the given element value to the end of the container.
   1) The new element is initialized as a copy of value.
   2) value is moved into the new element.

   If after the operation the new size() is greater than old capacity() a
   reallocation takes place, in which case all iterators (including the
   end() iterator) and all references to the elements are invalidated.
   Otherwise only the end() iterator is invalidated.

Parameters

   value - the value of the element to append
   Type requirements
   -
   T must meet the requirements of CopyInsertable in order to use overload
   (1).
   -
   T must meet the requirements of MoveInsertable in order to use overload
   (2).

Return value

   (none)

Complexity

   Amortized constant.

Exceptions

   If an exception is thrown (which can be due to Allocator::allocate() or
   element copy/move constructor/assignment), this function has no effect
   (strong exception guarantee).

   If T's move constructor is not noexcept and T is not CopyInsertable
   into *this, vector will use the throwing move constructor. If it
   throws, the guarantee is waived and the effects are unspecified.
   (since C++11)

Notes

   Some implementations throw std::length_error when push_back causes a
   reallocation that exceeds max_size (due to an implicit call to an
   equivalent of reserve(size() + 1)).

Example

   Run this code
#include <iomanip>
#include <iostream>
#include <string>
#include <vector>

int main()
{
    std::vector<std::string> letters;

    letters.push_back("abc");
    std::string s{"def"};
    letters.push_back(std::move(s));

    std::cout << "std::vector letters holds: ";
    for (auto&& e : letters)
        std::cout << std::quoted(e) << ' ';

    std::cout << "\nMoved-from string s holds: " << std::quoted(s) << '\n';
}

   Possible output:
std::vector letters holds: "abc" "def"
Moved-from string s holds: ""

See also

   emplace_back
   (C++11)
   constructs an element in-place at the end
   (public member function)
   pop_back
   removes the last element
   (public member function)
   back_inserter
   creates a std::back_insert_iterator of type inferred from the argument
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/vector
   /push_back&oldid=98164"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 January 2018, at 22:54.
     * This page has been accessed 1,035,774 times.
