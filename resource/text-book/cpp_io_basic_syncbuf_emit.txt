std::basic_syncbuf<CharT,Traits,Allocator>::emit

   From cppreference.com
   < cpp | io | basic syncbuf

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Input/output library
   I/O manipulators
   Print functions (C++23)
   C-style I/O
   Buffers
   basic_streambuf
   basic_filebuf
   basic_stringbuf
   basic_spanbuf
   (C++23)
   strstreambuf
   (C++98/26*)
   basic_syncbuf
   (C++20)
   Streams
   Abstractions
   ios_base
   basic_ios
   basic_istream
   basic_ostream
   basic_iostream
   File I/O
   basic_ifstream
   basic_ofstream
   basic_fstream
   String I/O
   basic_istringstream
   basic_ostringstream
   basic_stringstream
   Array I/O
   basic_ispanstream
   (C++23)
   basic_ospanstream
   (C++23)
   basic_spanstream
   (C++23)
   istrstream
   (C++98/26*)
   ostrstream
   (C++98/26*)
   strstream
   (C++98/26*)
   Synchronized Output
   basic_osyncstream
   (C++20)
   Types
   streamoff
   streamsize
   fpos
   Error category interface
   iostream_category
   (C++11)
   io_errc
   (C++11)

   std::basic_syncbuf
   Public member functions
   basic_syncbuf::basic_syncbuf
   (C++20)
   basic_syncbuf::operator=
   (C++20)
   basic_syncbuf::~basic_syncbuf
   (C++20)
   basic_syncbuf::swap
   (C++20)
   basic_syncbuf::emit
   (C++20)
   basic_syncbuf::get_wrapped
   (C++20)
   basic_syncbuf::get_allocator
   (C++20)
   basic_syncbuf::set_emit_on_sync
   (C++20)
   Protected member functions
   basic_syncbuf::sync
   (C++20)
   Non-member functions
   swap(std::basic_syncbuf)
   (C++20)

   bool emit();

   Atomically transmits all pending output to the wrapped stream.

   All emit() calls transferring characters to the same wrapped stream
   buffer object appear to execute in a total order, where each emit()
   call synchronizes-with subsequent emit() calls in that total order,
   even if these calls are made through difference instances of
   std::basic_syncbuf/std::basic_osyncstream. In practice, this means that
   emit() takes a lock uniquely associated with the wrapped stream object:
   for example, it could be held in a static hash map where the address of
   the wrapped stream is used as the key.

   If a call had been made to sync since the last call to emit(), then
   also flushes the wrapped stream by calling pubsync() on it.

Parameters

   (none)

Return value

   true if all of the following is true:
     * there is a wrapped stream (the wrapped streambuf pointer is not
       null)
     * all characters from the temporary storage were successfully sent
       into the wrapped stream
     * the call to pubsync(), if requested, also completed successfully.

   Returns false otherwise.

Notes

   Normally called by the destructor or move assignment of the owning
   std::basic_osyncstream, or by std::basic_osyncstream::emit.

Example

   This section is incomplete
   Reason: no example

See also

   (destructor)
   destroys the basic_osyncstream and emits its internal buffer
   (public member function of
   std::basic_osyncstream<CharT,Traits,Allocator>)
   emit
   calls emit() on the underlying basic_syncbuf to transmit its internal
   data to the final destination
   (public member function of
   std::basic_osyncstream<CharT,Traits,Allocator>)
   (constructor)
   constructs a basic_syncbuf object
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/io/basic_syncbuf
   /emit&oldid=157267"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 24 August 2023, at 04:49.
     * This page has been accessed 12,504 times.
