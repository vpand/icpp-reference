std::multiset<Key,Compare,Allocator>::begin,
std::multiset<Key,Compare,Allocator>::cbegin

   From cppreference.com
   < cpp | container | multiset


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::multiset
   Member functions
   multiset::multiset
   multiset::~multiset
   multiset::operator=
   multiset::get_allocator
   Iterators
   multiset::beginmultiset::cbegin
   (C++11)
   multiset::endmultiset::cend
   (C++11)
   multiset::rbeginmultiset::crbegin
   (C++11)
   multiset::rendmultiset::crend
   (C++11)
   Capacity
   multiset::size
   multiset::max_size
   multiset::empty
   Modifiers
   multiset::clear
   multiset::erase
   multiset::swap
   multiset::extract
   (C++17)
   multiset::merge
   (C++17)
   multiset::insert
   multiset::insert_range
   (C++23)
   multiset::emplace
   (C++11)
   multiset::emplace_hint
   (C++11)
   Lookup
   multiset::count
   multiset::find
   multiset::contains
   (C++20)
   multiset::equal_range
   multiset::lower_bound
   multiset::upper_bound
   Observers
   multiset::key_comp
   multiset::value_comp
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   std::swap(std::multiset)
   erase_if(std::multiset)
   (C++20)
   Deduction guides(C++17)

   iterator begin();
   (1)                                    (noexcept since C++11)
   const_iterator begin() const;
   (2)                                    (noexcept since C++11)
   const_iterator cbegin() const noexcept;
   (3)                                    (since C++11)

   Returns an iterator to the first element of the multiset.

   If the multiset is empty, the returned iterator will be equal to end().

   range-begin-end.svg

Parameters

   (none)

Return value

   Iterator to the first element.

Complexity

   Constant.

Notes

   Because both iterator and const_iterator are constant iterators (and
   may in fact be the same type), it is not possible to mutate the
   elements of the container through an iterator returned by any of these
   member functions.

   libc++ backports cbegin() to C++98 mode.

Example

   Run this code
#include <iostream>
#include <iterator>
#include <set>
#include <string>

int main()
{
    const std::multiset<std::string> words =
    {
        "some", "not", "sorted", "words",
        "will", "come", "out", "sorted",
    };

    for (auto it = words.begin(); it != words.end(); )
    {
        auto count = words.count(*it);
        std::cout << *it << ":\t" << count << '\n';
        std::advance(it, count); // all count elements have equivalent keys
    }
}

   Output:
come:   1
not:    1
out:    1
some:   1
sorted: 2
will:   1
words:  1

See also

   endcend
   (C++11)
   returns an iterator to the end
   (public member function)
   begincbegin
   (C++11)(C++14)
   returns an iterator to the beginning of a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/multis
   et/begin&oldid=135720"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 November 2021, at 07:40.
     * This page has been accessed 39,969 times.
