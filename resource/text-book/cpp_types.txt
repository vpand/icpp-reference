Type support (basic types, RTTI)

   From cppreference.com
   < cpp

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Type support
   Basic types
   Fixed width integer types (C++11)
   Fixed width floating-point types (C++23)
   ptrdiff_t
   size_t
   max_align_t
   (C++11)
   byte
   (C++17)
   nullptr_t
   (C++11)
   offsetof
   NULL
   Numeric limits
   numeric_limits
   C numeric limits interface
   Runtime type information
   type_info
   type_index
   (C++11)
   bad_typeid
   bad_cast

   See also type system overview and fundamental types defined by the
   language.

Additional basic types and macros

   Defined in header <cstddef>
   size_t
   unsigned integer type returned by the sizeof operator
   (typedef)
   ptrdiff_t
   signed integer type returned when subtracting two pointers
   (typedef)
   nullptr_t
   (C++11)
   the type of the null pointer literal nullptr
   (typedef)
   NULL
   implementation-defined null pointer constant
   (macro constant)
   max_align_t
   (C++11)
   trivial type with alignment requirement as great as any other scalar
   type
   (typedef)
   offsetof
   byte offset from the beginning of a standard-layout type to specified
   member
   (function macro)
   byte
   (C++17)
   the byte type
   (enum)

   Defined in header <cstdbool>(deprecated) (until C++20)
   Defined in header <stdbool.h>
   __bool_true_false_are_defined
   (C++11)(deprecated)
   C compatibility macro constant, expands to integer literal 1
   (macro constant)

   Defined in header <cstdalign>(deprecated) (until C++20)
   Defined in header <stdalign.h>
   __alignas_is_defined
   (C++11)(deprecated)
   C compatibility macro constant, expands to integer literal 1
   (macro constant)
   __alignof_is_defined
   (C++11)(deprecated)
   C compatibility macro constant, expands to integer literal 1
   (macro constant)

Fixed width integer types (since C++11)

Fixed width floating-point types (since C++23)

Numeric limits

   Defined in header <limits>
   numeric_limits
   provides an interface to query properties of all fundamental numeric
   types
   (class template)

C numeric limits interface

Runtime type identification

   Defined in header <typeinfo>
   type_info
   contains some type's information, generated by the implementation.
   This is the class returned by the typeid operator.
   (class)
   bad_typeid
   exception that is thrown if an argument in a typeid expression is null
   (class)
   bad_cast
   exception that is thrown by an invalid dynamic_cast expression, i.e. a
   cast of reference type fails
   (class)

   Defined in header <typeindex>
   type_index
   (C++11)
   wrapper around a type_info object, that can be used as index in
   associative and unordered associative containers
   (class)

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 4036 C++11 __alignof_is_defined was underspecified in the C++
   standard specified and deprecated

See also

   Type traits and metaprogramming library
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/types&oldid=1707
   37"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 April 2024, at 08:49.
     * This page has been accessed 997,341 times.
