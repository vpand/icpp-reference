thrd_exit

   From cppreference.com
   < c | thread

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <threads.h>
   _Noreturn void thrd_exit( int res );
   (since C11)
   (until C23)
   [[noreturn]] void thrd_exit( int res );
                                          (since C23)

   First, for every thread-specific storage key which was created with a
   non-null destructor and for which the associated value is non-null (see
   tss_create), thrd_exit sets the value associated with the key to NULL
   and then invokes the destructor with the previous value of the key. The
   order in which the destructors are invoked is unspecified.

   If, after this, there remain keys with both non-null destructors and
   values (e.g. if a destructor executed tss_set), the process is repeated
   up to TSS_DTOR_ITERATIONS times.

   Finally, the thrd_exit function terminates execution of the calling
   thread and sets its result code to res.

   If the last thread in the program is terminated with thrd_exit, the
   entire program terminates as if by calling exit with EXIT_SUCCESS as
   the argument (so the functions registered by atexit are executed in the
   context of that last thread)

Parameters

   res - the result value to return

Return value

   (none)

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.26.5.5 The thrd_exit function (p: 280)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.26.5.5 The thrd_exit function (p: 384)

See also

   thrd_join
   (C11)
   blocks until a thread terminates
   (function)
   thrd_detach
   (C11)
   detaches a thread
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/thread/thrd_exit&o
   ldid=154420"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 30 June 2023, at 05:44.
     * This page has been accessed 25,008 times.
