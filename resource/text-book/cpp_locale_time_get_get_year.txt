std::time_get<CharT,InputIt>::get_year,
std::time_get<CharT,InputIt>::do_get_year

   From cppreference.com
   < cpp | locale | time get

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::time_get
   Member functions
   time_get::time_get
   time_get::~time_get
   time_get::date_ordertime_get::do_date_order
   time_get::get_timetime_get::do_get_time
   time_get::get_datetime_get::do_get_date
   time_get::get_weekdaytime_get::do_get_weekday
   time_get::get_monthnametime_get::do_get_monthname
   time_get::get_yeartime_get::do_get_year
   time_get::gettime_get::do_get

   Defined in header <locale>
   public:

   iter_type get_year( iter_type s, iter_type end, std::ios_base& str,
                       std::ios_base::iostate& err, std::tm* t ) const;
   (1)
   protected:

   virtual iter_type do_get_year( iter_type s, iter_type end,
   std::ios_base& str,
                                  std::ios_base::iostate& err, std::tm* t
   ) const;
   (2)
   1) Public member function, calls the protected virtual member function
   do_get_year of the most derived class.
   2) Reads successive characters from the sequence [beg, end) and parses
   out the year using some implementation-defined format. Depending on the
   locale, two-digit years may be accepted, and it is
   implementation-defined which century they belong to.

   The parsed year is stored in the std::tm structure field t->tm_year.

   If the end iterator is reached before a valid year is read, the
   function sets std::ios_base::eofbit in err. If a parsing error is
   encountered, the function sets std::ios_base::failbit in err.

Parameters

   beg - iterator designating the start of the sequence to parse
   end - one past the end iterator for the sequence to parse
   str - a stream object that this function uses to obtain locale facets
   when needed, e.g. std::ctype to skip whitespace or std::collate to
   compare strings
   err - stream error flags object that is modified by this function to
   indicate errors
   t - pointer to the std::tm object that will hold the result of this
   function call

Return value

   Iterator pointing one past the last character in [beg, end) that was
   recognized as a part of a valid year.

Notes

   For two-digit input values, many implementations use the same parsing
   rules as the conversion specifier '%y' as used by std::get_time,
   std::time_get::get(), and the POSIX function strptime(): two-digit
   integer is expected, the values in the range [69, 99] results in values
   1969 to 1999, range [00, 68] results in 2000 to 2068. Four-digit inputs
   are typically accepted as-is.

   If a parsing error is encountered, most implementations of this
   function leave *t unmodified.

Example

   Run this code
#include <iostream>
#include <iterator>
#include <locale>
#include <sstream>

void try_get_year(const std::string& s)
{
    std::cout << "Parsing the year out of '" << s
              << "' in the locale " << std::locale().name() << '\n';
    std::istringstream str(s);
    std::ios_base::iostate err = std::ios_base::goodbit;

    std::tm t;
    std::time_get<char> const& facet = std::use_facet<std::time_get<char>>(str.g
etloc());
    std::istreambuf_iterator<char> ret = facet.get_year({str}, {}, str, err, &t)
;
    str.setstate(err);
    std::istreambuf_iterator<char> last{};

    if (str)
    {
        std::cout << "Successfully parsed, year is " << 1900 + t.tm_year;

        if (ret != last)
        {
            std::cout << " Remaining content: ";
            std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
        }
        else
            std::cout << " the input was fully consumed";
    }
    else
    {
        std::cout << "Parse failed. Unparsed string: ";
        std::copy(ret, last, std::ostreambuf_iterator<char>(std::cout));
    }

    std::cout << '\n';
}

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    try_get_year("13");
    try_get_year("2013");

    std::locale::global(std::locale("ja_JP.utf8"));
    try_get_year("2013´");
}

   Possible output:
Parsing the year out of '13' in the locale en_US.utf8
Successfully parsed, year is 2013 the input was fully consumed
Parsing the year out of '2013' in the locale en_US.utf8
Successfully parsed, year is 2013 the input was fully consumed
Parsing the year out of '2013´' in the locale ja_JP.utf8
Successfully parsed, year is 2013 Remaining content: ´

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 248 C++98 eofbit was not set upon reaching the end iterator sets
   eofbit if a valid year has not been read

See also

   get_time
   (C++11)
   parses a date/time value of specified format
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/time_get/
   get_year&oldid=160217"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 October 2023, at 11:21.
     * This page has been accessed 13,990 times.
