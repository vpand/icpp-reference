std::experimental::ranges::invoke

   From cppreference.com
   < cpp | experimental | ranges

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Ranges
   Concepts
   General utilities
   Iterators
   Ranges
   Algorithms

   General utilities library
   Utility components
   swap
   exchange
   Function objects
   invoke
   identity
   equal_to
   not_equal_to
   greater
   less
   greater_equal
   less_equal
   Metaprogramming and type traits
   is_swappable_withis_swappable
   is_nothrow_swappable_withis_nothrow_swappable
   common_reference
   common_type
   Tagged pairs and tuples
   TagSpecifier
   TaggedType

   tagged
   tag specifiers

   tagged_pair
   make_tagged_pair

   tagged_tuple
   make_tagged_tuple

   Defined in header <experimental/ranges/functional>
   template< class F, class... Args >
   std::result_of_t<F&&(Args&&...)> invoke( F&& f, Args&&... args );
                                                     (ranges TS)

   Invoke the Callable object f with the parameters args, and return the
   result, as if by return INVOKE(std::forward<F>(f),
   std::forward<Args>(args)...);, where INVOKE(f, t1, t2, ..., tN) is
   defined as follows:
     * if f is a pointer to member function of class T:

          + If std::is_base_of<T, std::decay_t<decltype(t1)>>::value is
            true, then INVOKE(f, t1, t2, ..., tN) is equivalent to
            (t1.*f)(t2, ..., tN),
          + otherwise, INVOKE(f, t1, t2, ..., tN) is equivalent to
            ((*t1).*f)(t2, ..., tN).

     * otherwise, if N == 1 and f is a pointer to data member of class T:

          + If std::is_base_of<T, std::decay_t<decltype(t1)>>::value is
            true, then INVOKE(f, t1) is equivalent to t1.*f,
          + otherwise, then INVOKE(f, t1) is equivalent to (*t1).*f.

     * otherwise, INVOKE(f, t1, t2, ..., tN) is equivalent to f(t1, t2,
       ..., tN) (that is, f is a FunctionObject).

Parameters

   f    - Callable object to be invoked
   args - arguments to pass to f

See also

   invokeinvoke_r
   (C++17)(C++23)
   invokes any Callable object with given arguments and possibility to
   specify return type(since C++23)
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/ran
   ges/functional/invoke&oldid=155351"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 23 July 2023, at 12:10.
     * This page has been accessed 11,898 times.
