std::mbrlen

   From cppreference.com
   < cpp | string | multibyte

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated multibyte strings
   Wide/multibyte conversions
   mbsinit
   mbtowc
   mbstowcs
   btowc
   mbrtowc
   mbsrtowcs
   mbrtoc8
   (C++20)
   mbrtoc16
   (C++11)
   mbrtoc32
   (C++11)
   mblen
   wctomb
   wcstombs
   wctob
   wcrtomb
   wcsrtombs
   c8rtomb
   (C++20)
   c16rtomb
   (C++11)
   c32rtomb
   (C++11)
   mbrlen
   Types
   mbstate_t

   Defined in header <cwchar>
   std::size_t mbrlen( const char* s, std::size_t n, std::mbstate_t* ps);

   Determines the size, in bytes, of the remainder of the multibyte
   character whose first byte is pointed to by s, given the current
   conversion state ps.

   This function is equivalent to the call std::mbrtowc(nullptr, s, n, ps
   ? ps : &internal) for some hidden object internal of type
   std::mbstate_t, except that the expression ps is evaluated only once.

Parameters

   s  - pointer to an element of a multibyte character string
   n  - limit on the number of bytes in s that can be examined
   ps - pointer to the variable holding the conversion state

Return value

   0 if the next n or fewer bytes complete the null character.

   The number of bytes (between 1 and n) that complete a valid multibyte
   character.

   (size_t) - 1 if encoding error occurs.

   (size_t) - 2 if the next n bytes are part of a possibly valid multibyte
   character, which is still incomplete after examining all n bytes.

Example

   Run this code
#include <clocale>
#include <cwchar>
#include <iostream>
#include <string>

int main()
{
    // allow mbrlen() to work with UTF-8 multibyte encoding
    std::setlocale(LC_ALL, "en_US.utf8");
    // UTF-8 narrow multibyte encoding
    std::string str = "´"; // or u8"\u6c34" or "\xe6\xb0\xb4"
    std::mbstate_t mb = std::mbstate_t();
    int len1 = std::mbrlen(&str[0], 1, &mb);
    if (len1 == -2)
        std::cout << "The first 1 byte of " << str
                  << " is an incomplete multibyte char (mbrlen returns -2)\n";
    int len2 = std::mbrlen(&str[1], str.size() - 1, &mb);
    std::cout << "The remaining " << str.size() - 1 << " bytes of " << str
              << " hold " << len2 << " bytes of the multibyte character\n";
    std::cout << "Attempting to call mbrlen() in the middle of " << str
              << " while in initial shift state returns "
              << (int)mbrlen(&str[1], str.size(), &mb) << '\n';

}

   Output:
The first 1 byte of ´ is an incomplete multibyte char (mbrlen returns -2)
The remaining 2 bytes of ´ hold 2 bytes of the multibyte character
Attempting to call mbrlen() in the middle of ´ while in initial shift state retu
rns -1

See also

   mbrtowc
   converts the next multibyte character to wide character, given state
   (function)
   mblen
   returns the number of bytes in the next multibyte character
   (function)
   do_length
   [virtual]
   calculates the length of the ExternT string that would be consumed by
   conversion into given InternT buffer
   (virtual protected member function of
   std::codecvt<InternT,ExternT,StateT>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/multibyte
   /mbrlen&oldid=153041"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 June 2023, at 03:12.
     * This page has been accessed 28,652 times.
