C++ named requirements: SeedSequence (since C++11)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   A SeedSequence is an object that produces unsigned integer values i in
   the range 0 <= i < 232
   based on a consumed range of integer data.

Requirements

     * S is a SeedSequence type.
     * q is an object of S and r is a potentially constant object of S.
     * T is the result_type.
     * ib, ie are LegacyInputIterators with a value_type of unsigned
       integer values of at least 32 bits.
     * il is a std::initializer_list<T>.
     * rb, re are mutable LegacyRandomAccessIterators with a value_type of
       unsigned integer values of at least 32 bits.
     * ob is a LegacyOutputIterator.

   Expression Type Notes Complexity
   S::result_type T Unsigned integer of at least 32 bits. Compile-time
   S() Creates a seed sequence with the same initial state as other
   default-constructed seed sequences of type S. Constant
   S(ib, ie) Creates a seed sequence with internal state depending on some
   or all supplied input bits by [ib, ie). O(ie - ib)
   S(il) The same as S(il.begin(), il.end()).
   q.generate(rb, re) void Fills [rb, re) with 32-bit quantities depending
   on the initial supplied values and potential previous calls to
   generate. If rb == re, it does nothing. O(re - rb)
   r.size() size_t The amount of 32-bit integers copied by param. Constant
   r.param(ob) void Copies 32-bit values to ob that would reproduce the
   current state of the object if passed to a constructor of S.
   O(r.size())

See also

     * std::seed_seq

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/SeedSe
   quence&oldid=160693"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 14 October 2023, at 13:54.
     * This page has been accessed 36,197 times.
