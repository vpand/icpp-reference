std::experimental::pmr::get_default_resource

   From cppreference.com
   < cpp | experimental

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Library fundamentals
   experimental::optional
   experimental::any
   experimental::basic_string_view
   experimental::sample
   experimental::shared_ptr
   experimental::weak_ptr
   experimental::apply
   experimental::invocation_typeexperimental::raw_invocation_type
   experimental::search
   experimental::default_searcherexperimental::make_default_searcher
   experimental::boyer_moore_searcherexperimental::make_boyer_moore_search
   er
   experimental::boyer_moore_horspool_searcherexperimental::make_boyer_moo
   re_horspool_searcher
   Type-erased and polymorphic allocators
   Variable templates for type traits

   Polymorphic allocator library
   polymorphic_allocator
   Convenience aliases for containers using polymorphic_allocator
   Memory resource classes
   memory_resource
   synchronized_pool_resource
   unsynchronized_pool_resource
   monotonic_buffer_resource
   resource_adaptor
   Global memory resources
   new_delete_resource
   null_memory_resource
   get_default_resource
   set_default_resource
   Type-erased allocator support for existing classes
   function
   packaged_task
   promise

   Defined in header <experimental/memory_resource>
   memory_resource* get_default_resource() noexcept;
                                                    (library fundamentals TS)

   Gets the default memory resource pointer.

   The default memory resource pointer is used by certain facilities when
   an explicit memory resource is not supplied. The initial default memory
   resource pointer is the return value of new_delete_resource().

   This function is thread-safe. Previous call to set_default_resource
   synchronizes with (see std::memory_order) the subsequent
   get_default_resource calls.

Return value

   Returns the value of the default memory resource pointer.

See also

   set_default_resource
   sets the default memory_resource
   (function)
   new_delete_resource
   returns a static program-wide memory_resource that uses the global
   operator new and operator delete to allocate and deallocate memory
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/get
   _default_resource&oldid=93632"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 2 June 2017, at 14:49.
     * This page has been accessed 14,522 times.
