wcscpy, wcscpy_s

   From cppreference.com
   < c | string | wide

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Strings library
   Byte strings
   Multibyte strings
   Wide strings

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   (C95)
   iswalpha
   (C95)
   iswlower
   (C95)
   iswupper
   (C95)
   iswdigit
   (C95)
   iswxdigit
   (C95)
   iswblank
   (C99)
   wctype
   (C95)
   iswctype
   (C95)
   iswcntrl
   (C95)
   iswgraph
   (C95)
   iswspace
   (C95)
   iswprint
   (C95)
   iswpunct
   (C95)
   towlower
   (C95)
   towupper
   (C95)
   wctrans
   (C95)
   towctrans
   (C95)
   Conversions to numeric formats
   wcstolwcstoll
   (C95)(C99)
   wcstoulwcstoull
   (C95)(C99)
   wcstofwcstodwcstold
   (C99)(C95)(C99)
   wcstoimaxwcstoumax
   (C99)(C99)
   String manipulation
   wcslenwcsnlen_s
   (C95)(C11)
   wcscpywcscpy_s
   (C95)(C11)
   wcsncpywcsncpy_s
   (C95)(C11)
   wcscatwcscat_s
   (C95)(C11)
   wcsncatwcsncat_s
   (C95)(C11)
   wcsstr
   (C95)
   wcscmp
   (C95)
   wcsncmp
   (C95)
   wcscoll
   (C95)
   wcsxfrm
   (C95)
   wcschr
   (C95)
   wcsrchr
   (C95)
   wcspbrk
   (C95)
   wcsspn
   (C95)
   wcscspn
   (C95)
   wcstokwcstok_s
   (C95)(C11)
   Array manipulation
   wmemcpywmemcpy_s
   (C95)(C11)
   wmemmovewmemmove_s
   (C95)(C11)
   wmemcmp
   (C95)
   wmemchr
   (C95)
   wmemset
   (C95)

   Defined in header <wchar.h>
   (1)
   wchar_t* wcscpy( wchar_t* dest, const wchar_t* src );
   (since C95)
   (until C99)
   wchar_t* wcscpy( wchar_t* restrict dest, const wchar_t* restrict src );
   (since C99)
   errno_t wcscpy_s( wchar_t* restrict dest, rsize_t destsz,
                     const wchar_t* restrict src );
   (2) (since C11)
   1) Copies the wide string pointed to by src (including the terminating
   null wide character) to wide character array pointed to by dest. The
   behavior is undefined if the dest array is not large enough. The
   behavior is undefined if the strings overlap.
   2) Same as (1), except that it may clobber the rest of the destination
   array with unspecified values and that the following errors are
   detected at runtime and call the currently installed constraint handler
   function:

          + src or dest is a null pointer
          + destsz is zero or greater than RSIZE_MAX / sizeof(wchar_t)
          + destsz is less or equal wcsnlen_s(src, destsz), in other
            words, truncation would occur
          + overlap would occur between the source and the destination
            strings

          As with all bounds-checked functions, wcscpy_s only guaranteed
          to be available if __STDC_LIB_EXT1__ is defined by the
          implementation and if the user defines __STDC_WANT_LIB_EXT1__ to
          the integer constant 1 before including <wchar.h>.

Parameters

   dest - pointer to the wide character array to copy to
   src - pointer to the null-terminated wide string to copy from
   destsz - maximum number of characters to write, typically the size of
   the destination buffer

Return value

   1) returns a copy of dest
   2) returns zero on success, returns non-zero on error. Also, on error,
   writes L'\0' to dest[0] (unless dest is a null pointer or destsz is
   zero or greater than RMAX_SIZE / sizeof(wchar_t)).

Example

   Run this code
#include <locale.h>
#include <stdio.h>
#include <wchar.h>

int main(void)
{
    wchar_t* src = L"¬ means dog";
//  src[0] = L'' ; // this would be undefined behavior
    wchar_t dst[wcslen(src) + 1]; // +1 for the null terminator
    wcscpy(dst, src);
    dst[0] = L''; // OK

    setlocale(LC_ALL, "en_US.utf8");
    printf("src = %ls\ndst = %ls\n", src, dst);
}

   Output:
src = ¬ means dog
dst =  means dog

References

     * C23 standard (ISO/IEC 9899:2023):

          + 7.29.4.1.2 The wcscpy function (p: TBD)

          + K.3.9.2.1.1 The wcscpy_s function (p: TBD)

     * C17 standard (ISO/IEC 9899:2018):

          + 7.29.4.1.2 The wcscpy function (p: TBD)

          + K.3.9.2.1.1 The wcscpy_s function (p: TBD)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.29.4.1.2 The wcscpy function (p: 430)

          + K.3.9.2.1.1 The wcscpy_s function (p: 639)

     * C99 standard (ISO/IEC 9899:1999):

          + 7.24.4.1.2 The wcscpy function (p: 376)

See also

   wcsncpywcsncpy_s
   (C95)(C11)
   copies a certain amount of wide characters from one string to another
   (function)
   wmemcpywmemcpy_s
   (C95)(C11)
   copies a certain amount of wide characters between two non-overlapping
   arrays
   (function)
   strcpystrcpy_s
   (C11)
   copies one string to another
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/string/wide/wcscpy
   &oldid=162699"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 13 November 2023, at 15:12.
     * This page has been accessed 87,845 times.
