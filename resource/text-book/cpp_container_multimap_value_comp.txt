std::multimap<Key,T,Compare,Allocator>::value_comp

   From cppreference.com
   < cpp | container | multimap


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::multimap
   Member functions
   multimap::multimap
   multimap::~multimap
   multimap::operator=
   multimap::get_allocator
   Iterators
   multimap::beginmultimap::cbegin
   (C++11)
   multimap::endmultimap::cend
   (C++11)
   multimap::rbeginmultimap::crbegin
   (C++11)
   multimap::rendmultimap::crend
   (C++11)
   Capacity
   multimap::size
   multimap::max_size
   multimap::empty
   Modifiers
   multimap::clear
   multimap::insert
   multimap::erase
   multimap::swap
   multimap::merge
   (C++17)
   multimap::insert_range
   (C++23)
   multimap::emplace
   (C++11)
   multimap::emplace_hint
   (C++11)
   multimap::extract
   (C++17)
   Lookup
   multimap::count
   multimap::find
   multimap::contains
   (C++20)
   multimap::equal_range
   multimap::lower_bound
   multimap::upper_bound
   Observers
   multimap::key_comp
   multimap::value_comp
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   std::swap(std::multimap)
   erase_if(std::multimap)
   (C++20)
   Deduction guides(C++17)

   std::multimap::value_compare value_comp() const;

   Returns a function object that compares objects of type
   std::multimap::value_type (key-value pairs) by using key_comp to
   compare the first components of the pairs.

Parameters

   (none)

Return value

   The value comparison function object.

Complexity

   Constant.

Example

   Run this code
#include <iostream>
#include <map>
#include <utility>

// Example module 97 key compare function
struct ModCmp
{
    bool operator()(int lhs, int rhs) const
    {
        return (lhs % 97) < (rhs % 97);
    }
};

int main()
{
    std::multimap<int, char, ModCmp> cont;
    cont = {{1, 'a'}, {2, 'b'}, {3, 'c'}, {4, 'd'}, {5, 'e'}};

    auto comp_func = cont.value_comp();

    for (const std::pair<int, char> val = {100, 'a'}; auto it : cont)
    {
        const bool before = comp_func(it, val);
        const bool after = comp_func(val, it);

        std::cout << '(' << it.first << ',' << it.second << ") ";
        if (!before && !after)
            std::cout << "equivalent to key (" << val.first << ")\n";
        else if (before)
            std::cout << "goes before key (" << val.first << ")\n";
        else if (after)
            std::cout << "goes after key (" << val.first << ")\n";
        else
            std::unreachable();
    }
}

   Output:
(1,a) goes before key (100)
(2,b) goes before key (100)
(3,c) equivalent to key (100)
(4,d) goes after key (100)
(5,e) goes after key (100)

See also

   key_comp
   returns the function that compares keys
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/multim
   ap/value_comp&oldid=161960"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 4 November 2023, at 01:20.
     * This page has been accessed 25,259 times.
