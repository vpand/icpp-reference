std::experimental::negation

   From cppreference.com
   < cpp | experimental

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Library fundamentals v2
   experimental::propagate_const
   experimental::not_fn
   experimental::observer_ptr
   experimental::make_array
   experimental::to_array
   experimental::ostream_joiner
   experimental::gcd
   experimental::lcm
   experimental::source_location
   experimental::randint
   detection idiom
   uniform container erasure
   logical operator type traits

   Defined in header <experimental/type_traits>
   template< class B >
   struct negation;
   (1)                                         (library fundamentals TS v2)

   Forms the logical negation of the type trait B.

   The type negation<B> is a UnaryTypeTrait with a base characteristic of
   std::integral_constant<bool, !bool(B::value)>.

Template parameters

   B - any type such that the expression bool(B::value) is a valid
   constant expression

Helper variable template

   template< class B >
   constexpr bool negation_v = negation<B>::value;
                      (library fundamentals TS v2)

Inherited from std::integral_constant

Member constants

   value
   [static]
   true if B has a member ::value such that !bool(B::value) is true, false
   otherwise
   (public static member constant)

Member functions

   operator bool
   converts the object to bool, returns value
   (public member function)
   operator()
   (C++14)
   returns value
   (public member function)

Member types

   Type       Definition
   value_type bool
   type       std::integral_constant<bool, value>

Possible implementation

template<class B>
struct negation : std::integral_constant<bool, !bool(B::value)> {};

Example

   This section is incomplete
   Reason: no example

See also

   negation
   (C++17)
   logical NOT metafunction
   (class template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/neg
   ation&oldid=155004"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 July 2023, at 07:40.
     * This page has been accessed 13,961 times.
