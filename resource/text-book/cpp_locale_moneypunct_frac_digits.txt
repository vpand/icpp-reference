std::moneypunct<CharT,International>::frac_digits, do_frac_digits

   From cppreference.com
   < cpp | locale | moneypunct

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::moneypunct
   Member functions
   moneypunct::moneypunct
   moneypunct::~moneypunct
   moneypunct::decimal_pointmoneypunct::do_decimal_point
   moneypunct::thousands_sepmoneypunct::do_thousands_sep
   moneypunct::groupingmoneypunct::do_grouping
   moneypunct::curr_symbolmoneypunct::do_curr_symbol
   moneypunct::frac_digitsmoneypunct::do_frac_digits
   moneypunct::positive_signmoneypunct::do_positive_signmoneypunct::negati
   ve_signmoneypunct::do_negative_sign
   moneypunct::pos_formatmoneypunct::do_pos_formatmoneypunct::neg_formatmo
   neypunct::do_neg_format

   Defined in header <locale>
   public:
   int frac_digits() const;
   (1)
   protected:
   virtual int do_frac_digits() const;
   (2)
   1) Public member function, calls the member function do_frac_digits of
   the most derived class.
   2) Returns the number of digits to be displayed after the decimal point
   when printing monetary values.

Return value

   The number of digits to be displayed after the decimal point. In common
   U.S. locales, this is the value 2.

Example

   Run this code
#include <iomanip>
#include <iostream>
#include <iterator>
#include <locale>

struct space_out : std::moneypunct<char>
{
    pattern do_pos_format() const { return {value, none, none, none}; }
    int do_frac_digits() const { return 0; }
    char_type do_thousands_sep() const { return ' '; }
    string_type do_grouping() const { return "\002"; }
};

int main()
{
    std::cout.imbue(std::locale("en_US.UTF-8"));
    std::cout << "american locale: " << std::showbase
              << std::put_money(12345678.0) << '\n';

    std::cout.imbue(std::locale(std::cout.getloc(), new space_out));
    std::cout << "locale with modified moneypunct: "
              << std::put_money(12345678.0) << '\n';
}

   Output:
american locale: $123,456.78
locale with modified moneypunct: 12 34 56 78

See also

   do_thousands_sep
   [virtual]
   provides the character to use as thousands separator
   (virtual protected member function)
   do_decimal_point
   [virtual]
   provides the character to use as decimal point
   (virtual protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/moneypunc
   t/frac_digits&oldid=160151"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 4 October 2023, at 11:56.
     * This page has been accessed 13,493 times.
