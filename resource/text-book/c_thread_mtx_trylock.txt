mtx_trylock

   From cppreference.com
   < c | thread

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <threads.h>
   int mtx_trylock( mtx_t *mutex );
                                   (since C11)

   Tries to lock the mutex pointed to by mutex without blocking. Returns
   immediately if the mutex is already locked.

   Prior calls to mtx_unlock on the same mutex synchronize-with this
   operation (if this operation succeeds), and all lock/unlock operations
   on any given mutex form a single total order (similar to the
   modification order of an atomic)

Parameters

   mutex - pointer to the mutex to lock

Return value

   thrd_success if successful, thrd_busy if the mutex has already been
   locked or due to a spurious failure to acquire an available mutex,
   thrd_error if an error occurs.

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C standards.
   DR Applied to Behavior as published Correct behavior
   DR 470 C11 mtx_trylock was not allowed to fail spuriously allowed

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.26.4.5 The mtx_trylock function (p: 278-279)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.26.4.5 The mtx_trylock function (p: 382)

See also

   mtx_lock
   (C11)
   blocks until locks a mutex
   (function)
   mtx_timedlock
   (C11)
   blocks until locks a mutex or times out
   (function)
   mtx_unlock
   (C11)
   unlocks a mutex
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/thread/mtx_trylock
   &oldid=122909"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 2 October 2020, at 11:55.
     * This page has been accessed 18,825 times.
