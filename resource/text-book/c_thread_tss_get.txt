tss_get

   From cppreference.com
   < c | thread

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <threads.h>
   void *tss_get( tss_t tss_key );
                                  (since C11)

   Returns the value held in thread-specific storage for the current
   thread identified by tss_key. Different threads may get different
   values identified by the same key.

   On thread startup (see thrd_create), the values associated with all TSS
   keys are NULL. Different value may be placed in the thread-specific
   storage with tss_set.

Parameters

   tss_key - thread-specific storage key, obtained from tss_create and not
   deleted by tss_delete

Return value

   The value on success, NULL on failure.

Notes

   The POSIX equivalent for this function is pthread_getspecific.

Example

   This section is incomplete
   Reason: no example

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.26.6.3 The tss_get function (p: 282)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.26.6.3 The tss_get function (p: 386)

See also

   tss_set
   (C11)
   write to thread-specific storage
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/thread/tss_get&old
   id=138761"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 13 March 2022, at 11:32.
     * This page has been accessed 17,394 times.
