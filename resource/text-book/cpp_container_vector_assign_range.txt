std::vector<T,Allocator>::assign_range

   From cppreference.com
   < cpp | container | vector


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::vector
   Member types
   Member functions
   vector::vector
   vector::~vector
   vector::operator=
   vector::assign
   vector::assign_range
   (C++23)
   vector::get_allocator
   Element access
   vector::at
   vector::operator[]
   vector::front
   vector::back
   vector::data
   Iterators
   vector::beginvector::cbegin
   (C++11)
   vector::endvector::cend
   (C++11)
   vector::rbeginvector::crbegin
   (C++11)
   vector::rendvector::crend
   (C++11)
   Capacity
   vector::empty
   vector::size
   vector::max_size
   vector::reserve
   vector::capacity
   vector::shrink_to_fit
   (DR*)
   Modifiers
   vector::clear
   vector::insert
   vector::emplace
   (C++11)
   vector::insert_range
   (C++23)
   vector::erase
   vector::push_back
   vector::emplace_back
   (C++11)
   vector::append_range
   (C++23)
   vector::pop_back
   vector::resize
   vector::swap
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   swap(std::vector)
   erase(std::vector)erase_if(std::vector)
   (C++20)(C++20)
   Deduction guides(C++17)

   template< container-compatible-range<T> R >
   constexpr void assign_range( R&& rg );
                                              (since C++23)

   Replaces elements in the container with a copy of each element in rg.

   All iterators (including the end() iterator) and references to the
   elements are invalidated.

   Each iterator in the range rg is dereferenced exactly once.

   The behavior is undefined if rg overlaps with the container.

Parameters

   rg - an input_range with reference type convertible to the element type
   of the container
   Type requirements
   -
   std::assignable_from<T&, ranges::range_reference_t<R>> must be modeled.
   Otherwise, the program is ill-formed.
   -
   T must be EmplaceConstructible into the container from
   *ranges::begin(rg). If R models neither sized_range nor forward_range,
   T must be also MoveInsertable into the container. Otherwise, the
   behavior is undefined.

Return value

   (none)

Notes

   Feature-test macro Value Std Feature
   __cpp_lib_containers_ranges 202202L (C++23) Ranges-aware construction
   and insertion

Example

   Run this code
#include <algorithm>
#include <cassert>
#include <vector>
#include <list>

int main()
{
    const auto source = std::list{2, 7, 1};
    auto destination = std::vector{3, 1, 4};
#ifdef __cpp_lib_containers_ranges
    destination.assign_range(source);
#else
    destination.assign(source.cbegin(), source.cend());
#endif
    assert(std::ranges::equal(source, destination));
}

See also

   insert_range
   (C++23)
   inserts a range of elements
   (public member function)
   append_range
   (C++23)
   adds a range of elements to the end
   (public member function)
   assign
   assigns values to the container
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/vector
   /assign_range&oldid=154712"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 12 July 2023, at 20:56.
     * This page has been accessed 8,427 times.
