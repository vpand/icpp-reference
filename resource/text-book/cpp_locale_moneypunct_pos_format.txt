std::moneypunct<CharT,International>::pos_format, do_pos_format, neg_format,
do_neg_format

   From cppreference.com
   < cpp | locale | moneypunct

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::moneypunct
   Member functions
   moneypunct::moneypunct
   moneypunct::~moneypunct
   moneypunct::decimal_pointmoneypunct::do_decimal_point
   moneypunct::thousands_sepmoneypunct::do_thousands_sep
   moneypunct::groupingmoneypunct::do_grouping
   moneypunct::curr_symbolmoneypunct::do_curr_symbol
   moneypunct::frac_digitsmoneypunct::do_frac_digits
   moneypunct::positive_signmoneypunct::do_positive_signmoneypunct::negati
   ve_signmoneypunct::do_negative_sign
   moneypunct::pos_formatmoneypunct::do_pos_formatmoneypunct::neg_formatmo
   neypunct::do_neg_format

   Defined in header <locale>
   public:
   pattern pos_format() const;
   (1)
   public:
   pattern neg_format() const;
   (2)
   protected:
   virtual pattern do_pos_format() const;
   (3)
   protected:
   virtual pattern do_neg_format() const;
   (4)
   1) Public member function, calls the member function do_pos_format of
   the most derived class.
   2) Public member function, calls the member function do_neg_format of
   the most derived class.
   3) Returns the format structure (of type std::money_base::format) which
   describes the formatting of positive monetary values.
   4) Returns the format structure (of type std::money_base::format) which
   describes the formatting of negative monetary values.

   The standard specializations of std::moneypunct return the pattern
   {symbol, sign, none, value}.

Return value

   The object of type std::money_base::format describing the formatting
   used by this locale.

Notes

   While std::money_put uses pos_format for formatting positive values and
   neg_format for formatting negative values, std::money_get uses
   neg_format for parsing all monetary values: it assumes that neg_format
   is compatible with pos_format.

Example

   Run this code
#include <iomanip>
#include <iostream>
#include <locale>

struct my_punct : std::moneypunct_byname<char, false>
{
    my_punct(const char* name) : moneypunct_byname(name) {}
    pattern do_pos_format() const { return {value, space, symbol, sign}; }
    pattern do_neg_format() const { return {value, space, symbol, sign}; }
};

int main()
{
    std::cout.imbue(std::locale("en_US.utf8"));
    std::cout << "american locale: " << std::showbase
              << std::put_money(12345678.0) << '\n';

    std::cout.imbue(std::locale(std::cout.getloc(), new my_punct("en_US.utf8")))
;
    std::cout << "locale with modified moneypunct:\n"
              << std::put_money(12345678.0) << '\n'
              << std::put_money(-12345678.0) << '\n';
}

   Output:
american locale: $123,456.78
locale with modified moneypunct:
123,456.78 $
123,456.78 $-

See also

   do_curr_symbol
   [virtual]
   provides the string to use as the currency identifier
   (virtual protected member function)
   do_positive_signdo_negative_sign
   [virtual]
   provides the string to indicate a positive or negative value
   (virtual protected member function)
   do_get
   [virtual]
   parses a monetary value from an input stream
   (virtual protected member function of std::money_get<CharT,InputIt>)
   do_put
   [virtual]
   formats a monetary value and writes to output stream
   (virtual protected member function of std::money_put<CharT,OutputIt>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/moneypunc
   t/pos_format&oldid=160160"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 4 October 2023, at 13:13.
     * This page has been accessed 15,858 times.
