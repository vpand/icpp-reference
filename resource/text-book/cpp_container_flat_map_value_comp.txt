std::flat_map<Key,T,Compare,KeyContainer,MappedContainer>::value_comp

   From cppreference.com
   < cpp | container | flat map


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::flat_map
   Member types
   Member functions
   flat_map::flat_map
   flat_map::operator=
   Element access
   flat_map::at
   flat_map::operator[]
   Iterators
   flat_map::beginflat_map::cbegin
   flat_map::endflat_map::cend
   flat_map::rbeginflat_map::crbegin
   flat_map::rendflat_map::crend
   Capacity
   flat_map::size
   flat_map::max_size
   flat_map::empty
   Modifiers
   flat_map::clear
   flat_map::erase
   flat_map::swap
   flat_map::emplace
   flat_map::extract
   flat_map::replace
   flat_map::insert
   flat_map::insert_range
   flat_map::insert_or_assign
   flat_map::emplace_hint
   flat_map::try_emplace
   Lookup
   flat_map::count
   flat_map::find
   flat_map::contains
   flat_map::equal_range
   flat_map::lower_bound
   flat_map::upper_bound
   Observers
   flat_map::key_comp
   flat_map::keys
   flat_map::value_comp
   flat_map::values
   Non-member functions
   operator==operator<=>
   (C++23)(C++23)
   swap(std::flat_map)
   (C++23)
   erase_if(std::flat_map)
   (C++23)
   Helper classes
   uses_allocator<std::flat_map>
   (C++23)
   Tags
   sorted_unique
   (C++23)
   sorted_unique_t
   (C++23)
   Deduction guides

   std::flat_map::value_compare value_comp() const;
                                                   (since C++23)

   Returns a function object that compares objects of type
   std::flat_map::value_type (key-value pairs) by using key_comp to
   compare the first components of the pairs.

Parameters

   (none)

Return value

   The value comparison function object.

Complexity

   Constant.

Example

   Run this code
#include <iostream>
#include <flat_map>
#include <utility>

// Example module 97 key compare function
struct ModCmp
{
    bool operator()(int lhs, int rhs) const
    {
        return (lhs % 97) < (rhs % 97);
    }
};

int main()
{
    std::flat_map<int, char, ModCmp> cont;
    cont = {{1, 'a'}, {2, 'b'}, {3, 'c'}, {4, 'd'}, {5, 'e'}};

    auto comp_func = cont.value_comp();

    for (const std::pair<int, char> val = {100, 'a'}; auto it : cont)
    {
        const bool before = comp_func(it, val);
        const bool after = comp_func(val, it);

        std::cout << '(' << it.first << ',' << it.second << ") ";
        if (!before && !after)
            std::cout << "equivalent to key (" << val.first << ")\n";
        else if (before)
            std::cout << "goes before key (" << val.first << ")\n";
        else if (after)
            std::cout << "goes after key (" << val.first << ")\n";
        else
            std::unreachable();
    }
}

   Output:
(1,a) goes before key (100)
(2,b) goes before key (100)
(3,c) equivalent to key (100)
(4,d) goes after key (100)
(5,e) goes after key (100)

See also

   key_comp
   returns the function that compares keys
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/flat_m
   ap/value_comp&oldid=169255"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 26 January 2024, at 16:29.
     * This page has been accessed 642 times.
