std::basic_string<CharT,Traits,Allocator>::find_first_not_of

   From cppreference.com
   < cpp | string | basic string

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string
   Member functions
   basic_string::basic_string
   basic_string::~basic_string
   basic_string::operator=
   basic_string::assign
   basic_string::assign_range
   (C++23)
   basic_string::get_allocator
   Element access
   basic_string::at
   basic_string::operator[]
   basic_string::front
   (DR*)
   basic_string::back
   (DR*)
   basic_string::data
   basic_string::c_str
   basic_string::operator
    basic_string_view
   (C++17)
   Iterators
   basic_string::beginbasic_string::cbegin
   (C++11)
   basic_string::endbasic_string::cend
   (C++11)
   basic_string::rbeginbasic_string::crbegin
   (C++11)
   basic_string::rendbasic_string::crend
   (C++11)
   Capacity
   basic_string::empty
   basic_string::sizebasic_string::length
   basic_string::max_size
   basic_string::reserve
   basic_string::capacity
   basic_string::shrink_to_fit
   (DR*)
   Modifiers
   basic_string::clear
   basic_string::insert
   basic_string::insert_range
   (C++23)
   basic_string::erase
   basic_string::push_back
   basic_string::pop_back
   (DR*)
   basic_string::append
   basic_string::append_range
   (C++23)
   basic_string::operator+=
   basic_string::replace
   basic_string::replace_with_range
   (C++23)
   basic_string::copy
   basic_string::resize
   basic_string::resize_and_overwrite
   (C++23)
   basic_string::swap
   Search
   basic_string::find
   basic_string::rfind
   basic_string::find_first_of
   basic_string::find_first_not_of
   basic_string::find_last_of
   basic_string::find_last_not_of
   Operations
   basic_string::compare
   basic_string::starts_with
   (C++20)
   basic_string::ends_with
   (C++20)
   basic_string::contains
   (C++23)
   basic_string::substr
   Constants
   basic_string::npos
   Non-member functions
   operator+
   swap(std::basic_string)
   erase(std::basic_string)erase_if(std::basic_string)
   (C++20)(C++20)
   I/O
   operator<<operator>>
   getline
   Comparison
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   Numeric conversions
   stoistolstoll
   (C++11)(C++11)(C++11)
   stoulstoull
   (C++11)(C++11)
   stofstodstold
   (C++11)(C++11)(C++11)
   to_string
   (C++11)
   to_wstring
   (C++11)
   Literals
   operator""s
   (C++14)
   Helper classes
   hash<std::basic_string>
   (C++11)
   Deduction guides (C++17)

   size_type find_first_not_of( const basic_string& str,
                                size_type pos = 0 ) const;
   (1) (noexcept since C++11)
   (constexpr since C++20)
   size_type find_first_not_of( const CharT* s,
                                size_type pos, size_type count ) const;
   (2) (constexpr since C++20)
   size_type find_first_not_of( const CharT* s,
                                size_type pos = 0 ) const;
   (3) (constexpr since C++20)
   size_type find_first_not_of( CharT ch, size_type pos = 0 ) const;
   (4) (noexcept since C++11)
   (constexpr since C++20)
   template< class StringViewLike >

   size_type
       find_first_not_of( const StringViewLike& t,
                          size_type pos = 0 ) const noexcept(/* see below
   */);
   (5) (since C++17)
   (constexpr since C++20)

   Finds the first character equal to none of the characters in the given
   character sequence. The search considers only the range [pos, size()).
   If all characters in the range can be found in the given character
   sequence, npos will be returned.
   1) Finds the first character equal to none of characters in str.
   2) Finds the first character equal to none of characters in range [s, s
   + count). This range can include null characters.
   If [s, s + count) is not a valid range, the behavior is undefined.
   3) Finds the first character equal to none of characters in character
   string pointed to by s. The length of the string is determined by the
   first null character using Traits::length(s).
   If [s, s + Traits::length(s)) is not a valid range, the behavior is
   undefined.
   4) Finds the first character not equal to ch.
   5) Implicitly converts t to a string view sv as if by
   std::basic_string_view<CharT, Traits> sv = t;, then finds the first
   character equal to none of characters in sv.
   This overload participates in overload resolution only if
   std::is_convertible_v<const StringViewLike&,
                         std::basic_string_view<CharT, Traits>> is true
   and std::is_convertible_v<const StringViewLike&, const CharT*> is
   false.

   In all cases, equality is checked by calling Traits::eq.

Parameters

   str - string identifying characters to search for
   pos - position for the search to start from
   count - length of character string identifying characters to search for
   s - pointer to a character string identifying characters to search for
   ch - character identifying characters to search for
   t - object (convertible to std::basic_string_view) identifying
   characters to search for

Return value

   Position of the found character or std::string::npos if no such
   character is found.

Exceptions

   1,4) Throws nothing.
   5)
   noexcept specification:
   noexcept(std::is_nothrow_convertible_v<const T&,
   std::basic_string_view<CharT, Traits>>)

   If an exception is thrown for any reason, this function has no effect
   (strong exception safety guarantee).

Example

   Run this code
#include <iostream>
#include <string>

int main()
{
    // Permit uppercase letters, lowercase letters and numbers in macro names
    const char* pattern = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                          "abcdefghijklmnopqrstuvwxyz"
                          "0123456789";

    std::string data = "1) %FIX, 2) %HACK, and 3) %TODO";
    const std::string replacement = "%DONE%";

    std::cout << "Before: " << data << '\n';

    for (std::string::size_type first{}, last{};
        (first = data.find('%', first)) != std::string::npos;
        first += replacement.size())
    {
        last = data.find_first_not_of(pattern, first + 1);
        if (last == std::string::npos)
            last = data.length();

        // Now first at '%' and last is one past end of the found substring
        data.replace(first, last - first, replacement);
    }

    std::cout << "After: " << data << '\n';
}

   Output:
Before: 1) %FIX, 2) %HACK, and 3) %TODO
After: 1) %DONE%, 2) %DONE%, and 3) %DONE%

Defect reports

   The following behavior-changing defect reports were applied
   retroactively to previously published C++ standards.
   DR Applied to Behavior as published Correct behavior
   LWG 847 C++98 there was no exception safety guarantee added strong
   exception safety guarantee
   LWG 2064 C++11 overloads (3,4) were noexcept removed
   LWG 2946 C++17 overload (5) caused ambiguity in some cases avoided by
   making it a template
   P1148R0 C++11
   C++17 noexcept for overloads (4,5) were
   accidentally dropped by LWG2064/LWG2946 restored

See also

   find
   finds the first occurrence of the given substring
   (public member function)
   rfind
   find the last occurrence of a substring
   (public member function)
   find_first_of
   find first occurrence of characters
   (public member function)
   find_last_of
   find last occurrence of characters
   (public member function)
   find_last_not_of
   find last absence of characters
   (public member function)
   find_first_not_of
   find first absence of characters
   (public member function of std::basic_string_view<CharT,Traits>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing/find_first_not_of&oldid=172149"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 30 May 2024, at 10:55.
     * This page has been accessed 118,931 times.
