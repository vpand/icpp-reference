std::pmr::polymorphic_allocator<T>::deallocate_bytes

   From cppreference.com
   < cpp | memory | polymorphic allocator

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Dynamic memory management
   Uninitialized memory algorithms
   uninitialized_copy
   uninitialized_fill
   uninitialized_move
   (C++17)
   uninitialized_default_construct
   (C++17)
   uninitialized_value_construct
   (C++17)
   destroy
   (C++17)
   destroy_at
   (C++17)
   voidify
   (C++20)
   uninitialized_copy_n
   (C++11)
   uninitialized_fill_n
   uninitialized_move_n
   (C++17)
   uninitialized_default_construct_n
   (C++17)
   uninitialized_value_construct_n
   (C++17)
   destroy_n
   (C++17)
   construct_at
   (C++20)
   Constrained uninitialized memory algorithms
   ranges::uninitialized_copy
   (C++20)
   ranges::uninitialized_fill
   (C++20)
   ranges::uninitialized_move
   (C++20)
   ranges::construct_at
   (C++20)
   ranges::destroy
   (C++20)
   ranges::destroy_n
   (C++20)
   ranges::destroy_at
   (C++20)
   ranges::uninitialized_copy_n
   (C++20)
   ranges::uninitialized_fill_n
   (C++20)
   ranges::uninitialized_move_n
   (C++20)
   ranges::uninitialized_default_construct
   (C++20)
   ranges::uninitialized_value_construct
   (C++20)
   ranges::uninitialized_default_construct_n
   (C++20)
   ranges::uninitialized_value_construct_n
   (C++20)
   Allocators
   allocator
   allocator_traits
   (C++11)
   allocation_result
   (C++23)
   allocator_arg
   (C++11)
   uses_allocator
   (C++11)
   uses_allocator_construction_args
   (C++20)
   make_obj_using_allocator
   (C++20)
   uninitialized_construct_using_allocator
   (C++20)
   scoped_allocator_adaptor
   (C++11)
   pmr::polymorphic_allocator
   (C++17)
   Memory resources
   pmr::memory_resource
   (C++17)
   pmr::get_default_resource
   (C++17)
   pmr::set_default_resource
   (C++17)
   pmr::new_delete_resource
   (C++17)
   pmr::null_memory_resource
   (C++17)
   pmr::synchronized_pool_resource
   (C++17)
   pmr::unsynchronized_pool_resource
   (C++17)
   pmr::monotonic_buffer_resource
   (C++17)
   pmr::pool_options
   (C++17)
   Garbage collection support
   declare_reachable
   (C++11)(until C++23)
   undeclare_reachable
   (C++11)(until C++23)
   declare_no_pointers
   (C++11)(until C++23)
   undeclare_no_pointers
   (C++11)(until C++23)
   pointer_safety
   (C++11)(until C++23)
   get_pointer_safety
   (C++11)(until C++23)
   Uninitialized storage
   raw_storage_iterator
   (until C++20*)
   get_temporary_buffer
   (until C++20*)
   return_temporary_buffer
   (until C++20*)
   Explicit lifetime management
   start_lifetime_asstart_lifetime_as_array
   (C++23)(C++23)
   Smart pointers
   unique_ptr
   (C++11)
   shared_ptr
   (C++11)
   weak_ptr
   (C++11)
   auto_ptr
   (until C++17*)
   owner_less
   (C++11)
   owner_less<void>
   (C++17)
   owner_hash
   (C++26)
   owner_equal
   (C++26)
   enable_shared_from_this
   (C++11)
   bad_weak_ptr
   (C++11)
   default_delete
   (C++11)
   out_ptr_t
   (C++23)
   inout_ptr_t
   (C++23)
   Low level memory
   management
   operator new
   operator new[]
   operator delete
   operator delete[]
   get_new_handler
   set_new_handler
   launder
   (C++17)
   bad_alloc
   bad_array_new_length
   nothrow_t
   align_val_t
   destroying_delete_t
   new_handler
   nothrow
   Miscellaneous
   pointer_traits
   (C++11)
   to_address
   (C++20)
   addressof
   (C++11)
   align
   (C++11)
   assume_aligned
   (C++20)
   C Library
   malloc
   calloc
   realloc

   aligned_alloc
   (C++17)
   free

   std::pmr::polymorphic_allocator
   Member functions
   polymorphic_allocator::polymorphic_allocator
   polymorphic_allocator::allocate
   polymorphic_allocator::deallocate
   polymorphic_allocator::construct
   polymorphic_allocator::destroy
   (C++20/26*)
   polymorphic_allocator::allocate_bytes
   (C++20)
   polymorphic_allocator::deallocate_bytes
   (C++20)
   polymorphic_allocator::allocate_object
   (C++20)
   polymorphic_allocator::deallocate_object
   (C++20)
   polymorphic_allocator::new_object
   (C++20)
   polymorphic_allocator::delete_object
   (C++20)
   polymorphic_allocator::select_on_container_copy_construction
   polymorphic_allocator::resource
   Non-member functions
   operator==operator!=
   (until C++20)

   void deallocate_bytes( void* p,

                          std::size_t nbytes,
                          std::size_t alignment =
   alignof(std::max_align_t) );
                                  (since C++20)

   Deallocates the storage pointed to by p, which must have been allocated
   from a std::pmr::memory_resource x that compares equal to *resource(),
   using x.allocate(nbytes, alignment), typically through a call to
   allocate_bytes(nbytes, alignment).

   Equivalent to resource()->deallocate(p, nbytes, alignment);.

Parameters

   p         - pointer to memory to deallocate
   nbytes    - the number of bytes originally allocated
   alignment - the alignment originally allocated

Exceptions

   Throws nothing.

Notes

   This function was introduced for use with the fully-specialized
   allocator std::pmr::polymorphic_allocator<>, but it may be useful in
   any specialization.

See also

   deallocate_object
   (C++20)
   frees raw memory obtained by allocate_object
   (public member function)
   delete_object
   (C++20)
   destroys and deallocates an object
   (public member function)
   deallocate
   [static]
   deallocates storage using the allocator
   (public static member function of std::allocator_traits<Alloc>)
   deallocate
   deallocates memory
   (public member function of std::pmr::memory_resource)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/memory/polymorph
   ic_allocator/deallocate_bytes&oldid=155047"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 July 2023, at 05:19.
     * This page has been accessed 8,285 times.
