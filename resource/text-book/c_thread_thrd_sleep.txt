thrd_sleep

   From cppreference.com
   < c | thread

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Concurrency support library
   Threads
   thrd_create
   thrd_equal
   thrd_current

   thrd_sleep
   thrd_yield
   thrd_exit
   thrd_detach
   thrd_join
   thrd_successthrd_timedoutthrd_busythrd_nomemthrd_error

   Atomic operations
   atomic_init
   ATOMIC_VAR_INIT
   (until C23)
   ATOMIC_***_LOCK_FREE
   atomic_is_lock_free
   atomic_store
   atomic_load
   atomic_exchange
   atomic_compare_exchange
   atomic_fetch_add
   atomic_fetch_sub
   atomic_fetch_or
   atomic_fetch_xor
   atomic_fetch_and
   Atomic flags
   atomic_flag
   ATOMIC_FLAG_INIT
   atomic_flag_test_and_set
   atomic_flag_clear
   Memory ordering
   memory_order
   kill_dependency
   atomic_thread_fence
   atomic_signal_fence
   Mutual exclusion
   mtx_init
   mtx_lock
   mtx_timedlock
   mtx_trylock
   call_once
   mtx_unlock
   mtx_destroy
   mtx_plainmtx_recursivemtx_timed
   Condition variables
   cnd_init
   cnd_signal
   cnd_broadcast
   cnd_wait
   cnd_timedwait
   cnd_destroy
   Thread-local storage
   thread_local
   TSS_DTOR_ITERATIONS

   tss_create
   tss_get
   tss_set
   tss_delete

   Defined in header <threads.h>
   int thrd_sleep( const struct timespec* duration,
                   struct timespec* remaining );
                                                   (since C11)

   Blocks the execution of the current thread for at least until the
   TIME_UTC based duration pointed to by duration has elapsed.

   The sleep may resume earlier if a signal that is not ignored is
   received. In such case, if remaining is not NULL, the remaining time
   duration is stored into the object pointed to by remaining.

Parameters

   duration - pointer to the duration to sleep for
   remaining - pointer to the object to put the remaining time on
   interruption. May be NULL, in which case it is ignored

Return value

   0 on successful sleep, -1 if a signal occurred, other negative value if
   an error occurred.

Notes

   duration and remaining may point at the same object, which simplifies
   re-running the function after a signal.

   The actual sleep time may be longer than requested because it is
   rounded up to the timer granularity and because of scheduling and
   context switching overhead.

   The POSIX equivalent of this function is nanosleep.

Example

   Run this code
#include <threads.h>
#include <time.h>
#include <stdio.h>

int main(void)
{
    printf("Time: %s", ctime(&(time_t){time(NULL)}));
    thrd_sleep(&(struct timespec){.tv_sec=1}, NULL); // sleep 1 sec
    printf("Time: %s", ctime(&(time_t){time(NULL)}));
}

   Output:
Time: Mon Feb  2 16:18:41 2015
Time: Mon Feb  2 16:18:42 2015

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.26.5.7 The thrd_sleep function (p: 281)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.26.5.7 The thrd_sleep function (p: 385)

See also

   thrd_yield
   (C11)
   yields the current time slice
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/thread/thrd_sleep&
   oldid=138888"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 March 2022, at 13:06.
     * This page has been accessed 48,617 times.
