wcscat, wcscat_s

   From cppreference.com
   < c | string | wide

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Strings library
   Byte strings
   Multibyte strings
   Wide strings

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   (C95)
   iswalpha
   (C95)
   iswlower
   (C95)
   iswupper
   (C95)
   iswdigit
   (C95)
   iswxdigit
   (C95)
   iswblank
   (C99)
   wctype
   (C95)
   iswctype
   (C95)
   iswcntrl
   (C95)
   iswgraph
   (C95)
   iswspace
   (C95)
   iswprint
   (C95)
   iswpunct
   (C95)
   towlower
   (C95)
   towupper
   (C95)
   wctrans
   (C95)
   towctrans
   (C95)
   Conversions to numeric formats
   wcstolwcstoll
   (C95)(C99)
   wcstoulwcstoull
   (C95)(C99)
   wcstofwcstodwcstold
   (C99)(C95)(C99)
   wcstoimaxwcstoumax
   (C99)(C99)
   String manipulation
   wcslenwcsnlen_s
   (C95)(C11)
   wcscpywcscpy_s
   (C95)(C11)
   wcsncpywcsncpy_s
   (C95)(C11)
   wcscatwcscat_s
   (C95)(C11)
   wcsncatwcsncat_s
   (C95)(C11)
   wcsstr
   (C95)
   wcscmp
   (C95)
   wcsncmp
   (C95)
   wcscoll
   (C95)
   wcsxfrm
   (C95)
   wcschr
   (C95)
   wcsrchr
   (C95)
   wcspbrk
   (C95)
   wcsspn
   (C95)
   wcscspn
   (C95)
   wcstokwcstok_s
   (C95)(C11)
   Array manipulation
   wmemcpywmemcpy_s
   (C95)(C11)
   wmemmovewmemmove_s
   (C95)(C11)
   wmemcmp
   (C95)
   wmemchr
   (C95)
   wmemset
   (C95)

   Defined in header <wchar.h>
   (1)
   wchar_t *wcscat( wchar_t *dest, const wchar_t *src );
   (since C95)
   (until C99)
   wchar_t *wcscat( wchar_t *restrict dest, const wchar_t *restrict src );
   (since C99)
   errno_t wcscat_s( wchar_t *restrict dest, rsize_t destsz,
                     const wchar_t *restrict src );
   (2) (since C11)
   1) Appends a copy of the wide string pointed to by src to the end of
   the wide string pointed to by dest. The wide character src[0] replaces
   the null terminator at the end of dest. The resulting wide string is
   null-terminated. The behavior is undefined if the destination array is
   not large enough for the contents of both str and dest and the
   terminating null wide character. The behavior is undefined if the
   strings overlap.
   2) Same as (1), except that it may clobber the rest of the destination
   array (from the last character written to destsz) with unspecified
   values and that the following errors are detected at runtime and call
   the currently installed constraint handler function:

          + src or dest is a null pointer
          + destsz is zero or greater than RSIZE_MAX/sizeof(wchar_t)
          + there is no null terminator in the first destsz wide
            characters of dest
          + truncation would occur (the available space at the end of dest
            would not fit every wide character, including the null
            terminator, of src)
          + overlap would occur between the source and the destination
            strings

          As with all bounds-checked functions, wcscat_s only guaranteed
          to be available if __STDC_LIB_EXT1__ is defined by the
          implementation and if the user defines __STDC_WANT_LIB_EXT1__ to
          the integer constant 1 before including <wchar.h>.

Parameters

   dest - pointer to the null-terminated wide string to append to
   src - pointer to the null-terminated wide string to copy from
   destsz - maximum number of characters to write, typically the size of
   the destination buffer

Return value

   1) returns a copy of dest
   2) returns zero on success, returns non-zero on error. Also, on error,
   writes L'\0' to dest[0] (unless dest is a null pointer or destsz is
   zero or greater than RSIZE_MAX/sizeof(wchar_t)).

Example

   Run this code
#include <wchar.h>
#include <stdio.h>
#include <locale.h>

int main(void)
{
    wchar_t str[50] = L"Zemlya, proschaj.";
    wcscat(str, L" ");
    wcscat(str, L"V dobryj put'.");
    setlocale(LC_ALL, "en_US.utf8");
    printf("%ls", str);
}

   Output:
Zemlya, proschaj. V dobryj put'.

References

     * C17 standard (ISO/IEC 9899:2018):

          + 7.29.4.3.1 The wcscat function (p: 315)

          + K.3.9.2.2.1 The wcscat_s function (p: 466)

     * C11 standard (ISO/IEC 9899:2011):

          + 7.29.4.3.1 The wcscat function (p: 432)

          + K.3.9.2.2.1 The wcscat_s function (p: 642-643)

     * C99 standard (ISO/IEC 9899:1999):

          + 7.24.4.3.1 The wcscat function (p: 378)

See also

   wcsncatwcsncat_s
   (C95)(C11)
   appends a certain amount of wide characters from one wide string to
   another
   (function)
   strcatstrcat_s
   (C11)
   concatenates two strings
   (function)
   wcscpywcscpy_s
   (C95)(C11)
   copies one wide string to another
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/string/wide/wcscat
   &oldid=140654"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 27 June 2022, at 13:20.
     * This page has been accessed 43,142 times.
