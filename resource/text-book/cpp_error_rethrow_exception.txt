std::rethrow_exception

   From cppreference.com
   < cpp | error

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   Defined in header <exception>
   [[noreturn]] void rethrow_exception( std::exception_ptr p );
                                                               (since C++11)

   Throws the previously captured exception object referred-to by the
   exception pointer p, or a copy of that object.

   It is unspecified whether a copy is made. If a copy is made, the
   storage for it is allocated in an unspecified way.

   The behavior is undefined if p is null.

Parameters

   p - non-null std::exception_ptr

Return value

   (none)

Exceptions

   The exception object referred-to by p if no copy is made.

   Otherwise, a copy of such exception object if the implementation
   successfully copied the exception object.

   Otherwise, std::bad_alloc or the exception thrown when copying the
   exception object, if allocation or copying fails, respectively.

Notes

   Before P1675R2, rethrow_exception was not allowed to copy the exception
   object, which is unimplementable on some platforms where exception
   objects are allocated on the stack.

Example

   Run this code
#include <exception>
#include <iostream>
#include <stdexcept>
#include <string>

void handle_eptr(std::exception_ptr eptr) // passing by value is ok
{
    try
    {
        if (eptr)
            std::rethrow_exception(eptr);
    }
    catch(const std::exception& e)
    {
        std::cout << "Caught exception: '" << e.what() << "'\n";
    }
}

int main()
{
    std::exception_ptr eptr;

    try
    {
        std::string().at(1); // this generates a std::out_of_range
    }
    catch(...)
    {
        eptr = std::current_exception(); // capture
    }

    handle_eptr(eptr);

} // destructor for std::out_of_range called here, when the eptr is destructed

   Possible output:
Caught exception: 'basic_string::at: __n (which is 1) >= this->size() (which is
0)'

See also

   exception_ptr
   (C++11)
   shared pointer type for handling exception objects
   (typedef)
   current_exception
   (C++11)
   captures the current exception in a std::exception_ptr
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/error/rethrow_ex
   ception&oldid=134088"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 5 October 2021, at 04:12.
     * This page has been accessed 98,635 times.
