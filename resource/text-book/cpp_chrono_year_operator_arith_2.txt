std::chrono::operator+, std::chrono::operator- (std::chrono::year)

   From cppreference.com
   < cpp | chrono | year

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Date and time utilities
   Time point
   time_point
   (C++11)
   clock_time_conversion
   (C++20)
   clock_cast
   (C++20)
   Duration
   duration
   (C++11)
   Clocks
   system_clock
   (C++11)
   steady_clock
   (C++11)
   high_resolution_clock
   (C++11)
   is_clock
   (C++20)
   utc_clock
   (C++20)
   tai_clock
   (C++20)
   gps_clock
   (C++20)
   file_clock
   (C++20)
   local_t
   (C++20)
   Time of day
   is_amis_pm
   (C++20)(C++20)
   make12make24
   (C++20)(C++20)
   hh_mm_ss
   (C++20)
   Calendars
   day
   (C++20)
   month
   (C++20)
   year
   (C++20)
   weekday
   (C++20)
   operator/
   (C++20)
   year_month_day
   (C++20)
   year_month_day_last
   (C++20)
   year_month_weekday
   (C++20)
   year_month_weekday_last
   (C++20)
   weekday_indexed
   (C++20)
   weekday_last
   (C++20)
   month_day
   (C++20)
   month_day_last
   (C++20)
   month_weekday
   (C++20)
   month_weekday_last
   (C++20)
   year_month
   (C++20)
   last_speclast
   (C++20)(C++20)
   Time zones
   tzdb
   (C++20)
   tzdb_list
   (C++20)
   get_tzdbget_tzdb_listreload_tzdbremote_version
   (C++20)(C++20)(C++20)(C++20)
   sys_info
   (C++20)
   local_info
   (C++20)
   nonexistent_local_time
   (C++20)
   ambiguous_local_time
   (C++20)
   locate_zone
   (C++20)
   current_zone
   (C++20)
   time_zone
   (C++20)
   choose
   (C++20)
   zoned_traits
   (C++20)
   zoned_time
   (C++20)
   time_zone_link
   (C++20)
   leap_second
   (C++20)
   leap_second_info
   (C++20)
   get_leap_second_info
   (C++20)
   chrono I/O
   parse
   (C++20)
   C-style date and time

   std::chrono::year
   Member functions
   year::year
   year::operator++year::operator--
   year::operator+=year::operator-=
   year::operator+year::operator-
   year::is_leap
   year::operator int
   year::ok
   year::min
   year::max
   Nonmember functions
   operator==operator<=>
   operator+operator-
   operator<<
   from_stream
   operator""y
   Helper classes
   formatter<std::chrono::year>
   hash<std::chrono::year>
   (C++26)

   constexpr std::chrono::year operator+( const std::chrono::year& y,
                                          const std::chrono::years& ys )
   noexcept;
   (1) (since C++20)
   constexpr std::chrono::year operator+( const std::chrono::years& ys,
                                          const std::chrono::year& y )
   noexcept;
   (2) (since C++20)
   constexpr std::chrono::year operator-( const std::chrono::year& y,
                                          const std::chrono::years& ys )
   noexcept;
   (3) (since C++20)
   constexpr std::chrono::years operator-( const std::chrono::year& y1,
                                           const std::chrono::year& y2 )
   noexcept;
   (4) (since C++20)
   1,2) Adds ys.count() years to y.
   3) Subtracts ys.count() years from y.
   4) Returns the difference in years between y1 and y2.

Return value

   1,2) std::chrono::year(int(y) + ys.count())
   3) std::chrono::year(int(y) - ys.count())
   4) std::chrono::years(int(y1) - int(y2))

Notes

   If the resulting year value for (1-3) is outside the range
   [-32767, 32767], the actual value stored is unspecified.

   The result of subtracting two year values is a duration of type
   std::chrono::years. This duration unit represents the length of the
   average Gregorian year, and the resulting duration bears no
   relationship to the number of days in the particular years represented
   by the operands. For example, the result of 2018y - 2017y is
   std::chrono::years(1), which represents 365.2425 days, not 365 days.

Example

   Run this code
#include <cassert>
#include <chrono>

int main()
{
    std::chrono::year y{2020};

    y = std::chrono::years(12) + y; // overload (2): duration + time point
    assert(y == std::chrono::year(2032));

    y = y - std::chrono::years(33); // overload (3): time point - duration
    assert(y == std::chrono::year(1999));

    // y = std::chrono::years(33) - y; // not supported: duration - time point

    using namespace std::chrono;
    constexpr std::chrono::years ys = 2025y - 2020y; // overload (4)
    static_assert(ys == std::chrono::years(5));
}

See also

   operator++operator++(int)operator--operator--(int)
   increments or decrements the month
   (public member function of std::chrono::month)
   operator+=operator-=
   adds or subtracts a number of months
   (public member function of std::chrono::month)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/chrono/year/oper
   ator_arith_2&oldid=157535"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 29 August 2023, at 16:12.
     * This page has been accessed 8,818 times.
