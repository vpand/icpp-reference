std::basic_string_view<CharT,Traits>::substr

   From cppreference.com
   < cpp | string | basic string view

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string_view
   Member functions
   basic_string_view::basic_string_view

   basic_string_view::operator=
   Iterators
   basic_string_view::beginbasic_string_view::cbegin
   basic_string_view::endbasic_string_view::cend
   basic_string_view::rbeginbasic_string_view::crbegin
   basic_string_view::rendbasic_string_view::crend
   Element access
   basic_string_view::at
   basic_string_view::operator[]
   basic_string_view::front
   basic_string_view::back
   basic_string_view::data
   Capacity
   basic_string_view::sizebasic_string_view::length
   basic_string_view::max_size
   basic_string_view::empty
   Modifiers
   basic_string_view::remove_prefix
   basic_string_view::remove_suffix
   basic_string_view::swap
   Operations
   basic_string_view::copy
   basic_string_view::substr
   basic_string_view::compare
   basic_string_view::starts_with
   (C++20)
   basic_string_view::ends_with
   (C++20)
   basic_string_view::contains
   (C++23)
   basic_string_view::find
   basic_string_view::rfind
   basic_string_view::find_first_of
   basic_string_view::find_last_of
   basic_string_view::find_first_not_of
   basic_string_view::find_last_not_of
   Constants
   basic_string_view::npos
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator<<
   operator""sv
   Helper classes
   hash<std::string_view>hash<std::wstring_view>hash<std::u8string_view>ha
   sh<std::u16string_view>hash<std::u32string_view>
   (C++20)
   Deduction guides(C++20)

   constexpr basic_string_view substr( size_type pos = 0,
                                       size_type count = npos ) const;
                                                         (since C++17)

   Returns a view of the substring [pos, pos + rlen), where rlen is the
   smaller of count and size() - pos.

Parameters

   pos   - position of the first character
   count - requested length

Return value

   View of the substring [pos, pos + rlen).

Exceptions

   std::out_of_range if pos > size().

Complexity

   Constant.

Example

   Run this code
#include <cstddef>
#include <iostream>
#include <stdexcept>
#include <string_view>

int main()
{
    typedef std::size_t count_t, pos_t;

    constexpr std::string_view data{"ABCDEF"};

    std::cout << data.substr() << '\n'; // ABCDEF, i.e. data[0, 5] that is [0, 6
)
    std::cout << data.substr(pos_t(1)) << '\n'; // BCDEF, i.e. [1, 6)
    std::cout << data.substr(pos_t(2), count_t(3)) << '\n'; // CDE, i.e. [2, 2 +
 3)
    std::cout << data.substr(pos_t(4), count_t(42)) << '\n'; // EF, i.e. [4, 6)

    try
    {
        [[maybe_unused]]
        auto sub = data.substr(pos_t(666), count_t(1)); // throws: pos > size()
    }
    catch (std::out_of_range const& ex)
    {
        std::cout << ex.what() << '\n';
    }
}

   Possible output:
ABCDEF
BCDEF
CDE
EF
basic_string_view::substr: __pos (which is 666) > __size (which is 6)

See also

   copy
   copies characters
   (public member function)
   find
   find characters in the view
   (public member function)
   substr
   returns a substring
   (public member function of std::basic_string<CharT,Traits,Allocator>)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing_view/substr&oldid=156778"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 15 August 2023, at 13:39.
     * This page has been accessed 187,027 times.
