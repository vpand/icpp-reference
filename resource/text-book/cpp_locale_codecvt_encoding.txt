std::codecvt<InternT,ExternT,StateT>::encoding, do_encoding

   From cppreference.com
   < cpp | locale | codecvt

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::codecvt
   Member functions
   codecvt::codecvt
   codecvt::~codecvt
   codecvt::outcodecvt::do_out
   codecvt::incodecvt::do_in
   codecvt::unshiftcodecvt::do_unshift
   codecvt::encodingcodecvt::do_encoding
   codecvt::always_noconvcodecvt::do_always_noconv
   codecvt::lengthcodecvt::do_length
   codecvt::max_lengthcodecvt::do_max_length

   Defined in header <locale>
                             (1)
   public:
   int encoding() const throw();
                                 (until C++11)
   public:
   int encoding() const noexcept;
                                 (since C++11)
                             (2)
   protected:
   virtual int do_encoding() const throw();
                                 (until C++11)
   protected:
   virtual int do_encoding() const noexcept;
                                 (since C++11)
   1) Public member function, calls the member function do_encoding of the
   most derived class.
   2) If the encoding represented by this codecvt facet maps each internal
   character to the same, constant number of external characters, returns
   that number. If the encoding is variable-length (e.g. UTF-8 or UTF-16),
   returns 0. If the encoding is state-dependent, returns -1.

Return value

   The exact number of externT characters that correspond to one internT
   character, if constant. 0 if the number varies, -1 if the encoding is
   state-dependent.

   The non-converting specialization std::codecvt<char, char,
   std::mbstate_t> returns 1.

Example

   Run this code
#include <iostream>
#include <locale>

int main()
{
    std::cout << "en_US.utf8 is a variable-length encoding, encoding() returns "
              << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("en_US.utf8")
                 ).encoding() << '\n';

    std::cout << "zh_CN.gb18030 is also variable-length, encoding() == "
              << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("zh_CN.gb18030")
                 ).encoding() << '\n';

    std::cout << "ru_RU.koi8r is a single-byte encoding, encoding() == "
              << std::use_facet<std::codecvt<wchar_t, char, std::mbstate_t>>(
                     std::locale("ru_RU.koi8r")
                 ).encoding() << '\n';
}

   Output:
en_US.utf8 is a variable-length encoding, encoding() returns 0
zh_CN.gb18030 is also variable-length, encoding() == 0
ru_RU.koi8r is a single-byte encoding, encoding() == 1

See also

   MB_CUR_MAX
   maximum number of bytes in a multibyte character in the current C
   locale
   (macro variable)
   do_max_length
   [virtual]
   returns the maximum number of ExternT characters that could be
   converted into a single InternT character
   (virtual protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/codecvt/e
   ncoding&oldid=163334"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 22 November 2023, at 00:16.
     * This page has been accessed 24,436 times.
