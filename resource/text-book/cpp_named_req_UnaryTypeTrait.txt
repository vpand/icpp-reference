C++ named requirements: UnaryTypeTrait (since C++11)

   From cppreference.com
   < cpp | named req

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   C++ named requirements
   Basic
   DefaultConstructible
   CopyAssignable
   CopyConstructible
   MoveAssignable
   (C++11)
   MoveConstructible
   (C++11)
   Destructible
   Type properties
   ScalarType
   TriviallyCopyable
   (C++11)
   StandardLayoutType
   (C++11)
   PODType
   TrivialType
   (C++11)
   ImplicitLifetimeType
   Library-Wide
   EqualityComparable
   LessThanComparable
   Swappable
   ValueSwappable
   (C++11)
   NullablePointer
   (C++11)
   Hash
   (C++11)
   Allocator
   FunctionObject
   Callable
   Predicate
   BinaryPredicate
   Compare
   Container
   Container
   SequenceContainer
   ContiguousContainer
   (C++17)
   ReversibleContainer
   AssociativeContainer
   AllocatorAwareContainer
   UnorderedAssociativeContainer
   (C++11)
   Container Elements
   DefaultInsertable
   (C++11)
   CopyInsertable
   (C++11)
   MoveInsertable
   (C++11)
   EmplaceConstructible
   (C++11)
   Erasable
   (C++11)
   Iterator
   LegacyIterator
   LegacyOutputIterator
   LegacyInputIterator
   LegacyForwardIterator
   LegacyBidirectionalIterator
   LegacyRandomAccessIterator
   LegacyContiguousIterator
   (C++17)
   ConstexprIterator
   (C++20)
   Stream I/O
   FormattedInputFunction
   UnformattedInputFunction
   FormattedOutputFunction
   UnformattedOutputFunction
   Formatters
   BasicFormatter
   (C++20)
   Formatter
   (C++20)
   Random Numbers
   SeedSequence
   (C++11)
   RandomNumberEngine
   (C++11)
   RandomNumberDistribution
   (C++11)
   UniformRandomBitGenerator
   (C++11)
   RandomNumberEngineAdaptor
   (C++11)
   Concurrency
   BasicLockable
   (C++11)
   Lockable
   (C++11)
   TimedLockable
   (C++11)
   SharedLockable
   (C++14)
   SharedTimedLockable
   (C++14)
   Mutex
   (C++11)
   TimedMutex
   (C++11)
   SharedMutex
   (C++17)
   SharedTimedMutex
   (C++14)
   Ranges
   RangeAdaptorObject
   (C++20)
   RangeAdaptorClosureObject
   (C++20)
   Other
   CharTraits
   RegexTraits
   (C++11)
   BitmaskType
   LiteralType
   (C++11)
   NumericType
   UnaryTypeTrait
   (C++11)
   BinaryTypeTrait
   (C++11)
   TransformationTrait
   (C++11)
   Clock
   (C++11)
   TrivialClock
   (C++11)

   A UnaryTypeTrait is a class template that describes a property of its
   template type parameter with an std::integral_constant (typically
   std::bool_constant) specialization.

Requirements

     * DefaultConstructible and CopyConstructible.
     * Takes one template type parameter (additional template parameters
       are optional and allowed).
     * Publicly and unambiguously derived from a specialization of
       std::integral_constant, known as its base characteristic.
     * The member names of the base characteristic are not hidden and are
       unambiguously available.

Standard library

   The following type traits all satisfy UnaryTypeTrait:
     * Primary type categories
     * Composite type categories
     * Type properties
     * Supported operations
     * Property queries

   The following standard library class templates also satisfy
   UnaryTypeTrait.
   integral_constant
   (C++11)
   compile-time constant of specified type with specified value
   (class template)
   negation
   (C++17)
   logical NOT metafunction
   (class template)
   std::tuple_size<std::tuple>
   (C++11)
   obtains the size of tuple at compile time
   (class template specialization)
   std::tuple_size<std::array>
   (C++11)
   obtains the size of an array
   (class template specialization)
   std::tuple_size<std::pair>
   (C++11)
   obtains the size of a pair
   (class template specialization)
   variant_sizevariant_size_v
   (C++17)
   obtains the size of the variant's list of alternatives at compile time
   (class template) (variable template)
   is_bind_expression
   (C++11)
   indicates that an object is std::bind expression or can be used as one
   (class template)
   is_placeholder
   (C++11)
   indicates that an object is a standard placeholder or can be used as
   one
   (class template)
   is_execution_policy
   (C++17)
   test whether a class represents an execution policy
   (class template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/named_req/UnaryT
   ypeTrait&oldid=161475"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 26 October 2023, at 16:00.
     * This page has been accessed 21,341 times.
