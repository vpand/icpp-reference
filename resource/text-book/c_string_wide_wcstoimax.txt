wcstoimax, wcstoumax

   From cppreference.com
   < c | string | wide

   C
   Language
   Headers
   Type support
   Program utilities
   Variadic function support
   Error handling
   Dynamic memory management
   Strings library
   Algorithms
   Numerics
   Date and time utilities
   Input/output support
   Localization support
   Concurrency support (C11)
   Technical Specifications
   Symbol index

   Strings library
   Byte strings
   Multibyte strings
   Wide strings

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   (C95)
   iswalpha
   (C95)
   iswlower
   (C95)
   iswupper
   (C95)
   iswdigit
   (C95)
   iswxdigit
   (C95)
   iswblank
   (C99)
   wctype
   (C95)
   iswctype
   (C95)
   iswcntrl
   (C95)
   iswgraph
   (C95)
   iswspace
   (C95)
   iswprint
   (C95)
   iswpunct
   (C95)
   towlower
   (C95)
   towupper
   (C95)
   wctrans
   (C95)
   towctrans
   (C95)
   Conversions to numeric formats
   wcstolwcstoll
   (C95)(C99)
   wcstoulwcstoull
   (C95)(C99)
   wcstofwcstodwcstold
   (C99)(C95)(C99)
   wcstoimaxwcstoumax
   (C99)(C99)
   String manipulation
   wcslenwcsnlen_s
   (C95)(C11)
   wcscpywcscpy_s
   (C95)(C11)
   wcsncpywcsncpy_s
   (C95)(C11)
   wcscatwcscat_s
   (C95)(C11)
   wcsncatwcsncat_s
   (C95)(C11)
   wcsstr
   (C95)
   wcscmp
   (C95)
   wcsncmp
   (C95)
   wcscoll
   (C95)
   wcsxfrm
   (C95)
   wcschr
   (C95)
   wcsrchr
   (C95)
   wcspbrk
   (C95)
   wcsspn
   (C95)
   wcscspn
   (C95)
   wcstokwcstok_s
   (C95)(C11)
   Array manipulation
   wmemcpywmemcpy_s
   (C95)(C11)
   wmemmovewmemmove_s
   (C95)(C11)
   wmemcmp
   (C95)
   wmemchr
   (C95)
   wmemset
   (C95)

   Defined in header <inttypes.h>
   intmax_t wcstoimax( const wchar_t *restrict nptr,
                       wchar_t **restrict endptr, int base );
                                                     (since C99)
   uintmax_t wcstoumax( const wchar_t *restrict nptr,
                        wchar_t **restrict endptr, int base );
                                                     (since C99)

   Interprets an unsigned integer value in a wide string pointed to by
   nptr.

   Discards any whitespace characters (as identified by calling iswspace)
   until the first non-whitespace character is found, then takes as many
   characters as possible to form a valid base-n (where n=base) unsigned
   integer number representation and converts them to an integer value.
   The valid unsigned integer value consists of the following parts:
     * (optional) plus or minus sign
     * (optional) prefix (0) indicating octal base (applies only when the
       base is 8 or 0)
     * (optional) prefix (0x or 0X) indicating hexadecimal base (applies
       only when the base is 16 or 0)
     * a sequence of digits

   The set of valid values for base is {0,2,3,...,36}. The set of valid
   digits for base-2 integers is {0,1}, for base-3 integers is {0,1,2},
   and so on. For bases larger than 10, valid digits include alphabetic
   characters, starting from Aa for base-11 integer, to Zz for base-36
   integer. The case of the characters is ignored.

   Additional numeric formats may be accepted by the currently installed C
   locale.

   If the value of base is 0, the numeric base is auto-detected: if the
   prefix is 0, the base is octal, if the prefix is 0x or 0X, the base is
   hexadecimal, otherwise the base is decimal.

   If the minus sign was part of the input sequence, the numeric value
   calculated from the sequence of digits is negated as if by unary minus
   in the result type, which applies unsigned integer wraparound rules.

   The functions sets the pointer pointed to by endptr to point to the
   wide character past the last character interpreted. If endptr is a null
   pointer, it is ignored.

Parameters

   nptr   - pointer to the null-terminated wide string to be interpreted
   endptr - pointer to a pointer to a wide character.
   base   - base of the interpreted integer value

Return value

   Integer value corresponding to the contents of str on success. If the
   converted value falls out of range of corresponding return type, range
   error occurs and INTMAX_MAX, INTMAX_MIN, UINTMAX_MAX, or 0 is returned,
   as appropriate. If no conversion can be performed, 0 is returned.

Example

   Run this code
#include <errno.h>
#include <inttypes.h>
#include <stdio.h>
#include <string.h>
#include <wchar.h>

int main(void)
{
  wchar_t* endptr;

  wprintf(L"%ld\n", wcstoimax(L" -123junk", &endptr, 10)); /* base 10
         */
  wprintf(L"%ld\n", wcstoimax(L"11111111", &endptr, 2));   /* base 2
         */
  wprintf(L"%ld\n", wcstoimax(L"XyZ", &endptr, 36));       /* base 36
         */
  wprintf(L"%ld\n", wcstoimax(L"010", &endptr, 0));        /* octal auto-detecti
on       */
  wprintf(L"%ld\n", wcstoimax(L"10", &endptr, 0));         /* decimal auto-detec
tion     */
  wprintf(L"%ld\n", wcstoimax(L"0x10", &endptr, 0));       /* hexadecimal auto-d
etection */

  /* range error             */
  /* LONG_MAX+1 --> LONG_MAX */
  errno = 0;
  wprintf(L"%ld\n", wcstoimax(L"9223372036854775808", &endptr, 10));
  wprintf(L"%s\n", strerror(errno));
}

   Output:
-123
255
44027
8
10
16
9223372036854775807
Numerical result out of range

References

     * C11 standard (ISO/IEC 9899:2011):

          + 7.8.2.4 The wcstoimax and wcstoumax functions (p: 220)

     * C99 standard (ISO/IEC 9899:1999):

          + 7.8.2.4 The wcstoimax and wcstoumax functions (p: 201)

See also

   strtoimaxstrtoumax
   (C99)(C99)
   converts a byte string to intmax_t or uintmax_t
   (function)
   wcstolwcstoll
   (C95)(C99)
   converts a wide string to an integer value
   (function)
   wcstoulwcstoull
   (C95)(C99)
   converts a wide string to an unsigned integer value
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=c/string/wide/wcstoi
   max&oldid=133860"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 21 September 2021, at 17:13.
     * This page has been accessed 13,810 times.
