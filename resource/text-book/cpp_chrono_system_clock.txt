std::chrono::system_clock

   From cppreference.com
   < cpp | chrono

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Date and time utilities
   Time point
   time_point
   (C++11)
   clock_time_conversion
   (C++20)
   clock_cast
   (C++20)
   Duration
   duration
   (C++11)
   Clocks
   system_clock
   (C++11)
   steady_clock
   (C++11)
   high_resolution_clock
   (C++11)
   is_clock
   (C++20)
   utc_clock
   (C++20)
   tai_clock
   (C++20)
   gps_clock
   (C++20)
   file_clock
   (C++20)
   local_t
   (C++20)
   Time of day
   is_amis_pm
   (C++20)(C++20)
   make12make24
   (C++20)(C++20)
   hh_mm_ss
   (C++20)
   Calendars
   day
   (C++20)
   month
   (C++20)
   year
   (C++20)
   weekday
   (C++20)
   operator/
   (C++20)
   year_month_day
   (C++20)
   year_month_day_last
   (C++20)
   year_month_weekday
   (C++20)
   year_month_weekday_last
   (C++20)
   weekday_indexed
   (C++20)
   weekday_last
   (C++20)
   month_day
   (C++20)
   month_day_last
   (C++20)
   month_weekday
   (C++20)
   month_weekday_last
   (C++20)
   year_month
   (C++20)
   last_speclast
   (C++20)(C++20)
   Time zones
   tzdb
   (C++20)
   tzdb_list
   (C++20)
   get_tzdbget_tzdb_listreload_tzdbremote_version
   (C++20)(C++20)(C++20)(C++20)
   sys_info
   (C++20)
   local_info
   (C++20)
   nonexistent_local_time
   (C++20)
   ambiguous_local_time
   (C++20)
   locate_zone
   (C++20)
   current_zone
   (C++20)
   time_zone
   (C++20)
   choose
   (C++20)
   zoned_traits
   (C++20)
   zoned_time
   (C++20)
   time_zone_link
   (C++20)
   leap_second
   (C++20)
   leap_second_info
   (C++20)
   get_leap_second_info
   (C++20)
   chrono I/O
   parse
   (C++20)
   C-style date and time

   std::chrono::system_clock
   Member functions
   system_clock::now
   system_clock::to_time_t
   system_clock::from_time_t
   Time point I/O
   operator<<
   formatter<std::chrono::sys_time>
   from_stream

   Defined in header <chrono>
   class system_clock;
                             (since C++11)

   Class std::chrono::system_clock represents the system-wide real time
   wall clock.

   It may not be monotonic: on most systems, the system time can be
   adjusted at any moment. It is the only C++ clock that has the ability
   to map its time points to C-style time.

   std::chrono::system_clock meets the requirements of TrivialClock.

   The epoch of system_clock is unspecified, but most implementations use
   Unix Time (i.e., time since 00:00:00 Coordinated Universal Time (UTC),
   Thursday, 1 January 1970, not counting leap seconds).
   (until C++20)

   system_clock measures Unix Time (i.e., time since 00:00:00 Coordinated
   Universal Time (UTC), Thursday, 1 January 1970, not counting leap
   seconds).
   (since C++20)

Time point family

   Defined in namespace std::chrono
   template<class Duration>
   using sys_time = std::chrono::time_point<std::chrono::system_clock,
   Duration>;
                                                      (since C++20)
   using sys_seconds = sys_time<std::chrono::seconds>;
                                                      (since C++20)
   using sys_days = sys_time<std::chrono::days>;
                                                      (since C++20)
   operator<<(std::chrono::sys_time)
   (C++20)
   performs stream output on a sys_time
   (function template)
   from_stream(std::chrono::sys_time)
   (C++20)
   parses a sys_time from a stream according to the provided format
   (function template)
   std::formatter<std::chrono::sys_time>
   (C++20)
   formatting support for sys_time
   (class template specialization)

Member types

   Member type Definition
   rep signed arithmetic type representing the number of ticks in the
   clock's duration
   period a std::ratio type representing the tick period of the clock, in
   seconds
   duration std::chrono::duration<rep, period>, capable of representing
   negative durations
   time_point std::chrono::time_point<std::chrono::system_clock>

Member constants

   constexpr bool is_steady
   [static]
   true if the time between ticks is always constant, i.e. calls to now()
   return values that increase monotonically even in case of some external
   clock adjustment, otherwise false
   (public static member constant)

Member functions

   now
   [static]
   returns a std::chrono::time_point representing the current point in
   time
   (public static member function)
   to_time_t
   [static]
   converts a system clock time point to std::time_t
   (public static member function)
   from_time_t
   [static]
   converts std::time_t to a system clock time point
   (public static member function)

Notes

   The system_clock's time value can be internally adjusted at any time by
   the operating system, for example due to NTP synchronization or the
   user changing the system's clock. Daylight Saving Time and time zone
   changes, however, do not affect it since it is based on the UTC
   time-zone.

See also

   steady_clock
   (C++11)
   monotonic clock that will never be adjusted
   (class)
   high_resolution_clock
   (C++11)
   the clock with the shortest tick period available
   (class)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/chrono/system_cl
   ock&oldid=154231"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 June 2023, at 10:26.
     * This page has been accessed 880,662 times.
