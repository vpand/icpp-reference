std::experimental::nullopt_t

   From cppreference.com
   < cpp | experimental | optional

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Library fundamentals
   experimental::optional
   experimental::any
   experimental::basic_string_view
   experimental::sample
   experimental::shared_ptr
   experimental::weak_ptr
   experimental::apply
   experimental::invocation_typeexperimental::raw_invocation_type
   experimental::search
   experimental::default_searcherexperimental::make_default_searcher
   experimental::boyer_moore_searcherexperimental::make_boyer_moore_search
   er
   experimental::boyer_moore_horspool_searcherexperimental::make_boyer_moo
   re_horspool_searcher
   Type-erased and polymorphic allocators
   Variable templates for type traits

   std::experimental::optional
   Member functions
   optional::optional
   optional::~optional
   optional::operator=
   Observers
   optional::operator->optional::operator*
   optional::operator bool
   optional::value
   optional::value_or
   Modifiers
   optional::emplace
   optional::swap
   Non-member functions
   operator==operator!=operator<operator<=operator>operator>=
   make_optional
   swap
   Helper classes
   hash
   nullopt_t
   in_place_t
   bad_optional_access
   Helper objects
   nullopt
   in_place

   Defined in header <experimental/optional>
   struct nullopt_t;
                                            (library fundamentals TS)

   std::experimental::nullopt_t is an empty class type used to indicate
   optional type with uninitialized state. In particular,
   std::experimental::optional has a constructor with nullopt_t as a
   single argument, which creates an optional that does not contain a
   value.

   std::experimental::nullopt_t must be a LiteralType and cannot have a
   default constructor.

   It must have a constexpr constructor that takes some
   implementation-defined literal type.

Notes

   nullopt_t is not DefaultConstructible to support both op = {}; and op =
   nullopt; as the syntax for disengaging an optional object.

   A possible implementation of this class is
struct nullopt_t
{
    constexpr nullopt_t(int) {}
};

See also

   nullopt
   (C++17)
   an object of type nullopt_t
   (constant)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/opt
   ional/nullopt_t&oldid=155035"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 July 2023, at 00:40.
     * This page has been accessed 18,308 times.
