std::flat_multiset<Key,Compare,KeyContainer>::operator=

   From cppreference.com
   < cpp | container | flat multiset


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::flat_multiset
   Member types
   Member functions
   flat_multiset::flat_multiset

   flat_multiset::operator=
   Iterators
   flat_multiset::beginflat_multiset::cbegin
   flat_multiset::endflat_multiset::cend
   flat_multiset::rbeginflat_multiset::crbegin
   flat_multiset::rendflat_multiset::crend
   Capacity
   flat_multiset::size
   flat_multiset::max_size
   flat_multiset::empty
   Modifiers
   flat_multiset::clear
   flat_multiset::insert
   flat_multiset::insert_range
   flat_multiset::emplace
   flat_multiset::emplace_hint
   flat_multiset::erase
   flat_multiset::swap
   flat_multiset::extract
   flat_multiset::replace
   Lookup
   flat_multiset::count
   flat_multiset::find
   flat_multiset::contains
   flat_multiset::equal_range
   flat_multiset::lower_bound
   flat_multiset::upper_bound
   Observers
   flat_multiset::key_comp
   flat_multiset::value_comp
   Non-member functions
   operator==operator<=>
   (C++23)(C++23)
   swap(std::flat_multiset)
   (C++23)
   erase_if(std::flat_multiset)
   (C++23)
   Helper classes
   uses_allocator<std::flat_multiset>
   (C++23)
   Tags
   sorted_equivalent
   (C++23)
   sorted_equivalent_t
   (C++23)
   Deduction guides

   flat_multiset& operator=( const flat_multiset& other );
   (1) (since C++23)
   (implicitly declared)
   flat_multiset& operator=( flat_multiset&& other );
   (2) (since C++23)
   (implicitly declared)
   flat_multiset& operator=( std::initializer_list<key_type> ilist );
   (3) (since C++23)

   Replaces the contents of the container adaptor with the contents of
   given argument.
   1) Copy assignment operator. Replaces the contents with a copy of the
   contents of other. Effectively calls c = other.c; comp = other.comp;.
   2) Move assignment operator. Replaces the contents with those of other
   using move semantics. Effectively calls c = std::move(other.c); comp =
   std::move(other.comp);.
   3) Replaces the contents with those identified by initializer list
   ilist.

Parameters

   other - another container adaptor to be used as source
   ilist - initializer list to be used as source

Return value

   *this

Complexity

   1,2) Equivalent to that of operator= of the underlying container.
   3) Linear in the size of *this and ilist.

Example

   Run this code
#include <flat_set>
#include <initializer_list>
#include <print>

int main()
{
    std::flat_multiset<int> x{1, 2, 3}, y, z;
    const auto w = {4, 5, 6, 7};

    std::println("Initially:");
    std::println("x = {}", x);
    std::println("y = {}", y);
    std::println("z = {}", z);

    y = x; // overload (1)
    std::println("Copy assignment copies data from x to y:");
    std::println("x = {}", x);
    std::println("y = {}", y);

    z = std::move(x); // overload (2)
    std::println("Move assignment moves data from x to z, modifying both x and z
:");
    std::println("x = {}", x);
    std::println("z = {}", z);

    z = w; // overload (3)
    std::println("Assignment of initializer_list w to z:");
    std::println("w = {}", w);
    std::println("z = {}", z);
}

   Output:
Initially:
x = {1, 2, 3}
y = {}
z = {}
Copy assignment copies data from x to y:
x = {1, 2, 3}
y = {1, 2, 3}
Move assignment moves data from x to z, modifying both x and z:
x = {}
z = {1, 2, 3}
Assignment of initializer_list w to z:
w = {4, 5, 6, 7}
z = {4, 5, 6, 7}

See also

   (constructor)
   constructs the flat_multiset
   (public member function)
   replace
   replaces the underlying container
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/flat_m
   ultiset/operator%3D&oldid=169510"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 2 February 2024, at 09:38.
     * This page has been accessed 569 times.
