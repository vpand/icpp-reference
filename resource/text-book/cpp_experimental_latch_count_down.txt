std::experimental::latch::count_down

   From cppreference.com
   < cpp | experimental | latch

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Extensions for concurrency
   std::future extensions
   experimental::future
   experimental::shared_future
   experimental::when_all
   experimental::when_any
   experimental::make_ready_future
   experimental::make_exceptional_future
   Latches and barriers
   experimental::latch
   experimental::barrier
   experimental::flex_barrier
   Atomic smart pointers
   experimental::atomic_shared_ptr
   experimental::atomic_weak_ptr

   std::experimental::latch
   latch::latch
   latch::~latch
   latch::count_down_and_wait
   latch::count_down
   latch::is_ready
   latch::wait

   void count_down( ptrdiff_t n = 1 );
   (1)                                (concurrency TS)

   Atomically decrements the internal counter by n without blocking the
   caller.

   If n is greater than the value of the internal counter or is negative,
   the behavior is undefined.

   This operation synchronizes with all calls that block on this latch and
   all is_ready calls on this latch that returns true.

Parameters

   n - the value by which the internal counter is decreased

Return value

   (none)

Exceptions

   Throws nothing.
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/lat
   ch/count_down&oldid=154973"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 July 2023, at 02:09.
     * This page has been accessed 9,737 times.
