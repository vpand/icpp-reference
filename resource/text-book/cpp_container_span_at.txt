std::span<T,Extent>::at

   From cppreference.com
   < cpp | container | span


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::span
   Member functions
   span::span
   span::operator=
   Element access
   span::front
   span::back
   span::at
   (C++26)
   span::operator[]
   span::data
   Iterators
   span::beginspan::cbegin
   (C++23)
   span::endspan::cend
   (C++23)
   span::rbeginspan::crbegin
   (C++23)
   span::rendspan::crend
   (C++23)
   Observers
   span::empty
   span::size
   span::size_bytes
   Subviews
   span::first
   span::last
   span::subspan
   Non-member functions
   as_bytesas_writable_bytes
   (C++20)(C++20)
   Non-member constant
   dynamic_extent
   (C++20)
   Deduction guides

   constexpr reference at( size_type pos ) const;
                                                 (since C++26)

   Returns a reference to the element at specified location pos, with
   bounds checking.

   If pos is not within the range of the span, an exception of type
   std::out_of_range is thrown.

Parameters

   pos - position of the element to return

Return value

   Reference to the requested element, i.e. *(data() + pos).

Exceptions

   std::out_of_range if pos >= size().

Complexity

   Constant.

Notes

   Feature-test macro  Value    Std      Feature
   __cpp_lib_span     202311L (C++26) std::span::at

Example

   Run this code
#include <iostream>
#include <span>
#include <stdexcept>

#ifdef __GNUG__
[[gnu::noinline]]
#endif
unsigned int runtime_six() // Emulate runtime input
{
    return 6u;
}

int main()
{
    int x[]{1, 2, 4, 5, 5, 6};
    std::span data(x);

    // Set element 1
    data.at(1) = 88;

    // Read element 2
    std::cout << "Element at index 2 has value " << data.at(2) << '\n';

    std::cout << "data size = " << data.size() << '\n';

    try
    {
        // Set element 6, where the index is determined at runtime
        data.at(runtime_six()) = 666;
    }
    catch (std::out_of_range const& exc)
    {
        std::cout << exc.what() << '\n';
    }

    // Print final values
    std::cout << "data:";
    for (int elem : data)
        std::cout << ' ' << elem;
    std::cout << '\n';
}

   Possible output:
Element at index 2 has value 4
data size = 6
std::out_of_range: pos >= size()
data: 1 88 4 5 5 6

See also

   operator[]
   access specified element
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/span/a
   t&oldid=162954"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 November 2023, at 09:13.
     * This page has been accessed 2,686 times.
