std::isnan

   From cppreference.com
   < cpp | numeric | math

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Numerics library
   Common mathematical functions
   Mathematical special functions (C++17)
   Mathematical constants (C++20)
   Basic linear algebra algorithms (C++26)
   Floating-point environment (C++11)
   Complex numbers
   Numeric arrays
   Pseudo-random number generation
   Factor operations
   gcd
   (C++17)
   lcm
   (C++17)
   Interpolations
   midpoint
   (C++20)
   lerp
   (C++20)
   Saturation arithmetic
   add_sat
   (C++26)
   sub_sat
   (C++26)
   saturate_cast
   (C++26)
   mul_sat
   (C++26)
   div_sat
   (C++26)
   Generic numeric operations
   iota
   (C++11)
   ranges::iota
   (C++23)
   accumulate
   inner_product
   adjacent_difference
   partial_sum
   reduce
   (C++17)
   transform_reduce
   (C++17)
   inclusive_scan
   (C++17)
   exclusive_scan
   (C++17)
   transform_inclusive_scan
   (C++17)
   transform_exclusive_scan
   (C++17)
   Bit operations
   has_single_bit
   (C++20)
   bit_cast
   (C++20)
   bit_ceil
   (C++20)
   bit_floor
   (C++20)
   bit_width
   (C++20)
   rotl
   (C++20)
   rotr
   (C++20)
   popcount
   (C++20)
   countl_zero
   (C++20)
   countl_one
   (C++20)
   countr_zero
   (C++20)
   countr_one
   (C++20)
   byteswap
   (C++23)
   endian
   (C++20)

   Common mathematical functions
   Functions
   Basic operations
   abs(int)labsllabsimaxabs
   (C++11)
   abs(float)fabs
   divldivlldivimaxdiv
   (C++11)
   fmod
   remainder
   (C++11)
   remquo
   (C++11)
   fma
   (C++11)
   fmax
   (C++11)
   fmin
   (C++11)
   fdim
   (C++11)
   nannanfnanl
   (C++11)(C++11)(C++11)
   Exponential functions
   exp
   exp2
   (C++11)
   expm1
   (C++11)
   log
   log10
   log1p
   (C++11)
   log2
   (C++11)
   Power functions
   sqrt
   cbrt
   (C++11)
   hypot
   (C++11)
   pow
   Trigonometric and hyperbolic functions
   sin
   cos
   tan
   asin
   acos
   atan
   atan2
   sinh
   cosh
   tanh
   asinh
   (C++11)
   acosh
   (C++11)
   atanh
   (C++11)
   Error and gamma functions
   erf
   (C++11)
   erfc
   (C++11)
   lgamma
   (C++11)
   tgamma
   (C++11)
   Nearest integer floating point operations
   ceil
   floor
   roundlroundllround
   (C++11)(C++11)(C++11)
   trunc
   (C++11)
   nearbyint
   (C++11)
   rintlrintllrint
   (C++11)(C++11)(C++11)
   Floating point manipulation functions
   ldexp
   scalbnscalbln
   (C++11)(C++11)
   ilogb
   (C++11)
   logb
   (C++11)
   frexp
   modf
   nextafternexttoward
   (C++11)(C++11)
   copysign
   (C++11)
   Classification/Comparison
   fpclassify
   (C++11)
   isfinite
   (C++11)
   isinf
   (C++11)
   isnan
   (C++11)
   isnormal
   (C++11)
   signbit
   (C++11)
   isgreater
   (C++11)
   isgreaterequal
   (C++11)
   isless
   (C++11)
   islessequal
   (C++11)
   islessgreater
   (C++11)
   isunordered
   (C++11)
   Macro constants
   HUGE_VALFHUGE_VALHUGE_VALL
   (C++11)(C++11)
   INFINITY
   (C++11)
   NAN
   (C++11)
   math_errhandlingMATH_ERRNOMATH_ERREXCEPT
   (C++11)
   FP_NORMALFP_SUBNORMALFP_ZEROFP_INFINITEFP_NAN
   (C++11)(C++11)(C++11)(C++11)(C++11)

   Defined in header <cmath>
   (1)
   bool isnan( float num );

   bool isnan( double num );
   bool isnan( long double num );
   (since C++11)
   (until C++23)
   constexpr bool isnan( /* floating-point-type */ num );
   (since C++23)
   Additional overloads
   Defined in header <cmath>
   template< class Integer >
   bool isnan( Integer num );
   (A) (since C++11)
   (constexpr since C++23)
   1) Determines if the given floating point number num is a not-a-number
   (NaN) value. The library provides overloads for all cv-unqualified
   floating-point types as the type of the parameter num.(since C++23)
   A) Additional overloads are provided for all integer types, which are
   treated as double.

Parameters

   num - floating-point or integer value

Return value

   true if num is a NaN, false otherwise.

Notes

   There are many different NaN values with different sign bits and
   payloads, see std::nan and std::numeric_limits::quiet_NaN.

   NaN values never compare equal to themselves or to other NaN values.
   Copying a NaN is not required, by IEEE-754, to preserve its bit
   representation (sign and payload), though most implementation do.

   Another way to test if a floating-point value is NaN is to compare it
   with itself: bool is_nan(double x) { return x != x; }.

   GCC and Clang support a -ffinite-math option (additionally implied by
   -ffast-math), which allows the respective compiler to assume the
   nonexistence of special IEEE-754 floating point values such as NaN,
   infinity, or negative zero. In other words, std::isnan is assumed to
   always return false under this option.

   The additional overloads are not required to be provided exactly as
   (A). They only need to be sufficient to ensure that for their argument
   num of integer type, std::isnan(num) has the same effect as
   std::isnan(static_cast<double>(num)).

Example

   Run this code
#include <cfloat>
#include <cmath>
#include <iostream>

int main()
{
    std::cout << std::boolalpha
              << "isnan(NaN) = " << std::isnan(NAN) << '\n'
              << "isnan(Inf) = " << std::isnan(INFINITY) << '\n'
              << "isnan(0.0) = " << std::isnan(0.0) << '\n'
              << "isnan(DBL_MIN/2.0) = " << std::isnan(DBL_MIN / 2.0) << '\n'
              << "isnan(0.0 / 0.0)   = " << std::isnan(0.0 / 0.0) << '\n'
              << "isnan(Inf - Inf)   = " << std::isnan(INFINITY - INFINITY) << '
\n';
}

   Output:
isnan(NaN) = true
isnan(Inf) = false
isnan(0.0) = false
isnan(DBL_MIN/2.0) = false
isnan(0.0 / 0.0)   = true
isnan(Inf - Inf)   = true

See also

   nannanfnanl
   (C++11)(C++11)(C++11)
   not-a-number (NaN)
   (function)
   fpclassify
   (C++11)
   categorizes the given floating-point value
   (function)
   isfinite
   (C++11)
   checks if the given number has finite value
   (function)
   isinf
   (C++11)
   checks if the given number is infinite
   (function)
   isnormal
   (C++11)
   checks if the given number is normal
   (function)
   isunordered
   (C++11)
   checks if two floating-point values are unordered
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/numeric/math/isn
   an&oldid=156452"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 8 August 2023, at 20:39.
     * This page has been accessed 371,217 times.
