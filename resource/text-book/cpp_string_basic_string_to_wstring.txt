std::to_wstring

   From cppreference.com
   < cpp | string | basic string

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string
   Member functions
   basic_string::basic_string
   basic_string::~basic_string
   basic_string::operator=
   basic_string::assign
   basic_string::assign_range
   (C++23)
   basic_string::get_allocator
   Element access
   basic_string::at
   basic_string::operator[]
   basic_string::front
   (DR*)
   basic_string::back
   (DR*)
   basic_string::data
   basic_string::c_str
   basic_string::operator
    basic_string_view
   (C++17)
   Iterators
   basic_string::beginbasic_string::cbegin
   (C++11)
   basic_string::endbasic_string::cend
   (C++11)
   basic_string::rbeginbasic_string::crbegin
   (C++11)
   basic_string::rendbasic_string::crend
   (C++11)
   Capacity
   basic_string::empty
   basic_string::sizebasic_string::length
   basic_string::max_size
   basic_string::reserve
   basic_string::capacity
   basic_string::shrink_to_fit
   (DR*)
   Modifiers
   basic_string::clear
   basic_string::insert
   basic_string::insert_range
   (C++23)
   basic_string::erase
   basic_string::push_back
   basic_string::pop_back
   (DR*)
   basic_string::append
   basic_string::append_range
   (C++23)
   basic_string::operator+=
   basic_string::replace
   basic_string::replace_with_range
   (C++23)
   basic_string::copy
   basic_string::resize
   basic_string::resize_and_overwrite
   (C++23)
   basic_string::swap
   Search
   basic_string::find
   basic_string::rfind
   basic_string::find_first_of
   basic_string::find_first_not_of
   basic_string::find_last_of
   basic_string::find_last_not_of
   Operations
   basic_string::compare
   basic_string::starts_with
   (C++20)
   basic_string::ends_with
   (C++20)
   basic_string::contains
   (C++23)
   basic_string::substr
   Constants
   basic_string::npos
   Non-member functions
   operator+
   swap(std::basic_string)
   erase(std::basic_string)erase_if(std::basic_string)
   (C++20)(C++20)
   I/O
   operator<<operator>>
   getline
   Comparison
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   Numeric conversions
   stoistolstoll
   (C++11)(C++11)(C++11)
   stoulstoull
   (C++11)(C++11)
   stofstodstold
   (C++11)(C++11)(C++11)
   to_string
   (C++11)
   to_wstring
   (C++11)
   Literals
   operator""s
   (C++14)
   Helper classes
   hash<std::basic_string>
   (C++11)
   Deduction guides (C++17)

   Defined in header <string>
   std::wstring to_wstring( int value );
   (1)                                                 (since C++11)
   std::wstring to_wstring( long value );
   (2)                                                 (since C++11)
   std::wstring to_wstring( long long value );
   (3)                                                 (since C++11)
   std::wstring to_wstring( unsigned value );
   (4)                                                 (since C++11)
   std::wstring to_wstring( unsigned long value );
   (5)                                                 (since C++11)
   std::wstring to_wstring( unsigned long long value );
   (6)                                                 (since C++11)
   std::wstring to_wstring( float value );
   (7)                                                 (since C++11)
   std::wstring to_wstring( double value );
   (8)                                                 (since C++11)
   std::wstring to_wstring( long double value );
   (9)                                                 (since C++11)

   Converts a numeric value to std::wstring.

   Let buf be an internal to the conversion functions buffer, sufficiently
   large to contain the result of conversion.
   1) Converts a signed decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%d", value).
   2) Converts a signed decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%ld", value).
   3) Converts a signed decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%lld", value).
   4) Converts an unsigned decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%u", value).
   5) Converts an unsigned decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%lu", value).
   6) Converts an unsigned decimal integer to a wide string as if by
   std::swprintf(buf, sz, L"%llu", value).
   7,8) Converts a floating point value to a wide string as if by
   std::swprintf(buf, sz, L"%f", value).
   9) Converts a floating point value to a wide string as if by
   std::swprintf(buf, sz, L"%Lf", value).
   (until C++26)
   1-9) Converts a numeric value to a wide string as if by
   std::format(L"{}", value).
   (since C++26)

Parameters

   value - a numeric value to convert

Return value

   A wide string holding the converted value.

Exceptions

   May throw std::bad_alloc from the std::wstring constructor.

Example

   Run this code
#include <iostream>
#include <string>

int main()
{
    for (const double f : {23.43, 1e-9, 1e40, 1e-40, 123456789.0})
        std::wcout << "std::wcout: " << f << '\n'
                   << "to_wstring: " << std::to_wstring(f) << "\n\n";
}

   Output:
std::wcout: 23.43
to_wstring: 23.430000

std::wcout: 1e-09
to_wstring: 0.000000

std::wcout: 1e+40
to_wstring: 10000000000000000303786028427003666890752.000000

std::wcout: 1e-40
to_wstring: 0.000000

std::wcout: 1.23457e+08
to_wstring: 123456789.000000

See also

   to_string
   (C++11)
   converts an integral or floating-point value to string
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing/to_wstring&oldid=153702"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 June 2023, at 07:46.
     * This page has been accessed 161,310 times.
