std::ctype<CharT>::scan_not, std::ctype<CharT>::do_scan_not

   From cppreference.com
   < cpp | locale | ctype

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::ctype
   Member functions
   ctype::ctype
   ctype::~ctype
   ctype::isctype::do_is
   ctype::scan_isctype::do_scan_is
   ctype::scan_notctype::do_scan_not
   ctype::toupperctype::do_toupper
   ctype::tolowerctype::do_tolower
   ctype::widenctype::do_widen
   ctype::narrowctype::do_narrow
   Member functions of ctype<char>
   ctype<char>::ctype
   ctype<char>::~ctype
   ctype<char>::table
   ctype<char>::classic_table
   ctype<char>::is
   ctype<char>::scan_is
   ctype<char>::scan_not

   Defined in header <locale>
   public:
   const CharT* scan_not( mask m, const CharT* beg, const CharT* end )
   const;
   (1)
   protected:
   virtual const CharT* do_scan_not( mask m, const CharT* beg, const
   CharT* end ) const;
   (2)
   1) Public member function, calls the protected virtual member function
   do_scan_not of the most derived class.
   2) Locates the first character in the character array [beg, end) that
   does not satisfy the classification mask m, that is, the first
   character c such that is(m, c) would return false.

Parameters

   m - mask to search for
   beg - pointer to the first character in an array of characters to
   search
   end - one past the end pointer for the array of characters to search

Return value

   Pointer to the first character in [beg, end) that doesn't satisfy the
   mask, or end if no such character was found.

Example

   Run this code
#include <clocale>
#include <iostream>
#include <iterator>
#include <locale>

int main()
{
    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout.imbue(std::locale("en_US.utf8"));
    auto& f = std::use_facet<std::ctype<wchar_t>>(std::wcout.getloc());

    // skip leading whitespace
    wchar_t s1[] = L"      \t\t\n  Koshka";
    const wchar_t* p1 = f.scan_not(std::ctype_base::space, std::begin(s1), std::
end(s1));
    std::wcout << '\'' << p1 << "'\n";

    // skip leading digits
    wchar_t s2[] = L"123456789NePuNePu";
    const wchar_t* p2 = f.scan_not(std::ctype_base::digit, std::begin(s2), std::
end(s2));
    std::wcout << '\'' << p2 << "'\n";
}

   Output:
'Koshka'
'NePuNePu'

See also

   scan_not
   locates the first character in a sequence that fails given
   classification, using the classification table
   (public member function of std::ctype<char>)
   do_scan_is
   [virtual]
   locates the first character in a sequence that conforms to given
   classification
   (virtual protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/ctype/sca
   n_not&oldid=169286"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 January 2024, at 00:47.
     * This page has been accessed 13,468 times.
