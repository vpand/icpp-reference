deduction guides for std::multiset

   From cppreference.com
   < cpp | container | multiset


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::multiset
   Member functions
   multiset::multiset
   multiset::~multiset
   multiset::operator=
   multiset::get_allocator
   Iterators
   multiset::beginmultiset::cbegin
   (C++11)
   multiset::endmultiset::cend
   (C++11)
   multiset::rbeginmultiset::crbegin
   (C++11)
   multiset::rendmultiset::crend
   (C++11)
   Capacity
   multiset::size
   multiset::max_size
   multiset::empty
   Modifiers
   multiset::clear
   multiset::erase
   multiset::swap
   multiset::extract
   (C++17)
   multiset::merge
   (C++17)
   multiset::insert
   multiset::insert_range
   (C++23)
   multiset::emplace
   (C++11)
   multiset::emplace_hint
   (C++11)
   Lookup
   multiset::count
   multiset::find
   multiset::contains
   (C++20)
   multiset::equal_range
   multiset::lower_bound
   multiset::upper_bound
   Observers
   multiset::key_comp
   multiset::value_comp
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   std::swap(std::multiset)
   erase_if(std::multiset)
   (C++20)
   Deduction guides(C++17)

   Defined in header <set>
   template<

       class InputIt,
       class Comp = std::less<typename
   std::iterator_traits<InputIt>::value_type>,
       class Alloc = std::allocator<typename
   std::iterator_traits<InputIt>::value_type>>
   multiset( InputIt, InputIt, Comp = Comp(), Alloc = Alloc() )
       -> multiset<typename std::iterator_traits<InputIt>::value_type,
   Comp, Alloc>;
   (1)                                             (since C++17)
   template<

       class Key, class Comp = std::less<Key>,
       class Alloc = std::allocator<Key> >
   multiset( std::initializer_list<Key>, Comp = Comp(), Alloc = Alloc() )
       -> multiset<Key, Comp, Alloc>;
   (2)                                             (since C++17)
   template< class InputIt, class Alloc >

   multiset( InputIt, InputIt, Alloc )
       -> multiset<typename std::iterator_traits<InputIt>::value_type,
                   std::less<typename
   std::iterator_traits<InputIt>::value_type>, Alloc>;
   (3)                                             (since C++17)
   template< class Key, class Alloc >

   multiset( std::initializer_list<Key>, Alloc )
       -> multiset<Key, std::less<Key>, Alloc>;
   (4)                                             (since C++17)
   template< ranges::input_range R, class Compare =
   less<ranges::range_value_t<R>>,

             class Alloc = std::allocator<ranges::range_value_t<R>> >
   multiset( std::from_range_t, R&&, Compare = Compare(), Alloc = Alloc()
   )
       -> multiset<ranges::range_value_t<R>, Compare, Alloc>;
   (5)                                             (since C++23)
   template< ranges::input_range R, class Alloc >

   multiset( std::from_range_t, R&&, Alloc )
       -> multiset<ranges::range_value_t<R>,
   std::less<ranges::range_value_t<R>>, Alloc>;
   (6)                                             (since C++23)
   1-4) These deduction guides are provided for multiset to allow
   deduction from an iterator range (overloads (1,3)) and
   std::initializer_list (overloads (2,4)).
   5,6) These deduction guides are provided for multiset to allow
   deduction from a std::from_range_t tag and an input_range.

   These overloads participate in overload resolution only if InputIt
   satisfies LegacyInputIterator, Alloc satisfies Allocator, and Comp does
   not satisfy Allocator.

   Note: the extent to which the library determines that a type does not
   satisfy LegacyInputIterator is unspecified, except that as a minimum
   integral types do not qualify as input iterators. Likewise, the extent
   to which it determines that a type does not satisfy Allocator is
   unspecified, except that as a minimum the member type Alloc::value_type
   must exist and the expression
   std::declval<Alloc&>().allocate(std::size_t{}) must be well-formed when
   treated as an unevaluated operand.

Notes

   Feature-test macro Value Std Feature
   __cpp_lib_containers_ranges 202202L (C++23) Ranges-aware construction
   and insertion; overload (5,6)

Example

   Run this code
#include <set>

int main()
{
    // guide #2 deduces std::multiset<int>
    std::multiset s = {1, 2, 3, 4};

    // guide #1 deduces std::multiset<int>
    std::multiset s2(s.begin(), s.end());
}

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/multis
   et/deduction_guides&oldid=135726"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 November 2021, at 07:59.
     * This page has been accessed 12,022 times.
