std::wcscoll

   From cppreference.com
   < cpp | string | wide

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   Null-terminated wide strings
   Functions
   Character manipulation
   iswalnum
   iswalpha
   iswlower
   iswupper
   iswdigit
   iswxdigit
   iswblank
   (C++11)
   wctype
   iswctype
   iswcntrl
   iswgraph
   iswspace
   iswprint
   iswpunct
   towlower
   towupper
   wctrans
   towctrans
   Conversions to numeric formats
   wcstolwcstoll
   (C++11)
   wcstoulwcstoull
   (C++11)
   wcstofwcstodwcstold
   (C++11)(C++11)
   wcstoimaxwcstouimax
   (C++11)(C++11)
   String manipulation
   wcslen
   wcscpy
   wcsncpy
   wcscat
   wcsncat
   wcscmp
   wcscoll
   wcsncmp
   wcsxfrm
   wcschr
   wcsrchr
   wcspbrk
   wcsspn
   wcscspn
   wcsstr
   wcstok
   Array manipulation
   wmemcpy
   wmemmove
   wmemcmp
   wmemchr
   wmemset

   Defined in header <cwchar>
   int wcscoll( const wchar_t* lhs, const wchar_t* rhs );

   Compares two null-terminated wide strings according to the locale most
   recently installed by std::setlocale, as defined by the LC_COLLATE
   category.

Parameters

   lhs, rhs - pointers to the null-terminated wide strings to compare

Return value

   Negative value if lhs is less than (precedes) rhs.

   0 if lhs is equal to rhs.

   Positive value if lhs is greater than (follows) rhs.

Notes

   Collation order is the dictionary order: the position of the letter in
   the national alphabet (its equivalence class) has higher priority than
   its case or variant. Within an equivalence class, lowercase characters
   collate before their uppercase equivalents and locale-specific order
   may apply to the characters with diacritics. In some locales, groups of
   characters compare as single collation units. For example, "ch" in
   Czech follows "h" and precedes "i", and "dzs" in Hungarian follows "dz"
   and precedes "g".

Example

   Run this code
#include <clocale>
#include <iostream>

void try_compare(const wchar_t* p1, const wchar_t* p2)
{
    if (std::wcscoll(p1, p2) < 0)
        std::wcout << p1 << " before " << p2 << '\n';
    else
        std::wcout << p2 << " before " << p1 << '\n';
}

int main()
{
    std::setlocale(LC_ALL, "en_US.utf8");
    std::wcout << "In the American locale: ";
    try_compare(L"hrnec", L"chrt");

    std::setlocale(LC_COLLATE, "cs_CZ.utf8");
    std::wcout << "In the Czech locale: ";
    try_compare(L"hrnec", L"chrt");

    std::setlocale(LC_COLLATE, "en_US.utf8");
    std::wcout << "In the American locale: ";
    try_compare(L"år", L"ängel");

    std::setlocale(LC_COLLATE, "sv_SE.utf8");
    std::wcout << "In the Swedish locale: ";
    try_compare(L"år", L"ängel");
}

   Output:
In the American locale: chrt before hrnec
In the Czech locale: hrnec before chrt
In the American locale: ängel before år
In the Swedish locale: år before ängel

See also

   strcoll
   compares two strings in accordance to the current locale
   (function)
   do_compare
   [virtual]
   compares two strings using this facet's collation rules
   (virtual protected member function of std::collate<CharT>)
   wcsxfrm
   transform a wide string so that wcscmp would produce the same result as
   wcscoll
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/wide/wcsc
   oll&oldid=153108"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 10 June 2023, at 08:10.
     * This page has been accessed 22,342 times.
