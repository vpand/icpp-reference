std::experimental::find_first_set, std::experimental::find_last_set

   From cppreference.com
   < cpp | experimental | simd

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Extensions for parallelism v2
   Parallel exceptions
   exception_list
   Additional execution policies
   execution::vector_policy
   execution::unsequenced_policy
   Algorithms
   induction
   reductionreduction_plusreduction_minusreduction_multiplies

   reduction_bit_andreduction_bit_orreduction_bit_xorreduction_minreductio
   n_max

   for_loopfor_loop_stridedfor_loop_nfor_loop_n_strided
   execution::no_vec
   execution::ordered_update_t
   Task blocks
   task_block
   task_cancelled_exception
   define_task_blockdefine_task_block_restore_thread
   Data-parallel vectors

   SIMD library
   Main classes
   simd
   simd_mask
   ABI tags
   simd_abi::scalar
   simd_abi::fixed_size

   simd_abi::native
   simd_abi::compatible

   simd_abi::max_fixed_size
   simd_abi::deduce
   Alignment tags
   element_aligned_tagelement_aligned
   vector_aligned_tagvector_aligned
   overaligned_tagoveraligned
   Where expression
   where
   where_expression
   const_where_expression
   Casts
   simd_caststatic_simd_cast
   to_fixed_sizeto_compatibleto_native
   splitsplit_by
   concat
   Algorithms
   min
   max
   minmax
   clamp
   Reduction
   reducehminhmax
   Mask reduction
   all_ofany_ofnone_ofsome_of
   popcount
   find_first_setfind_last_set
   Traits
   is_simdis_simd_mask
   is_abi_tag
   is_simd_flag_type
   simd_size
   memory_alignment
   rebind_simdresize_simd
   Math functions

   Defined in header <experimental/simd>
   template< class T, class Abi >
   int find_first_set( const simd_mask<T, Abi>& k );
   (1)                                  (parallelism TS v2)
   template< class T, class Abi >
   int find_last_set( const simd_mask<T, Abi>& k );
   (2)                                  (parallelism TS v2)
   1) Returns the lowest index i where k[i] is true.
   2) Returns the greatest index i where k[i] is true.

   The behavior is undefined if any_of(k) is false.

Parameters

   k - the simd_mask to apply the reduction to

Return value

   An int in the range [0, simd_size_v<T, Abi>).

Example

   Run this code
#include <cstddef>
#include <experimental/simd>
#include <iostream>

namespace stdx = std::experimental;

template<typename Abi>
int find(stdx::simd_mask<Abi> const& v)
{
    if (stdx::any_of(v))
        return find_first_set(v);
    return -1;
}

int main()
{
    stdx::simd_mask<short> a{0};
    a[2] = a[a.size() - 2] = 1;

    for (std::size_t i = 0; i < a.size(); ++i)
        std::cout << a[i] << ' ';
    std::cout << '\n';

    std::cout << "find_first_set: " << stdx::find_first_set(a) << '\n';
    std::cout << "find_last_set: " << stdx::find_last_set(a) << '\n';
    std::cout << "find: " << find(a) << '\n';
    a[2] = 0;
    std::cout << "find: " << find(a) << '\n';
    a[a.size() - 2] = 0;
    std::cout << "find: " << find(a) << '\n';
}

   Possible output:
0 0 1 0 0 0 1 0
find_first_set: 2
find_last_set: 6
find: 2
find: 6
find: -1

   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/sim
   d/find_first_set&oldid=159769"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 28 September 2023, at 07:47.
     * This page has been accessed 2,785 times.
