std::freopen

   From cppreference.com
   < cpp | io | c

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Input/output library
   I/O manipulators
   Print functions (C++23)
   C-style I/O
   Buffers
   basic_streambuf
   basic_filebuf
   basic_stringbuf
   basic_spanbuf
   (C++23)
   strstreambuf
   (C++98/26*)
   basic_syncbuf
   (C++20)
   Streams
   Abstractions
   ios_base
   basic_ios
   basic_istream
   basic_ostream
   basic_iostream
   File I/O
   basic_ifstream
   basic_ofstream
   basic_fstream
   String I/O
   basic_istringstream
   basic_ostringstream
   basic_stringstream
   Array I/O
   basic_ispanstream
   (C++23)
   basic_ospanstream
   (C++23)
   basic_spanstream
   (C++23)
   istrstream
   (C++98/26*)
   ostrstream
   (C++98/26*)
   strstream
   (C++98/26*)
   Synchronized Output
   basic_osyncstream
   (C++20)
   Types
   streamoff
   streamsize
   fpos
   Error category interface
   iostream_category
   (C++11)
   io_errc
   (C++11)

   C-style I/O
   Types and objects
   FILE
   fpos_t
   stdinstdoutstderr
   Functions
   File access
   fopen
   freopen
   fclose
   fflush
   fwide
   setbuf
   setvbuf
   Direct input/output
   fread
   fwrite
   Unformatted input/output
   fgetcgetc
   fgets
   fputcputc
   fputs
   getchar
   gets
   (until C++14)
   putchar
   puts
   ungetc
   fgetwcgetwc
   fgetws
   fputwcputwc
   fputws
   getwchar
   putwchar
   ungetwc
   Formatted input
   scanffscanfsscanf
   vscanfvfscanfvsscanf
   (C++11)(C++11)(C++11)
   wscanffwscanfswscanf
   vwscanfvfwscanfvswscanf
   (C++11)(C++11)(C++11)
   Formatted output
   printffprintfsprintfsnprintf
   (C++11)
   vprintfvfprintfvsprintfvsnprintf
   (C++11)
   wprintffwprintfswprintf
   vwprintfvfwprintfvswprintf
   File positioning
   ftell
   fgetpos
   fseek
   fsetpos
   rewind
   Error handling
   clearerr
   feof
   ferror
   perror
   Operations on files
   remove
   rename
   tmpfile
   tmpnam

   Defined in header <cstdio>
   std::FILE* freopen( const char* filename, const char* mode, std::FILE*
   stream );

   First, attempts to close the file associated with stream, ignoring any
   errors. Then, if filename is not null, attempts to open the file
   specified by filename using mode as if by std::fopen, and associates
   that file with the file stream pointed to by stream. If filename is a
   null pointer, then the function attempts to reopen the file that is
   already associated with stream (it is implementation defined which mode
   changes are allowed in this case).

Parameters

   filename - file name to associate the file stream to
   mode - null-terminated character string determining new file access
   mode
   stream - the file stream to modify

File access flags

   File access
   mode string Meaning Explanation Action if file
   already exists Action if file
   does not exist
   "r" read Open a file for reading read from start return NULL and set
   error
   "w" write Create a file for writing destroy contents create new
   "a" append Append to a file write to end create new
   "r+" read extended Open a file for read/write read from start return
   NULL and set error
   "w+" write extended Create a file for read/write destroy contents
   create new
   "a+" append extended Open a file for read/write write to end create new
   File access mode flag "b" can optionally be specified to open a file in
   binary mode. This flag has no effect on POSIX systems, but on Windows,
   for example, it disables special handling of '\n' and '\x1A'.
   On the append file access modes, data is written to the end of the file
   regardless of the current position of the file position indicator.
   File access mode flag "x" can optionally be appended to "w" or "w+"
   specifiers. This flag forces the function to fail if the file exists,
   instead of overwriting it. (C++17)
   The behavior is undefined if the mode is not one of the strings listed
   above. Some implementations define additional supported modes (e.g.
   Windows).

Return value

   stream on success, a null pointer on failure.

Notes

   std::freopen is the only way to change the narrow/wide orientation of a
   stream once it has been established by an I/O operation or by
   std::fwide.

   Microsoft CRT version of std::freopen does not support any mode changes
   when filename is a null pointer and treats this as an error (see
   documentation). A possible workaround is the non-standard function
   _setmode().

Example

   The following code redirects stdout to a file.
   Run this code
#include <cstdio>

int main()
{
    std::printf("stdout is printed to console\n");
    if (std::freopen("redir.txt", "w", stdout))
    {
        std::printf("stdout is redirected to a file\n"); // this is written to r
edir.txt
        std::fclose(stdout);
    }
}

   Output:
stdout is printed to console

See also

   fopen
   opens a file
   (function)
   fclose
   closes a file
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/io/c/freopen&old
   id=158701"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 10 September 2023, at 11:19.
     * This page has been accessed 96,640 times.
