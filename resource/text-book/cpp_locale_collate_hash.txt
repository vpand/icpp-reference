std::collate<CharT>::hash, std::collate<CharT>::do_hash

   From cppreference.com
   < cpp | locale | collate

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Localization library
   Locales and facets
   Locales
   has_facet
   use_facet
   locale
   Facet category base classes
   ctype_base
   codecvt_base
   messages_base

   time_base
   money_base
   ctype facets
   ctype
   ctype<char>
   ctype_byname
   codecvt
   codecvt_byname
   numeric facets
   num_get
   num_put
   numpunct
   numpunct_byname
   collate facets
   collate
   collate_byname
   time facets
   time_get
   time_put
   time_get_byname
   time_put_byname
   monetary facets
   money_get
   money_put
   moneypunct
   moneypunct_byname

   messages facets
   messages
   messages_byname
   Character classification and conversion
   Character classification
   isspace
   isblank
   (C++11)
   iscntrl
   isupper
   islower
   isalpha
   ispunct
   isdigit
   isxdigit
   isalnum
   isprint
   isgraph
   Character conversions
   toupper

   tolower
   String and stream conversions
   wstring_convert
   (C++11/17/26*)
   wbuffer_convert
   (C++11/17/26*)
   Text encoding identifications
   text_encoding
   (C++26)
   Unicode conversion facets
   codecvt_utf8
   (C++11/17/26*)
   codecvt_utf16
   (C++11/17/26*)
   codecvt_utf8_utf16
   (C++11/17/26*)
   codecvt_mode
   (C++11/17/26*)
   C library locales
   LC_ALLLC_COLLATELC_CTYPELC_MONETARYLC_NUMERICLC_TIME

   setlocale
   localeconv
   lconv

   std::collate
   Member functions
   collate::collate
   collate::~collate
   collate::comparecollate::do_compare
   collate::transformcollate::do_transform
   collate::hashcollate::do_hash

   Defined in header <locale>
   public:
   long hash( const CharT* beg, const CharT* end ) const;
   (1)
   protected:
   virtual long do_hash( const CharT* beg, const CharT* end ) const;
   (2)
   1) Public member function, calls the protected virtual member function
   do_hash of the most derived class.
   2) Converts the character sequence [beg, end) to an integer value that
   is equal to the hash obtained for all strings that collate equivalent
   in this locale (compare() returns 0). For two strings that do not
   collate equivalent, the probability that their hashes are equal should
   be very small, approaching 1.0 / std::numeric_limits<unsigned
   long>::max().

Parameters

   beg - pointer to the first character in the sequence to hash
   end - one past the end pointer for the sequence to hash

Return value

   The hash value that respects collation order.

Note

   The system-supplied locales normally do not collate two strings as
   equivalent (compare() does not return 0) if basic_string::operator==
   returns false, but a user-installed std::collate facet may provide
   different collation rules, for example, it may treat strings as
   equivalent if they have the same Unicode normalized form.

Example

   Demonstrates a locale-aware unordered container.
   Run this code
#include <iostream>
#include <locale>
#include <string>
#include <unordered_set>

struct CollateHash
{
    template<typename CharT>
    long operator()(const std::basic_string<CharT>& s) const
    {
        return std::use_facet<std::collate<CharT>>(std::locale()).hash(
                   &s[0], &s[0] + s.size()
               );
    }
};
struct CollateEq
{
    template<typename CharT>
    bool operator()(const std::basic_string<CharT>& s1,
                    const std::basic_string<CharT>& s2) const
    {
        return std::use_facet<std::collate<CharT>>(std::locale()).compare(
                     &s1[0], &s1[0] + s1.size(),
                     &s2[0], &s2[0] + s2.size()
               ) == 0;
    }
};

int main()
{
    std::locale::global(std::locale("en_US.utf8"));
    std::wcout.imbue(std::locale());

    std::unordered_set<std::wstring, CollateHash, CollateEq> s2 = {L"Foo", L"Bar
"};
    for (auto& str : s2)
        std::wcout << str << ' ';
    std::cout << '\n';
}

   Possible output:
Bar Foo

See also

   std::hash<std::basic_string>
   (C++11)
   hash support for strings
   (class template specialization)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/locale/collate/h
   ash&oldid=160060"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 3 October 2023, at 07:55.
     * This page has been accessed 16,120 times.
