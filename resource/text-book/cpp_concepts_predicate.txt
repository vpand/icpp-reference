std::predicate

   From cppreference.com
   < cpp | concepts

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Concepts library
   Core language concepts
   same_as
   derived_from
   convertible_to
   common_reference_with

   common_with
   integral
   signed_integral
   unsigned_integral
   floating_point
   swappableswappable_with
   destructible
   constructible_from
   default_initializable
   move_constructible
   copy_constructible
   assignable_from
   Comparison concepts
   equality_comparableequality_comparable_with
   totally_orderedtotally_ordered_with
   Object concepts
   movable
   copyable
   semiregular
   regular
   Callable concepts
   invocableregular_invocable
   predicate
   relation
   equivalence_relation
   strict_weak_order
   Exposition-only concepts
   boolean-testable

   Defined in header <concepts>
   template< class F, class... Args >

   concept predicate =
       std::regular_invocable<F, Args...> &&
       boolean-testable<std::invoke_result_t<F, Args...>>;
                                     (since C++20)

   The concept std::predicate<F, Args...> specifies that F is a predicate
   that accepts arguments whose types and value categories are encoded by
   Args..., i.e., it can be invoked with these arguments to produce a
   boolean-testable result.

   Note that regular_invocable requires the invocation to not modify
   either the callable object or the arguments and be equality-preserving.

Equality preservation

   Expressions declared in requires expressions of the standard library
   concepts are required to be equality-preserving (except where stated
   otherwise).
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/concepts/predica
   te&oldid=161762"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 30 October 2023, at 00:58.
     * This page has been accessed 60,409 times.
