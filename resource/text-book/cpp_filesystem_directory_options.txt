std::filesystem::directory_options

   From cppreference.com
   < cpp | filesystem

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Filesystem library
   Classes
   filesystem::path
   filesystem::filesystem_error
   filesystem::directory_entry
   filesystem::directory_iterator
   filesystem::recursive_directory_iterator

   filesystem::file_status
   filesystem::space_info
   filesystem::file_type
   filesystem::perms
   filesystem::perm_options
   filesystem::copy_options
   filesystem::directory_options
   filesystem::file_time_type
   Functions
   filesystem::absolute
   filesystem::canonicalfilesystem::weakly_canonical
   filesystem::relativefilesystem::proximate
   filesystem::copy
   filesystem::copy_file
   filesystem::copy_symlink
   filesystem::create_directory
   filesystem::create_directories
   filesystem::create_hard_link
   filesystem::create_symlink
   filesystem::create_directory_symlink
   filesystem::current_path
   filesystem::exists
   filesystem::equivalent
   filesystem::file_size
   filesystem::hard_link_count
   filesystem::last_write_time
   filesystem::permissions
   filesystem::read_symlink
   filesystem::remove
   filesystem::remove_all
   filesystem::rename
   filesystem::resize_file
   filesystem::space
   filesystem::status
   filesystem::symlink_status
   filesystem::temp_directory_path
   File types
   filesystem::is_block_file
   filesystem::is_character_file
   filesystem::is_directory
   filesystem::is_empty
   filesystem::status_known
   filesystem::is_fifo
   filesystem::is_other
   filesystem::is_regular_file
   filesystem::is_socket
   filesystem::is_symlink

   Defined in header <filesystem>
   enum class directory_options {

       none = /* unspecified */,
       follow_directory_symlink = /* unspecified */,
       skip_permission_denied = /* unspecified */
   };
                                 (since C++17)

   This type represents available options that control the behavior of the
   directory_iterator and recursive_directory_iterator.

   directory_options satisfies the requirements of BitmaskType (which
   means the bitwise operators operator&, operator|, operator^, operator~,
   operator&=, operator|=, and operator^= are defined for this type). none
   represents the empty bitmask; every other enumerator represents a
   distinct bitmask element.

Member constants

   Member constant Meaning
   none (Default) Skip directory symlinks, permission denied is error.
   follow_directory_symlink Follow rather than skip directory symlinks.
   skip_permission_denied Skip directories that would otherwise result in
   permission denied errors.

Example

   This section is incomplete
   Reason: no example

See also

   (constructor)
   constructs a directory iterator
   (public member function of std::filesystem::directory_iterator)
   (constructor)
   constructs a recursive directory iterator
   (public member function of
   std::filesystem::recursive_directory_iterator)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/filesystem/direc
   tory_options&oldid=142455"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 24 August 2022, at 16:19.
     * This page has been accessed 76,257 times.
