std::error_code

   From cppreference.com
   < cpp | error

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Utilities library
   Language support
   Type support (basic types, RTTI)
   Library feature-test macros (C++20)
   Dynamic memory management
   Program utilities
   Coroutine support (C++20)
   Variadic functions
   is_constant_evaluated
   (C++20)
   is_within_lifetime
   (C++26)
   initializer_list
   (C++11)
   source_location
   (C++20)
   Debugging support
   is_debugger_present
   (C++26)
   breakpoint_if_debugging
   (C++26)
   breakpoint
   (C++26)
   Three-way comparison
   three_way_comparablethree_way_comparable_with
   (C++20)(C++20)
   strong_ordering
   (C++20)
   weak_ordering
   (C++20)
   partial_ordering
   (C++20)
   common_comparison_category
   (C++20)
   compare_three_way_result
   (C++20)
   compare_three_way
   (C++20)
   strong_order
   (C++20)
   weak_order
   (C++20)
   partial_order
   (C++20)
   compare_strong_order_fallback
   (C++20)
   compare_weak_order_fallback
   (C++20)
   compare_partial_order_fallback
   (C++20)
   is_eqis_ltis_lteq
   (C++20)(C++20)(C++20)
   is_neqis_gtis_gteq
   (C++20)(C++20)(C++20)
   General utilities
   Date and time
   Function objects
   Formatting library (C++20)
   bitset
   hash
   (C++11)
   Relational operators (deprecated in C++20)
   rel_ops::operator!=rel_ops::operator>

   rel_ops::operator<=rel_ops::operator>=
   Integer comparison functions
   cmp_equalcmp_lesscmp_less_than
   (C++20)(C++20)(C++20)
   cmp_not_equalcmp_greatercmp_greater_than
   (C++20)(C++20)(C++20)
   in_range
   (C++20)
   Swap and type operations
   swap
   ranges::swap
   (C++20)
   exchange
   (C++14)
   declval
   (C++11)
   to_underlying
   (C++23)
   forward
   (C++11)
   forward_like
   (C++23)
   move
   (C++11)
   move_if_noexcept
   (C++11)
   as_const
   (C++17)
   Common vocabulary types
   pair
   tuple
   (C++11)
   optional
   (C++17)
   any
   (C++17)
   variant
   (C++17)
   tuple_size
   (C++11)
   tuple_element
   (C++11)
   apply
   (C++17)
   make_from_tuple
   (C++17)
   expected
   (C++23)
   Elementary string conversions
   to_chars
   (C++17)
   from_chars
   (C++17)
   chars_format
   (C++17)
   to_chars_result
   (C++17)
   from_chars_result
   (C++17)

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   std::error_code
   Member functions
   error_code::error_code
   error_code::operator=
   error_code::assign
   Modifiers
   error_code::clear
   Observers
   error_code::value
   error_code::category
   error_code::default_error_condition
   error_code::message
   error_code::operator bool
   Non-member functions
   operator==operator!=operator<operator<=>
   (until C++20)(until C++20)(C++20)
   operator<<
   Helper classes
   is_error_code_enum
   hash<std::error_code>

   Defined in header <system_error>
   class error_code;
                                   (since C++11)

   std::error_code represents a platform-dependent error code value. Each
   std::error_code object holds an error code value originating from the
   operating system or some low-level interface and a pointer to an object
   of type std::error_category, which corresponds to the said interface.
   The error code values are not required to be unique across different
   error categories.

Member functions

   (constructor)
   constructs an error code
   (public member function)
   operator=
   assigns another error code
   (public member function)
   assign
   assigns another error code
   (public member function)

Modifiers

   clear
   sets the error_code to value 0 in system_category
   (public member function)

Observers

   value
   obtains the value of the error_code
   (public member function)
   category
   obtains the error_category for this error_code
   (public member function)
   default_error_condition
   obtains the error_condition for this error_code
   (public member function)
   message
   obtains the explanatory string for this error_code
   (public member function)
   operator bool
   checks if the value is non-zero
   (public member function)

Non-member functions

   operator==operator!=operator<operator<=>
   (removed in C++20)(removed in C++20)(C++20)
   compares two error_codes
   (function)
   operator<<
   outputs the value and the category name to an output stream
   (function)

Helper classes

   is_error_code_enum
   (C++11)
   identifies a class as an error_code enumeration
   (class template)
   std::hash<std::error_code>
   (C++11)
   hash support for std::error_code
   (class template specialization)

See also

   error_condition
   (C++11)
   holds a portable error code
   (class)
   error_category
   (C++11)
   base class for error categories
   (class)
   make_error_code(std::errc)
   (C++11)
   creates error code value for errc enum e
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/error/error_code
   &oldid=163544"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 24 November 2023, at 08:30.
     * This page has been accessed 522,592 times.
