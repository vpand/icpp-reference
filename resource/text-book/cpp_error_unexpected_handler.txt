std::unexpected_handler

   From cppreference.com
   < cpp | error

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   Defined in header <exception>
   typedef void (*unexpected_handler)();
   (deprecated in C++11)
   (removed in C++17)

   std::unexpected_handler is the function pointer type (pointer to
   function that takes no arguments and returns void), which is installed
   and queried by the functions std::set_unexpected and
   std::get_unexpected and called by std::unexpected.

   The C++ implementation provides a default std::unexpected_handler
   function, which calls std::terminate(). If the null pointer value is
   installed (by means of std::set_unexpected), the implementation may
   restore the default handler instead.

   A user-defined std::unexpected_handler is expected to either terminate
   the program or throw an exception. If it throws an exception, one of
   the following three situations may be encountered:

   1) the exception thrown by std::unexpected_handler satisfies the
   dynamic exception specification that was violated earlier. The new
   exception is allowed to escape the function and stack unwinding
   continues.

   2) the exception thrown by std::unexpected_handler still violates the
   exception specification:

   2a) however, the exception specification allows std::bad_exception: the
   thrown exception object is destroyed, and std::bad_exception is
   constructed by the C++ runtime and thrown instead.

   2b) the exception specification does not allow std::bad_exception:
   std::terminate() is called.

See also

   unexpected
   (removed in C++17)
   function called when dynamic exception specification is violated
   (function)
   set_unexpected
   (removed in C++17)
   changes the function to be called by std::unexpected
   (function)
   get_unexpected
   (C++11)(removed in C++17)
   obtains the current unexpected_handler
   (function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/error/unexpected
   _handler&oldid=94438"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 14 July 2017, at 21:30.
     * This page has been accessed 43,250 times.
