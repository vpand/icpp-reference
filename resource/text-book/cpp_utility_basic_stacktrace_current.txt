std::basic_stacktrace<Allocator>::current

   From cppreference.com
   < cpp | utility | basic stacktrace

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Diagnostics library
   Exception handling
   exception
   uncaught_exceptionuncaught_exceptions
   (until C++20*)(C++17)
   exception_ptr
   (C++11)
   make_exception_ptr
   (C++11)
   current_exception
   (C++11)
   rethrow_exception
   (C++11)
   nested_exception
   (C++11)
   throw_with_nested
   (C++11)
   rethrow_if_nested
   (C++11)
   Exception handling failures
   terminate
   terminate_handler
   get_terminate
   (C++11)
   set_terminate
   bad_exception
   unexpected
   (until C++17*)
   unexpected_handler
   (until C++17*)
   get_unexpected
   (C++11)(until C++17*)
   set_unexpected
   (until C++17*)
   Error codes
   Error codes
   errno
   Exception categories
   logic_error
   invalid_argument
   domain_error
   length_error
   out_of_range
   runtime_error
   range_error
   overflow_error
   underflow_error
   tx_exception
   (TM TS)
   System error support
   error_category
   (C++11)
   generic_category
   (C++11)
   system_category
   (C++11)
   error_condition
   (C++11)
   errc
   (C++11)
   error_code
   (C++11)
   system_error
   (C++11)
   Assertions
   assert
   Stacktrace
   stacktrace_entry
   (C++23)
   basic_stacktrace
   (C++23)

   std::basic_stacktrace
   Member functions
   basic_stacktrace::basic_stacktrace
   basic_stacktrace::~basic_stacktrace
   basic_stacktrace::operator=
   basic_stacktrace::current
   basic_stacktrace::get_allocator
   Iterators
   basic_stacktrace::beginbasic_stacktrace::cbegin
   basic_stacktrace::endbasic_stacktrace::cend
   basic_stacktrace::rbeginbasic_stacktrace::crbegin
   basic_stacktrace::rendbasic_stacktrace::crend
   Capacity
   basic_stacktrace::empty
   basic_stacktrace::size
   basic_stacktrace::max_size
   Element access
   basic_stacktrace::operator[]
   basic_stacktrace::at
   Modifiers
   basic_stacktrace::swap
   Non-member functions
   operator==
   operator<=>
   swap(std::basic_stacktrace)
   to_string(std::basic_stacktrace)
   operator<<
   Helper classes
   hash<std::basic_stacktrace>
   formatter<std::basic_stacktrace>

   static basic_stacktrace current( const allocator_type& alloc =
                                        allocator_type() ) noexcept;
   (1) (since C++23)
   static basic_stacktrace current( size_type skip, const allocator_type&
   alloc =
                                        allocator_type() ) noexcept;
   (2) (since C++23)
   static basic_stacktrace current( size_type skip, size_type max_depth,

                                    const allocator_type& alloc =
                                        allocator_type() ) noexcept;
   (3) (since C++23)

   Let s[i] (0 <= i < n) denote the (i+1)-th stacktrace entry in the
   stacktrace of the current evaluation in the current thread of
   execution, where n is the count of the stacktrace entries in the
   stackentry.
   1) Attempts to create a basic_stacktrace consisting of s[0], s[1], ...,
   s[n - 1].
   2) Attempts to create a basic_stacktrace consisting of s[m], s[m + 1],
   ..., s[n - 1], where m is min(skip, n).
   3) Attempts to create a basic_stacktrace consisting of s[m], s[m + 1],
   ..., s[o - 1], where m is min(skip, n) and o is min(skip + max_depth,
   n). The behavior is undefined if the skip + max_depth < skip (i.e. the
   mathematical result of skip + max_depth overflows).

   In all cases, alloc is stored into the created basic_stacktrace and
   used to allocate the storage for stacktrace entries.

Parameters

   alloc - allocator to use for all memory allocations of the constructed
   basic_stacktrace
   skip - the number of stacktrace entries to skip
   max_depth - the maximum depth of the stacktrace entries

Return value

   If the allocation succeeds, the basic_stacktrace described above.

   Otherwise, an empty basic_stacktrace.

Example

   This section is incomplete
   Reason: no example

See also

   (constructor)
   creates a new basic_stacktrace
   (public member function)
   current
   [static]
   constructs a new source_location corresponding to the location of the
   call site
   (public static member function of std::source_location)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/utility/basic_st
   acktrace/current&oldid=139559"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 9 May 2022, at 01:17.
     * This page has been accessed 11,313 times.
