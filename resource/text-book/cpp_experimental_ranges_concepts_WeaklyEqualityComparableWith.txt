std::experimental::ranges::WeaklyEqualityComparableWith

   From cppreference.com
   < cpp | experimental | ranges

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Experimental
   Technical Specification
   Filesystem library (filesystem TS)
   Library fundamentals (library fundamentals TS)
   Library fundamentals 2 (library fundamentals TS v2)
   Library fundamentals 3 (library fundamentals TS v3)
   Extensions for parallelism (parallelism TS)
   Extensions for parallelism 2 (parallelism TS v2)
   Extensions for concurrency (concurrency TS)
   Extensions for concurrency 2 (concurrency TS v2)
   Concepts (concepts TS)
   Ranges (ranges TS)
   Reflection (reflection TS)
   Mathematical special functions (special functions TR)
   Experimental Non-TS
   Pattern Matching
   Linear Algebra
   std::execution
   Contracts
   2D Graphics

   Ranges
   Concepts
   General utilities
   Iterators
   Ranges
   Algorithms

   Concepts library
   Core language concepts
   Same
   DerivedFrom
   ConvertibleTo
   CommonReference
   Common

   Integral
   SignedIntegral
   UnsignedIntegral
   Assignable
   SwappableSwappableWith
   Object concepts
   Destructible
   Constructible
   DefaultConstructible
   MoveConstructible
   CopyConstructible

   Movable
   Copyable

   Semiregular
   Regular
   Comparison concepts
   Boolean
   WeaklyEqualityComparableWith
   EqualityComparableEqualityComparableWith
   StrictTotallyOrderedStrictTotallyOrderedWith
   Callable concepts
   InvocableRegularInvocable
   Predicate

   Relation

   StrictWeakOrder
   URNG concept
   UniformRandomNumberGenerator

   Defined in header <experimental/ranges/concepts>
   template< class T, class U >

   concept bool WeaklyEqualityComparableWith =
       requires(const std::remove_reference_t<T>& t,
                const std::remove_reference_t<U>& u) {
           { t == u } -> Boolean&&;
           { t != u } -> Boolean&&;
           { u == t } -> Boolean&&;
           { u != t } -> Boolean&&;
       };
                                                   (ranges TS)

   The concept WeaklyEqualityComparableWith<T, U> specifies that an object
   of type T and an object of type U can be compared for equality with
   each other (in either order) using both == and !=, and the results of
   the comparisons are consistent. More formally,
   WeaklyEqualityComparableWith<T, U> is satisfied only if given
     * t, an lvalue of type const std::remove_reference_t<T> and
     * u, an lvalue of type const std::remove_reference_t<U>,

   the following are true:
     * t == u, u == t, t != u,u != t have the same domain;
     * bool(u == t) == bool(t == u);
     * bool(t != u) == !bool(t == u); and
     * bool(u != t) == bool(t != u).

Equality preservation

   An expression is equality preserving if it results in equal outputs
   given equal inputs.
     * The inputs to an expression consist of its operands.
     * The outputs of an expression consist of its result and all operands
       modified by the expression (if any).

   Every expression required to be equality preserving is further required
   to be stable: two evaluations of such an expression with the same input
   objects must have equal outputs absent any explicit intervening
   modification of those input objects.

   Unless noted otherwise, every expression used in a requires-expression
   is required to be equality preserving and stable, and the evaluation of
   the expression may only modify its non-constant operands. Operands that
   are constant must not be modified.

Implicit expression variations

   A requires-expression that uses an expression that is non-modifying for
   some constant lvalue operand also implicitly requires additional
   variations of that expression that accept a non-constant lvalue or
   (possibly constant) rvalue for the given operand unless such an
   expression variation is explicitly required with differing semantics.
   These implicit expression variations must meet the same semantic
   requirements of the declared expression. The extent to which an
   implementation validates the syntax of the variations is unspecified.

See also

   EqualityComparableEqualityComparableWith
   specifies that operator == is an equivalence relation
   (concept)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/ran
   ges/concepts/WeaklyEqualityComparableWith&oldid=155321"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 22 July 2023, at 10:46.
     * This page has been accessed 9,922 times.
