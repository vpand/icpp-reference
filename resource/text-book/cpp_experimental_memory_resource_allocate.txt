std::experimental::pmr::memory_resource::allocate

   From cppreference.com
   < cpp | experimental | memory resource

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Library fundamentals
   experimental::optional
   experimental::any
   experimental::basic_string_view
   experimental::sample
   experimental::shared_ptr
   experimental::weak_ptr
   experimental::apply
   experimental::invocation_typeexperimental::raw_invocation_type
   experimental::search
   experimental::default_searcherexperimental::make_default_searcher
   experimental::boyer_moore_searcherexperimental::make_boyer_moore_search
   er
   experimental::boyer_moore_horspool_searcherexperimental::make_boyer_moo
   re_horspool_searcher
   Type-erased and polymorphic allocators
   Variable templates for type traits

   Polymorphic allocator library
   polymorphic_allocator
   Convenience aliases for containers using polymorphic_allocator
   Memory resource classes
   memory_resource
   synchronized_pool_resource
   unsynchronized_pool_resource
   monotonic_buffer_resource
   resource_adaptor
   Global memory resources
   new_delete_resource
   null_memory_resource
   get_default_resource
   set_default_resource
   Type-erased allocator support for existing classes
   function
   packaged_task
   promise

   std::experimental::pmr::memory_resource
   memory_resource::memory_resource
   Public member functions
   memory_resource::allocate
   memory_resource::deallocate
   memory_resource::is_equal
   Protected member functions
   memory_resource::do_allocate
   memory_resource::do_deallocate
   memory_resource::do_is_equal
   Non-member functions
   operator==operator!=

   void* allocate( std::size_t bytes, std::size_t alignment =
   alignof(std::max_align_t) );
   (library fundamentals TS)

   Allocates storage with a size of at least bytes bytes. The returned
   storage is aligned to the specified alignment if such alignment is
   supported, and to alignof(std::max_align_t) otherwise.

   Equivalent to return do_allocate(bytes, alignment);.

Exceptions

   Throws an exception if storage of the requested size and alignment
   cannot be obtained.

See also

   do_allocate
   [virtual]
   allocates memory
   (virtual protected member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/mem
   ory_resource/allocate&oldid=154992"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 17 July 2023, at 07:04.
     * This page has been accessed 10,023 times.
