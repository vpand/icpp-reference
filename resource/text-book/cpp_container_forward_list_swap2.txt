std::swap(std::forward_list)

   From cppreference.com
   < cpp | container | forward list


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::forward_list
   Member functions
   forward_list::forward_list
   forward_list::~forward_list

   forward_list::operator=
   forward_list::assign
   forward_list::assign_range
   (C++23)
   forward_list::get_allocator
   Element access
   forward_list::front
   Iterators
   forward_list::before_beginforward_list::cbefore_begin
   forward_list::beginforward_list::cbegin
   forward_list::endforward_list::cend
   Capacity
   forward_list::empty
   forward_list::max_size
   Modifiers
   forward_list::clear
   forward_list::emplace_front
   forward_list::push_front
   forward_list::insert_after
   forward_list::emplace_after
   forward_list::erase_after
   forward_list::insert_range_after
   (C++23)
   forward_list::prepend_range
   (C++23)
   forward_list::pop_front
   forward_list::resize
   forward_list::swap
   Operations
   forward_list::merge
   forward_list::splice_after
   forward_list::removeforward_list::remove_if
   forward_list::reverse
   forward_list::unique
   forward_list::sort
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (C++11)(C++11)(until C++20)(C++11)(until C++20)(C++11)(until
   C++20)(C++11)(until C++20)(C++11)(until C++20)(C++20)
   swap(std::forward_list)
   (C++11)
   erase(std::forward_list)erase_if(std::forward_list)
   (C++20)(C++20)
   Deduction guides(C++17)

   Defined in header <forward_list>
   template< class T, class Alloc >

   void swap( std::forward_list<T, Alloc>& lhs,
              std::forward_list<T, Alloc>& rhs );
   (since C++11)
   (until C++17)
   template< class T, class Alloc >

   void swap( std::forward_list<T, Alloc>& lhs,
              std::forward_list<T, Alloc>& rhs )
                  noexcept(/* see below */);
                                   (since C++17)

   Specializes the std::swap algorithm for std::forward_list. Swaps the
   contents of lhs and rhs. Calls lhs.swap(rhs).

Parameters

   lhs, rhs - containers whose contents to swap

Return value

   (none)

Complexity

   Constant.

Exceptions

   noexcept specification:
   noexcept(noexcept(lhs.swap(rhs)))
   (since C++17)

Example

   Run this code
#include <algorithm>
#include <iostream>
#include <forward_list>

int main()
{
    std::forward_list<int> alice{1, 2, 3};
    std::forward_list<int> bob{7, 8, 9, 10};

    auto print = [](const int& n) { std::cout << ' ' << n; };

    // Print state before swap
    std::cout << "Alice:";
    std::for_each(alice.begin(), alice.end(), print);
    std::cout << "\n" "Bob  :";
    std::for_each(bob.begin(), bob.end(), print);
    std::cout << '\n';

    std::cout << "-- SWAP\n";
    std::swap(alice, bob);

    // Print state after swap
    std::cout << "Alice:";
    std::for_each(alice.begin(), alice.end(), print);
    std::cout << "\n" "Bob  :";
    std::for_each(bob.begin(), bob.end(), print);
    std::cout << '\n';
}

   Output:
Alice: 1 2 3
Bob  : 7 8 9 10
-- SWAP
Alice: 7 8 9 10
Bob  : 1 2 3

See also

   swap
   swaps the contents
   (public member function)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/forwar
   d_list/swap2&oldid=156311"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 4 August 2023, at 15:08.
     * This page has been accessed 21,033 times.
