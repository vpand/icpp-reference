std::experimental::pmr::synchronized_pool_resource::do_allocate

   From cppreference.com
   < cpp | experimental | synchronized pool resource

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Library fundamentals
   experimental::optional
   experimental::any
   experimental::basic_string_view
   experimental::sample
   experimental::shared_ptr
   experimental::weak_ptr
   experimental::apply
   experimental::invocation_typeexperimental::raw_invocation_type
   experimental::search
   experimental::default_searcherexperimental::make_default_searcher
   experimental::boyer_moore_searcherexperimental::make_boyer_moore_search
   er
   experimental::boyer_moore_horspool_searcherexperimental::make_boyer_moo
   re_horspool_searcher
   Type-erased and polymorphic allocators
   Variable templates for type traits

   Polymorphic allocator library
   polymorphic_allocator
   Convenience aliases for containers using polymorphic_allocator
   Memory resource classes
   memory_resource
   synchronized_pool_resource
   unsynchronized_pool_resource
   monotonic_buffer_resource
   resource_adaptor
   Global memory resources
   new_delete_resource
   null_memory_resource
   get_default_resource
   set_default_resource
   Type-erased allocator support for existing classes
   function
   packaged_task
   promise

   std::experimental::pmr::synchronized_pool_resource
   synchronized_pool_resource::synchronized_pool_resource
   synchronized_pool_resource::~synchronized_pool_resource
   Public member functions
   synchronized_pool_resource::release
   synchronized_pool_resource::upstream_resource
   synchronized_pool_resource::options
   Protected member functions
   synchronized_pool_resource::do_allocate
   synchronized_pool_resource::do_deallocate
   synchronized_pool_resource::do_is_equal

   virtual void* do_allocate( std::size_t bytes, std::size_t alignment );
   (library fundamentals TS)

   Allocates storage.

   If the pool selected for a block of size bytes is unable to satisfy the
   request from its internal data structures, calls allocate() on the
   upstream memory resource to obtain memory.

   If the size requested is larger than what the largest pool can handle,
   memory is allocated by calling allocate() on the upstream memory
   resource.

Return value

   A pointer to allocated storage of at least bytes bytes in size, aligned
   to the specified alignment if such alignment is supported, and to
   alignof(std::max_align_t) otherwise.

Exceptions

   Throws nothing unless calling allocate() on the upstream memory
   resource throws.

See also

   allocate
   allocates memory
   (public member function of std::experimental::pmr::memory_resource)
   do_allocate
   [virtual]
   allocates memory
   (virtual protected member function of
   std::experimental::pmr::memory_resource)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/experimental/syn
   chronized_pool_resource/do_allocate&oldid=156336"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 6 August 2023, at 05:48.
     * This page has been accessed 7,621 times.
