operator<<(std::basic_string_view)

   From cppreference.com
   < cpp | string | basic string view

   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Strings library
   Null-terminated strings
   Byte strings
   Multibyte strings
   Wide strings
   Classes
   basic_string
   basic_string_view
   (C++17)
   char_traits

   std::basic_string_view
   Member functions
   basic_string_view::basic_string_view

   basic_string_view::operator=
   Iterators
   basic_string_view::beginbasic_string_view::cbegin
   basic_string_view::endbasic_string_view::cend
   basic_string_view::rbeginbasic_string_view::crbegin
   basic_string_view::rendbasic_string_view::crend
   Element access
   basic_string_view::at
   basic_string_view::operator[]
   basic_string_view::front
   basic_string_view::back
   basic_string_view::data
   Capacity
   basic_string_view::sizebasic_string_view::length
   basic_string_view::max_size
   basic_string_view::empty
   Modifiers
   basic_string_view::remove_prefix
   basic_string_view::remove_suffix
   basic_string_view::swap
   Operations
   basic_string_view::copy
   basic_string_view::substr
   basic_string_view::compare
   basic_string_view::starts_with
   (C++20)
   basic_string_view::ends_with
   (C++20)
   basic_string_view::contains
   (C++23)
   basic_string_view::find
   basic_string_view::rfind
   basic_string_view::find_first_of
   basic_string_view::find_last_of
   basic_string_view::find_first_not_of
   basic_string_view::find_last_not_of
   Constants
   basic_string_view::npos
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   operator<<
   operator""sv
   Helper classes
   hash<std::string_view>hash<std::wstring_view>hash<std::u8string_view>ha
   sh<std::u16string_view>hash<std::u32string_view>
   (C++20)
   Deduction guides(C++20)

   Defined in header <string_view>
   template< class CharT, class Traits >

   std::basic_ostream<CharT, Traits>&
       operator<<( std::basic_ostream<CharT, Traits>& os,
                   std::basic_string_view<CharT, Traits> v );
                                        (since C++17)

   Behaves as a FormattedOutputFunction. After constructing and checking
   the sentry object, determines the output format padding.

   Then stores each character from the resulting sequence seq (the
   contents of v with padding) to the output stream os as if by calling
   os.rdbuf()->sputn(seq, n), where n is std::max(os.width(), str.size()).

   Finally, calls os.width(0) to cancel the effects of std::setw, if any.

Exceptions

   May throw std::ios_base::failure if an exception is thrown during
   output.

Parameters

   os - a character output stream
   v  - the view to be inserted

Return value

   os

Example

   Run this code
#include <iomanip>
#include <iostream>
#include <string_view>

int main()
{
    constexpr std::string_view s{"abc"};
    constexpr int width{5};

    // fill/left/right properties are kept until changed
    std::cout << std::setfill('-');
    std::cout << std::left;

    std::cout << '[' << std::setw(width) << s << "]\n";
    std::cout << '[' << std::setw(width) << s << "]\n";

    std::cout << std::right;
    std::cout << '[' << std::setw(width) << s << "]\n";

    // width is reset after each call
    std::cout << '[' << s << "]\n";
}

   Output:
[abc--]
[abc--]
[--abc]
[abc]

See also

   operator<<operator>>
   performs stream input and output on strings
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/string/basic_str
   ing_view/operator_ltlt&oldid=148460"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 22 February 2023, at 16:50.
     * This page has been accessed 26,652 times.
