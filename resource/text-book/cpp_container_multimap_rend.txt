std::multimap<Key,T,Compare,Allocator>::rend,
std::multimap<Key,T,Compare,Allocator>::crend

   From cppreference.com
   < cpp | container | multimap


   C++
   Compiler support
   Freestanding and hosted
   Language
   Standard library
   Standard library headers
   Named requirements
   Feature test macros (C++20)
   Language support library
   Concepts library (C++20)
   Metaprogramming library (C++11)
   Diagnostics library
   General utilities library
   Strings library
   Containers library
   Iterators library
   Ranges library (C++20)
   Algorithms library
   Numerics library
   Localizations library
   Input/output library
   Filesystem library (C++17)
   Regular expressions library (C++11)
   Concurrency support library (C++11)
   Technical specifications
   Symbols index
   External libraries

   Containers library
   Sequence
   array
   (C++11)
   vector
   vector<bool>
   deque
   forward_list
   (C++11)
   list
   Associative
   set
   multiset
   map
   multimap
   Unordered associative
   unordered_set
   (C++11)
   unordered_multiset
   (C++11)
   unordered_map
   (C++11)
   unordered_multimap
   (C++11)
   Adaptors
   stack
   queue
   priority_queue
   flat_set
   (C++23)
   flat_multiset
   (C++23)
   flat_map
   (C++23)
   flat_multimap
   (C++23)
   Views
   span
   (C++20)
   mdspan
   (C++23)
   Iterator invalidation
   Member function table
   Non-member function table

   std::multimap
   Member functions
   multimap::multimap
   multimap::~multimap
   multimap::operator=
   multimap::get_allocator
   Iterators
   multimap::beginmultimap::cbegin
   (C++11)
   multimap::endmultimap::cend
   (C++11)
   multimap::rbeginmultimap::crbegin
   (C++11)
   multimap::rendmultimap::crend
   (C++11)
   Capacity
   multimap::size
   multimap::max_size
   multimap::empty
   Modifiers
   multimap::clear
   multimap::insert
   multimap::erase
   multimap::swap
   multimap::merge
   (C++17)
   multimap::insert_range
   (C++23)
   multimap::emplace
   (C++11)
   multimap::emplace_hint
   (C++11)
   multimap::extract
   (C++17)
   Lookup
   multimap::count
   multimap::find
   multimap::contains
   (C++20)
   multimap::equal_range
   multimap::lower_bound
   multimap::upper_bound
   Observers
   multimap::key_comp
   multimap::value_comp
   Non-member functions
   operator==operator!=operator<operator>operator<=operator>=operator<=>
   (until C++20)(until C++20)(until C++20)(until C++20)(until
   C++20)(C++20)
   std::swap(std::multimap)
   erase_if(std::multimap)
   (C++20)
   Deduction guides(C++17)

   reverse_iterator rend();
   (1)                                           (noexcept since C++11)
   const_reverse_iterator rend() const;
   (2)                                           (noexcept since C++11)
   const_reverse_iterator crend() const noexcept;
   (3)                                           (since C++11)

   Returns a reverse iterator to the element following the last element of
   the reversed multimap. It corresponds to the element preceding the
   first element of the non-reversed multimap. This element acts as a
   placeholder, attempting to access it results in undefined behavior.

   range-rbegin-rend.svg

Parameters

   (none)

Return value

   Reverse iterator to the element following the last element.

Complexity

   Constant.

Notes

   libc++ backports crend() to C++98 mode.

Example

   Run this code
#include <chrono>
#include <iomanip>
#include <iostream>
#include <string_view>
#include <map>

using namespace std::chrono;

int main()
{
    const std::multimap<year_month_day, int> messages
    {
        {February/17/2023, 10},
        {February/17/2023, 20},
        {February/16/2022, 30},
        {October/22/2022, 40},
        {June/14/2022, 50},
        {November/23/2021, 60},
        {December/10/2022, 55},
        {December/12/2021, 45},
        {April/1/2020, 42},
        {April/1/2020, 24}
    };

    std::cout << "Messages received (date order is reversed):\n";
    for (auto it = messages.crbegin(); it != messages.crend(); ++it)
        std::cout << it->first << " : " << it->second << '\n';
}

   Possible output:
Messages received (date order is reversed):
2023-02-17 : 20
2023-02-17 : 10
2022-12-10 : 55
2022-10-22 : 40
2022-06-14 : 50
2022-02-16 : 30
2021-12-12 : 45
2021-11-23 : 60
2020-04-01 : 24
2020-04-01 : 42

See also

   rbegincrbegin
   (C++11)
   returns a reverse iterator to the beginning
   (public member function)
   rendcrend
   (C++14)
   returns a reverse end iterator for a container or array
   (function template)
   Retrieved from
   "https://en.cppreference.com/mwiki/index.php?title=cpp/container/multim
   ap/rend&oldid=127537"

Navigation

     * Online version
     * Offline version retrieved 2024-06-10 08:17.

     * This page was last modified on 18 March 2021, at 23:04.
     * This page has been accessed 24,569 times.
